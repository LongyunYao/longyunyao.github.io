<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2018网易校招运营开发工程师编程第一题</title>
    <url>/2017/09/16/2018%E7%BD%91%E6%98%93%E6%A0%A1%E6%8B%9B%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%BC%96%E7%A8%8B%E7%AC%AC%E4%B8%80%E9%A2%98/</url>
    <content><![CDATA[<p>由于之前准备不充分，没有做大量的编程练习，在实际编程过程中算法设计出现疏漏，最终导致结果没有AC。</p>
<p>题目很简单，字符串编码问题。 <strong>一个长度不超过6的字符串，内部不会重复且所有字母已经按照字典序排好。接下来按照字典序从短到长对这些字符串进行编码，接下来让你输入一个字符串，输出对应的编码即可。</strong> eg: a为1，z为26，ab为27，az为51，bc为52。。。</p>
<p>思路和之前在牛客网做过的编码题类似，<strong>跳过某些的字符串，直到定位到该字符串为止</strong>。</p>
<p>举个例子：</p>
<p>字符串为forx。它<strong>跳过了所有的长度为1，长度为2，长度为3的字符串</strong>，以及<strong>所有长度为4的字符串中a<del>e开头的，fg</del>fn开头的，fop~foq开头的字符串</strong>。最后检查从fors到forx的序号就行了。</p>
<p>刚开始思路出了点问题，跳过的过程中，我跳过了fa~fn这类包括了fa但是不可能出现的情况，结果导致最后的算法出来的结果并不如意，并且一直很异常。直到笔试结束，我也没及时跳出这个坑。</p>
<p>笔试结束后我重新审查我的算法才发现了这个bug，并最终解决。最终的代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C_a_b</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(b == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> result = <span class="number">1</span>, num = a;</span><br><span class="line">	<span class="keyword">while</span>(num&gt;(a-b))</span><br><span class="line">		result *= num--;</span><br><span class="line"></span><br><span class="line">	num = b;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(num&gt;<span class="number">0</span>) result /= num--;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> N, len, number = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">string</span> input_str;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">	<span class="keyword">while</span>(N--)&#123;</span><br><span class="line">		number = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; input_str;</span><br><span class="line">		len = input_str.length();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(len == <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; input_str[<span class="number">0</span>] -<span class="string">'a'</span> + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 跳过所有长度小于该字符串的数目</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;len; ++i)&#123;</span><br><span class="line">			number += C_a_b(<span class="number">26</span>, i);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 逐次跳过，eg：forx，首先跳过a开头的到e开头的所有长度为4的字符串（C_25_3累加到C_21_3）</span></span><br><span class="line">		<span class="comment">// 然后跳过fg开头到fn的所有长度为3的字符串（C_19_2累加到C_12_2）</span></span><br><span class="line">		<span class="comment">// 然后跳过fop到foq（C_10_1累加到C_9）</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = len<span class="number">-1</span>, j = <span class="number">25</span>; i&gt;<span class="number">0</span>; --i)&#123;</span><br><span class="line">			<span class="keyword">for</span>(; j != <span class="string">'z'</span> - input_str[len-i<span class="number">-1</span>]; j--)&#123;</span><br><span class="line">				number += C_a_b(j, i);</span><br><span class="line">			&#125;</span><br><span class="line">			j--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 将最后一位的值算出来。eg：forx，则先算出从fors开始计数到forx时，对应的值</span></span><br><span class="line">		number += (input_str[len<span class="number">-1</span>] - input_str[len<span class="number">-2</span>]);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; number &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>目测应该没够ac。特殊测试样例为a，z，ab，az，bc（和前面样例差一），bz，yz，abc（和前面样例差一），abz，acd（和前面样例差一）</p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>网易</tag>
        <tag>校招</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>blog的文件迁移</title>
    <url>/2017/05/19/GhostBlog%E7%9A%84%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<p>因为头一次自己搭建博客服务器，对平台的选用并不清楚。知乎上误打误撞碰见了Ghost，也就用着试试看了。</p>
<h2 id="事件起因"><a href="#事件起因" class="headerlink" title="事件起因"></a>事件起因</h2><p>由于我的服务器本来部署在自己寝室的PC上，部分blog也提前写在了本地文件夹中，无奈一直找不到文件的存放位置。所以博客的迁移一直让我头疼。</p>
<h2 id="迁移过程"><a href="#迁移过程" class="headerlink" title="迁移过程"></a>迁移过程</h2><p>整个迁移过程完全按照官方手册给的知道方法来——虽然官方手册藏得比较深。</p>
<p>官方手册地址：<a href="https://help.ghost.org/hc/en-us/articles/224112927-Import-Export-Data" target="_blank" rel="noopener">https://help.ghost.org/hc/en-us/articles/224112927-Import-Export-Data</a></p>
<p>具体步骤为：</p>
<ul>
<li>进入需要备份的服务器后台管理界面</li>
<li>进入Labs</li>
<li>选择导出成json文件</li>
<li>进入需要导入的服务器的后台管理界面</li>
<li>进入Labs，选择import</li>
<li>可能在import的时候，选择（.所有文件），否则找不到json文件</li>
</ul>
<p>另，附上Ghost的中文网址：<a href="http://www.ghostchina.com/" target="_blank" rel="noopener">http://www.ghostchina.com/</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Ghost</tag>
        <tag>blog</tag>
        <tag>文件迁移</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的Integer类方法解读</title>
    <url>/2020/06/05/Java%E7%9A%84Integer%E7%B1%BB%E6%96%B9%E6%B3%95%E8%A7%A3%E8%AF%BB/</url>
    <content><![CDATA[<h1 id="highestOneBit"><a href="#highestOneBit" class="headerlink" title="highestOneBit"></a>highestOneBit</h1><p>获取一个int类型的二进制取整</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">highestOneBit</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// HD, Figure 3-1</span></span><br><span class="line">	i |= (i &gt;&gt; <span class="number">1</span>);</span><br><span class="line">	i |= (i &gt;&gt; <span class="number">2</span>);</span><br><span class="line">	i |= (i &gt;&gt; <span class="number">4</span>);</span><br><span class="line">	i |= (i &gt;&gt; <span class="number">8</span>);</span><br><span class="line">	i |= (i &gt;&gt; <span class="number">16</span>);</span><br><span class="line">	<span class="keyword">return</span> i - (i &gt;&gt;&gt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码粗看会不理解实现原理，但是跟着推导一次就能理解算法的思想。假定一个int的二进制表达式是<code>100001000</code>，这个常数的迭代过程如下：</p>
<ul>
<li>第一次结束 <code>100001000</code> -&gt; <code>110001100</code></li>
<li>第二次结束 <code>110001100</code> -&gt; <code>111101111</code></li>
<li>第三次结束 <code>111101111</code> -&gt; <code>111111111</code></li>
<li>第四次结束 <code>111111111</code> -&gt; <code>111111111</code></li>
<li>第五次结束 <code>111111111</code> -&gt; <code>111111111</code></li>
</ul>
<p>然后返回值为<code>111111111</code>-<code>11111111</code> = <code>100000000</code>。</p>
<p>整个实现过程中，即为不停的将首位1和后续的位进行与操作，并且首位1第一次复制成2个，第二次2*2复制成4个，第三次复制成2*4 = 8个（如果这个int大于2^8)，以此类推，按照指数形式将首位1向后与之后，我们最后就能让所有位全部变成1。最后右移1位然后相减，去掉首位之后的所有的1即可。</p>
<p>此种实现方式，简化了迭代次数，并且由于充分利用上一次的赋值结果，所以不用考虑第三位是否成功被赋值，第五位成功被赋值等（因为在(int)log2(n)+1)次会被赋值。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Integer</tag>
        <tag>源代码</tag>
      </tags>
  </entry>
  <entry>
    <title>Lambda表达式与函数式接口</title>
    <url>/2020/06/05/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8E%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>[toc]</p>
<h1 id="Lambda表达式Java函数式接口"><a href="#Lambda表达式Java函数式接口" class="headerlink" title="Lambda表达式Java函数式接口"></a>Lambda表达式Java函数式接口</h1><p>都9012年了，这篇博文代码看看5000年前4012年发布的Java 8新引入的Lambda表达式到底是个什么鬼。</p>
<h2 id="简述Lambda表达式"><a href="#简述Lambda表达式" class="headerlink" title="简述Lambda表达式"></a>简述Lambda表达式</h2><p>Lambda表达式并不是Java 8特有的特性，其设计初衷是用于一些特定代码中，已知固定入参和固定返回值的时候，动态生成的一种函数。</p>
<p>举个栗子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Var3 <span class="title">func</span><span class="params">(Var1 var1, Var2 var2)</span> </span>&#123;</span><br><span class="line">Var3 var3 = doSomeThing(var1, var2);</span><br><span class="line"><span class="keyword">return</span> var3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码是我们常见的Java代码格式，假如说我们已经设定这个函数只会被在特定位置被调用，或者换种说法，我们假设<code>func</code>函数仅仅只会作为<code>func2(Var3 var3)</code>的入参。同时如果我们把<code>func</code>这个函数的声明放到<code>func2</code>的入参时声明，那此时我们此时调用时，其实这个函数是叫<code>func</code>还是叫<code>funcA</code>还是叫<code>ABCD</code>已经无所谓了。</p>
<p>因此我们就可以省略这个函数名，将其替换成<code>-&gt;</code>，由此将上述函数省略为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Var3 (Var1 var1, Var2 var2) -&gt; &#123;</span><br><span class="line">Var3 var3 = doSomeThing(var1, var2);</span><br><span class="line"><span class="keyword">return</span> var3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接下来由于我们已知<code>func2(Var3 var3)</code>的入参肯定为Var3类型，所以上述代码又可以进一步省略：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">(Var1 var1, Var2 var2) -&gt; &#123;</span><br><span class="line">Var3 var3 = doSomeThing(var1, var2);</span><br><span class="line"><span class="keyword">return</span> var3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同理由于我们已知<code>func</code>的入参类型肯定为<code>Var1</code>和<code>Var2</code>，于是我们继续省略：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">(var1, var2) -&gt; &#123;</span><br><span class="line">Var3 var3 = doSomeThing(var1, var2);</span><br><span class="line"><span class="keyword">return</span> var3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后由于我们如果整个函数内部只有一行操作的话，则可以知道这个操作的返回值肯定是这一行的操作结果，因此我们继续省略：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">(var1, var2) -&gt; doSomeThing(var1, var2);</span><br></pre></td></tr></table></figure>

<p>最后，假如我们初始函数是：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Var3 (Var1 var1) -&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> var1.doSomeThing();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在我们简写成上述常见的表达式之后：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">var1 -&gt; var1.doSomeThing();</span><br></pre></td></tr></table></figure>

<p>由于我们知道入参只有一个，并且操作就是调用这个参数的一个子方法，而且这个入参叫做<code>var1</code>还是<code>ABCD</code>都无所谓，这个时候我们就可以极致缩写：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Var1::doSomeThing()</span><br></pre></td></tr></table></figure>

<p>意味着对这个表达式的入参直接调用<code>Var1</code>类的<code>doSomeThing</code>，然后将结果返回。</p>
<p>到此，整个Lambda写法的产生原因我们就已经知道了，不理解的可以重新回看整个缩写过程。</p>
<p>注意这里的推理过程是所有支持Lambda表达式的开发语言通用的精简思路，之后切换语言遇到Lambda表达式，我们需要用同样的思路面对。</p>
<p><em>实不相瞒，上述简化过程我就是在Python教程中知道的。</em></p>
<h2 id="Java中Lambda表达式的好处"><a href="#Java中Lambda表达式的好处" class="headerlink" title="Java中Lambda表达式的好处"></a>Java中Lambda表达式的好处</h2><p>在我们Java 8之前，我们可能暂时还没有体会到Lambda表达式的好处，但是Java 8新引入的<code>Stream</code>和<code>Optional</code>这两个类，让Java 8引入Lambda表达式成为一种趋势。</p>
<p>继续举个栗子，假如我们现在有一个多层级的对象，我们需要获取其最底层的一个字段时，使用Optional类可以比较方便的判定，相关教程见我另一个帖子<a href="http://3ms.huawei.com/km/blogs/details/6283229?l=zh-cn" target="_blank" rel="noopener">《Optional工具类》</a>。</p>
<p>这里我们先不要发散，假如我们使用Optional取一个中间可能存在null的多层级对象时，假设我们现在还不知道Lambda表达式这个东西，而是单纯使用Optional所有方法提供的入参直接暴力实现，那么最后的代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainFunc</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Test2 test2;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Test2 <span class="title">getTest2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> test2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTest2</span><span class="params">(Test2 test2)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.test2 = test2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> List&lt;Test3&gt; test3;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;Test3&gt; <span class="title">getTest3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> test3;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTest3</span><span class="params">(List&lt;Test3&gt; test3)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.test3 = test3;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test3</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStr</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.str = str;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Test1 test1 = <span class="keyword">new</span> Test1();</span><br><span class="line">        Test2 test2 = <span class="keyword">new</span> Test2();</span><br><span class="line">        test1.setTest2(test2);</span><br><span class="line">        List&lt;Test3&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> Test3());</span><br><span class="line">        test2.setTest3(list);</span><br><span class="line">        String str = <span class="string">"123"</span>;</span><br><span class="line">        str.concat(<span class="string">"456"</span>);</span><br><span class="line">        list.get(<span class="number">0</span>).setStr(str);</span><br><span class="line">        Optional&lt;String&gt; opt = Optional.ofNullable(test1).map(<span class="keyword">new</span> Function&lt;Test1, Test2&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Test2 <span class="title">apply</span><span class="params">(Test1 test1)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> test1.getTest2();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).map(<span class="keyword">new</span> Function&lt;Test2, List&lt;Test3&gt;&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> List&lt;Test3&gt; <span class="title">apply</span><span class="params">(Test2 test2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> test2.getTest3();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).map(<span class="keyword">new</span> Function&lt;List&lt;Test3&gt;, Test3&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Test3 <span class="title">apply</span><span class="params">(List&lt;Test3&gt; list)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> list != <span class="keyword">null</span> &amp;&amp; list.size() &gt; <span class="number">0</span> ? list.get(<span class="number">0</span>) : <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).map(<span class="keyword">new</span> Function&lt;Test3, String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">apply</span><span class="params">(Test3 test3)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> test3.getStr();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (opt.isPresent()) &#123;</span><br><span class="line">            System.out.println(opt.get());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>整段代码中，由于我们按照<code>Optional.map</code>的要求，通过实现Fuction接口函数，并且重写其apply函数，从而实现业务诉求。但是这种实现方式阅读费力，并且撰写辛苦，而所有map中实质的操作却仅仅只有一行，这种代码既不优雅，也不是我们引入Optional的初衷。</p>
<p>在这种情况下，我们使用Lambda表达式替代上述代码中test4的实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Test1 test1 = <span class="keyword">new</span> Test1();</span><br><span class="line">    Test2 test2 = <span class="keyword">new</span> Test2();</span><br><span class="line">    test1.setTest2(test2);</span><br><span class="line">    List&lt;Test3&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> Test3());</span><br><span class="line">    test2.setTest3(list);</span><br><span class="line">    String str = <span class="string">"123"</span>;</span><br><span class="line">    str.concat(<span class="string">"456"</span>);</span><br><span class="line">    list.get(<span class="number">0</span>).setStr(str);</span><br><span class="line">    <span class="keyword">if</span> (opt.isPresent()) &#123;</span><br><span class="line">        System.out.println(opt.get());</span><br><span class="line">    &#125;</span><br><span class="line">    Optional&lt;String&gt; opt = Optional.ofNullable(test1)</span><br><span class="line">            .map(t1 -&gt; t1.getTest2())</span><br><span class="line">            .map(t2 -&gt; t2.getTest3())</span><br><span class="line">            .map(t3List -&gt; t3List != <span class="keyword">null</span> &amp;&amp; t3List.size() &gt; <span class="number">0</span> ? t3List.get(<span class="number">0</span>) : <span class="keyword">null</span>)</span><br><span class="line">            .map(t3 -&gt; t3.getStr());</span><br><span class="line">    <span class="keyword">if</span> (opt.isPresent()) &#123;</span><br><span class="line">        System.out.println(opt.get());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后是极致简写方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Test1 test1 = <span class="keyword">new</span> Test1();</span><br><span class="line">    Test2 test2 = <span class="keyword">new</span> Test2();</span><br><span class="line">    test1.setTest2(test2);</span><br><span class="line">    List&lt;Test3&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> Test3());</span><br><span class="line">    test2.setTest3(list);</span><br><span class="line">    String str = <span class="string">"123"</span>;</span><br><span class="line">    str.concat(<span class="string">"456"</span>);</span><br><span class="line">    list.get(<span class="number">0</span>).setStr(str);</span><br><span class="line">    <span class="keyword">if</span> (opt.isPresent()) &#123;</span><br><span class="line">        System.out.println(opt.get());</span><br><span class="line">    &#125;</span><br><span class="line">    Optional&lt;String&gt; opt = Optional.ofNullable(test1)</span><br><span class="line">            .map(Test1::getTest2)</span><br><span class="line">            .map(Test2::getTest3)</span><br><span class="line">            .map(test3 -&gt; test3 != <span class="keyword">null</span> &amp;&amp; test3.size() &gt; <span class="number">0</span> ? test3.get(<span class="number">0</span>) : <span class="keyword">null</span>)</span><br><span class="line">            .map(Test3::getStr);</span><br><span class="line">    <span class="keyword">if</span> (opt.isPresent()) &#123;</span><br><span class="line">        System.out.println(opt.get());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>整个实现上瞬间清爽很多，并且代码量非常少。</p>
<h2 id="Java中Lambda的实现原理"><a href="#Java中Lambda的实现原理" class="headerlink" title="Java中Lambda的实现原理"></a>Java中Lambda的实现原理</h2><p>其实在上述代码优化过程中，从最开始直接在map方法中实现函数接口，到直接替换成Lambda表达式，我们省略了一个推导步骤：</p>
<p>首先尝试将函数接口的实现抽出去：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Test1 test1 = <span class="keyword">new</span> Test1();</span><br><span class="line">    Test2 test2 = <span class="keyword">new</span> Test2();</span><br><span class="line">    test1.setTest2(test2);</span><br><span class="line">    List&lt;Test3&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> Test3());</span><br><span class="line">    test2.setTest3(list);</span><br><span class="line">    String str = <span class="string">"123"</span>;</span><br><span class="line">    str.concat(<span class="string">"456"</span>);</span><br><span class="line">    list.get(<span class="number">0</span>).setStr(str);</span><br><span class="line">    Function&lt;Test1, Test2&gt; func1 = <span class="keyword">new</span> Function&lt;Test1, Test2&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Test2 <span class="title">apply</span><span class="params">(Test1 test1)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> test1.getTest2();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Function&lt;Test2, List&lt;Test3&gt;&gt; func2 = <span class="keyword">new</span> Function&lt;Test2, List&lt;Test3&gt;&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;Test3&gt; <span class="title">apply</span><span class="params">(Test2 test2)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> test2.getTest3();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Function&lt;List&lt;Test3&gt;, Test3&gt; func3 = <span class="keyword">new</span> Function&lt;List&lt;Test3&gt;, Test3&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Test3 <span class="title">apply</span><span class="params">(List&lt;Test3&gt; list)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> list != <span class="keyword">null</span> &amp;&amp; list.size() &gt; <span class="number">0</span> ? list.get(<span class="number">0</span>) : <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Function&lt;Test3, String&gt; func4 = <span class="keyword">new</span> Function&lt;Test3, String&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">apply</span><span class="params">(Test3 test3)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> test3.getStr();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Optional&lt;String&gt; opt = Optional.ofNullable(test1).map(func1).map(func2).map(func3).map(func4);</span><br><span class="line">    <span class="keyword">if</span> (opt.isPresent()) &#123;</span><br><span class="line">        System.out.println(opt.get());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后我们有已经知道map中实际是可以直接填Lambda表达式的，这里我们尝试将Lambda表达式赋值给func1、func2、func3、func4：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Test1 test1 = <span class="keyword">new</span> Test1();</span><br><span class="line">    Test2 test2 = <span class="keyword">new</span> Test2();</span><br><span class="line">    test1.setTest2(test2);</span><br><span class="line">    List&lt;Test3&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> Test3());</span><br><span class="line">    test2.setTest3(list);</span><br><span class="line">    String str = <span class="string">"123"</span>;</span><br><span class="line">    str.concat(<span class="string">"456"</span>);</span><br><span class="line">    list.get(<span class="number">0</span>).setStr(str);</span><br><span class="line">    Function&lt;Test1, Test2&gt; func1 = Test1::getTest2;</span><br><span class="line">    Function&lt;Test2, List&lt;Test3&gt;&gt; func2 = Test2::getTest3;</span><br><span class="line">    Function&lt;List&lt;Test3&gt;, Test3&gt; func3 = (l) -&gt; l != <span class="keyword">null</span> &amp;&amp; l.size() &gt; <span class="number">0</span> ? l.get(<span class="number">0</span>) : <span class="keyword">null</span>;</span><br><span class="line">    Function&lt;Test3, String&gt; func4 = Test3::getStr;</span><br><span class="line">    Optional&lt;String&gt; opt = Optional.ofNullable(test1).map(func1).map(func2).map(func3).map(func4);</span><br><span class="line">    <span class="keyword">if</span> (opt.isPresent()) &#123;</span><br><span class="line">        System.out.println(opt.get());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OK，到这里，我们可以发现发现所谓Lambda表达式，实际上就是自己帮你实现了一个函数式接口而已，这部分实现过程由Java 8之前你来完成，优化到了编译器自己完成，从而实现了代码上的优雅。</p>
<p>这里我们引申一下，在Java中，函数接口有 3 条重要法则：</p>
<ul>
<li>一个函数接口只有一个抽象方法。</li>
<li>在 Object 类中属于公共方法的抽象方法不会被视为单一抽象方法。</li>
<li>函数接口可以有默认方法和静态方法。</li>
</ul>
<p>任何满足单一抽象方法法则的接口，都会被自动视为函数接口。这包括 Runnable 和 Callable 等传统接口，以及您自己构建的自定义接口。</p>
<blockquote>
<p>上述三原则引用自<a href="https://www.ibm.com/developerworks/cn/java/j-java8idioms7/index.html" target="_blank" rel="noopener">《Java 8 习惯用语，第 7 部分 —— 函数接口》</a></p>
</blockquote>
<p>接下来，让我开始尝试看看Java编译器（JDK）再给我们编译Lambda表达式时做了哪些优化动作。</p>
<h3 id="Java1-8引入的新函数式接口"><a href="#Java1-8引入的新函数式接口" class="headerlink" title="Java1.8引入的新函数式接口"></a>Java1.8引入的新函数式接口</h3><p>所有函数式接口见java.util.function包，这里只挑取几个典型的。</p>
<p><strong>Consumer接口</strong>：提供一个<code>void accept(T t);</code>函数，一般我们的函数只有一个入参，没有返回值时，可以实现该接口</p>
<p><strong>Function接口</strong>：提供一个<code>R apply(T t);</code>函数，一般我们只有一个入参，同时有返回值时，可以实现该接口，标准的最常用的函数式接口</p>
<p><strong>Predicate接口</strong>：提供一个<code>boolean test(T t);</code>函数，一般我们需要对入参做一些判断时，可以实现该接口，Stream.filter的入参就是该接口的实现类。</p>
<p><strong>Supplier接口</strong>：提供一个<code>T get();</code>函数，如果函数没有入参，只有返回值，譬如我们的JavaBean中的get方法，可以实现该接口。</p>
<h3 id="Java编译器自动优化实现函数接口"><a href="#Java编译器自动优化实现函数接口" class="headerlink" title="Java编译器自动优化实现函数接口"></a>Java编译器自动优化实现函数接口</h3><p>由上我们已知，其实Java 8中带来的Lambda表达式，就是一种能够减少我们实现接口函数的语法糖，Java能够通过我们的返回值，讲一个Lambda表达式合理的转换成一个函数接口的实现。</p>
<p>在了解其本质之后，我们甚至可以自己定义一个接口函数用于接收一个Lambda表达式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainFunc</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@FunctionalInterface</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">interface</span> <span class="title">FI</span>&lt;<span class="title">N</span>&gt; </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">(N n)</span></span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showFi</span><span class="params">(FI&lt;String&gt; n)</span> </span>&#123;</span><br><span class="line">        n.run(<span class="string">"showFi"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        showFi(s -&gt; System.out.println(s));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>java编译器的实现是一种动态实现，不受函数接口的接口名或者其抽象方法的名称的限制，由此我们也说java中的Lambda表达式是一种动态语言类型。</p>
<h3 id="Java编译器对动态函数的优化"><a href="#Java编译器对动态函数的优化" class="headerlink" title="Java编译器对动态函数的优化"></a>Java编译器对动态函数的优化</h3><p>如果我们希望一窥JDK8在编译过程中，如何实现通过阅读反编译之后的class的代码进行查阅，指令为javap -v -p YourClass.class &gt; yourRecordFile，整个函数的编译结果如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span>;</span><br><span class="line">descriptor: ()V</span><br><span class="line">flags: ACC_PUBLIC</span><br><span class="line">RuntimeVisibleAnnotations:</span><br><span class="line">0: #16()</span><br><span class="line">Code:</span><br><span class="line">stack=<span class="number">4</span>, locals=<span class="number">6</span>, args_size=<span class="number">1</span></span><br><span class="line">0: new #17 // class com/main/MainFunc$Test1</span><br><span class="line"><span class="number">3</span>: dup</span><br><span class="line"><span class="number">4</span>: aload_0</span><br><span class="line">5: invokespecial #19 // Method com/main/MainFunc$Test1."&lt;init&gt;":(Lcom/main/MainFunc;)V</span><br><span class="line"><span class="number">8</span>: astore_1</span><br><span class="line">9: new #22 // class com/main/MainFunc$Test2</span><br><span class="line"><span class="number">12</span>: dup</span><br><span class="line"><span class="number">13</span>: aload_0</span><br><span class="line">14: invokespecial #24 // Method com/main/MainFunc$Test2."&lt;init&gt;":(Lcom/main/MainFunc;)V</span><br><span class="line"><span class="number">17</span>: astore_2</span><br><span class="line"><span class="number">18</span>: aload_1</span><br><span class="line"><span class="number">19</span>: aload_2</span><br><span class="line">20: invokevirtual #25 // Method com/main/MainFunc$Test1.setTest2:(Lcom/main/MainFunc$Test2;)V</span><br><span class="line">23: new #29 // class java/util/ArrayList</span><br><span class="line"><span class="number">26</span>: dup</span><br><span class="line">27: invokespecial #31 // Method java/util/ArrayList."&lt;init&gt;":()V</span><br><span class="line"><span class="number">30</span>: astore_3</span><br><span class="line"><span class="number">31</span>: aload_3</span><br><span class="line">32: new #32 // class com/main/MainFunc$Test3</span><br><span class="line"><span class="number">35</span>: dup</span><br><span class="line"><span class="number">36</span>: aload_0</span><br><span class="line">37: invokespecial #34 // Method com/main/MainFunc$Test3."&lt;init&gt;":(Lcom/main/MainFunc;)V</span><br><span class="line">40: invokeinterface #35, 2 // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z</span><br><span class="line"><span class="number">45</span>: pop</span><br><span class="line"><span class="number">46</span>: aload_2</span><br><span class="line"><span class="number">47</span>: aload_3</span><br><span class="line">48: invokevirtual #41 // Method com/main/MainFunc$Test2.setTest3:(Ljava/util/List;)V</span><br><span class="line">51: ldc #45 // String 123</span><br><span class="line"><span class="number">53</span>: astore <span class="number">4</span></span><br><span class="line"><span class="number">55</span>: aload <span class="number">4</span></span><br><span class="line">57: ldc #47 // String 456</span><br><span class="line">59: invokevirtual #49 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;</span><br><span class="line"><span class="number">62</span>: pop</span><br><span class="line"><span class="number">63</span>: aload_3</span><br><span class="line"><span class="number">64</span>: iconst_0</span><br><span class="line">65: invokeinterface #55, 2 // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;</span><br><span class="line">70: checkcast #32 // class com/main/MainFunc$Test3</span><br><span class="line"><span class="number">73</span>: aload <span class="number">4</span></span><br><span class="line">75: invokevirtual #59 // Method com/main/MainFunc$Test3.setStr:(Ljava/lang/String;)V</span><br><span class="line"><span class="number">78</span>: aload_1</span><br><span class="line">79: invokestatic #63 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;</span><br><span class="line">82: invokedynamic #72, 0 // InvokeDynamic #0:apply:()Ljava/util/function/Function;</span><br><span class="line">87: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;</span><br><span class="line">90: invokedynamic #77, 0 // InvokeDynamic #1:apply:()Ljava/util/function/Function;</span><br><span class="line">95: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;</span><br><span class="line">98: invokedynamic #78, 0 // InvokeDynamic #2:apply:()Ljava/util/function/Function;</span><br><span class="line">103: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;</span><br><span class="line">106: invokedynamic #79, 0 // InvokeDynamic #3:apply:()Ljava/util/function/Function;</span><br><span class="line">111: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;</span><br><span class="line"><span class="number">114</span>: astore <span class="number">5</span></span><br><span class="line"><span class="number">116</span>: aload <span class="number">5</span></span><br><span class="line">118: invokevirtual #80 // Method java/util/Optional.isPresent:()Z</span><br><span class="line"><span class="number">121</span>: ifeq <span class="number">138</span></span><br><span class="line">124: getstatic #84 // Field java/lang/System.out:Ljava/io/PrintStream;</span><br><span class="line"><span class="number">127</span>: aload <span class="number">5</span></span><br><span class="line">129: invokevirtual #90 // Method java/util/Optional.get:()Ljava/lang/Object;</span><br><span class="line">132: checkcast #50 // class java/lang/String</span><br><span class="line">135: invokevirtual #93 // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span><br><span class="line"><span class="number">138</span>: <span class="keyword">return</span></span><br></pre></td></tr></table></figure>

<p>此时我们就不难发现，其实这里我们的4个lambda表达式编译结果对应的字节码指令为invokedynamic，这也就意味着在我们只有将lambda表达式的返回值赋值给一个函数接口的时候，他的类型才能够给动态识别，由此实现了lambda表达式的动态绑定。</p>
<p>由此lambda的外衣也就扒的差不多了，如果文中有什么表达或者理解错误的，欢迎指正。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Lambda表达式</tag>
        <tag>函数式接口</tag>
      </tags>
  </entry>
  <entry>
    <title>CSDN如何转载他人文章</title>
    <url>/2017/04/21/CSDN%E5%A6%82%E4%BD%95%E8%BD%AC%E8%BD%BD%E4%BB%96%E4%BA%BA%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>本来我一直不会在csdn中转载他人的文章的，知道有一次在网上看到一篇教程（来源已经忘记，但是原理很简答）。</p>
<p>利用<strong>Markdown可以解析html</strong>的特点，我们只要在开发者模式中，将需要转载的人的博客地址的文章部分的div块整个复制下来就行了。</p>
<p>下面我将演示一下如何操作。</p>
<p><img src="/content/images/2017/04/temp2.png" alt="开发者模式"></p>
<p>打开浏览器的<strong>开发者模式</strong>（Chrome为F12，其他的从设置中一般能够找到），点一下开发者模式<strong>左上角的小指针图标</strong>，这个时候，浏览器就能够通过你鼠标点击的位置定位到相应的html结构中了。</p>
<p>在本次操作中，我发现我的正文都被放在一个class为“markdown_views”的div块中了。</p>
<p>我们右键单击这个div块，然后选择<code>Copy-&gt;copy element</code>，就能够将这个块内的元素全部提取下来啦。接下来的事情就是转回自己的博客，使用<strong>markdown编辑器</strong>，将元素复制进来。标明出处和原始博客地址，就可以发表啦。（如果不小心复制了广告或者“上一篇”之类的元素，删掉就行了）。</p>
<p>这种方式对转载其他出处的文章一样可用。<strong>不过，记得无论怎么转载，都要注明“转载”并且说明出处就是咯。</strong></p>
<p>下面是我从我另一篇博客中复制过来的内容，可以看看。</p>
<hr>
<div class="markdown_views"><p><strong>龙云尧个人博客，转载请注明出处。</strong></p>

<p>CSDN地址：<a href="http://blog.csdn.net/Michael753951/article/details/70307694" target="_blank" rel="noopener">http://blog.csdn.net/Michael753951/article/details/70307694</a></p>

<p>个人博客地址：<a href="http://123.207.243.115:81/li-yong-ghostzuo-wei-tu-chuang/" target="_blank" rel="noopener">http://123.207.243.115:81/li-yong-ghostzuo-wei-tu-chuang/</a></p>



<h1 id="起源"><a name="t0"></a>起源</h1>

<p>图床一直是一个很让我头疼的问题，在去年开始，我就有用markdown写项目总结的习惯，贴图的时候，怎么找一个好用的图床这个问题却一直没有解决。</p>

<p>目前我是用过的图床包括网易<code>LOFTER</code>，<code>github</code>，<code>CSDN</code>以及自己搭建的<code>Ghost博客服务器</code>。</p>

<p>前三种方式中，<code>LOFTER</code>和<code>github</code>直接将图片拖进去，然后右键图片，复制源地址就行了。但是美中不足的是<code>LOFTER</code>的源在其他网站上显示并不是很友好，<code>github</code>在虽然图片显示很清楚，但是上传图片的时候总是会出问题。<code>CSDN</code>和<code>github</code>一样，上传文件时总是会出问题。</p>

<p>这迫使我有了再重新寻找一个图床的想法。</p>



<h1 id="解决"><a name="t1"></a>解决</h1>

<p>今晚（2017/4/21）凌晨在写项目总结的时候，我突然意识到我<strong>可以利用自己的博客服务器</strong>作为图床。而且服务器ip地址在公网中，地理地质位于华南，作为图床应该会比较稳定。</p>

<p>果然，在稍微折腾一下之后，我在ghost官网中找到一篇<a href="https://help.ghost.org/hc/en-us/articles/223237408-Upload-Images" target="_blank" rel="noopener">【Upload Images】</a>的教程，有告诉我们怎么向服务器传文件并且在博客中显示。</p>

<p>我就可以利用这个原理，将Ghost服务器作为图床啦。</p>

<h1 id="实际操作"><a name="t2"></a>实际操作</h1>

<p>操作过程比较简单。</p>

<p>首先我们进入后台新建一篇文章(<code>New Post</code>)。然后在正文空白部分输入<code>![]()</code>，右侧就会出现一个提示框。如下图所示。</p>

<p><img src="http://123.207.243.115:81/content/images/2017/04/temp.png" alt title></p>

<p>点击<code>Update an image</code>，我们就能从本地文件中选取一张图片上传上服务器，同时之前<code>![]()</code>中的括号中出现了一个相对路径，比如我的就是<code>/content/images/2017/04/temp.png</code>。</p>

<p><strong>注意，相对路径是不能在其他地方打开的，只能在本服务器才能打开</strong>。</p>

<p>但是<strong>我们的目的是将该图片用在其他</strong>，将本服务器作为图床。所以我们这是就需要<strong>右键单击右侧显示的图片</strong>，选择<strong><code>“复制图片地址”</code></strong>，然后将这个地址粘贴到其他地方，这样这张图片在其他地方也就能够正常显示啦。</p>

<p><em>本篇博客就是使用这个原理实现的图像显示。</em></p></div>]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>CSDN</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（一）</title>
    <url>/2017/05/01/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p>龙云尧个人博客，转载请注明出处。</p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/70254340" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/70254340</a></p>
<p>个人blog地址：<a href="http://123.207.243.115:81/rfidshi-yan-yi-zong-jie-2/" target="_blank" rel="noopener">http://123.207.243.115:81/rfidshi-yan-yi-zong-jie-2/</a></p>
<p>因为实验需要，我要使用OpenGL搭建一个仿真驾驶环境。因为之前没有接触过OpenGL的相关知识，淦哥推荐通过NEHE来进行学习，之后会零零散散做一些笔记用来进行记录。学习的博客参见<a href="http://blog.51cto.com/zt/186/1" target="_blank" rel="noopener">【地址】</a>。</p>
<h2 id="创建新的C"><a href="#创建新的C" class="headerlink" title="创建新的C++"></a>创建新的C++</h2><p>因为实验需要，我需要使用C++进行整个项目的编写。实验之前，我们需要先知道怎么用VS搭建一个窗口程序，这里我参考了<a href="http://blog.csdn.net/yongh701/article/details/54896321" target="_blank" rel="noopener">【这篇博客】</a>。</p>
<p>需要注意的是，在实验中，不推荐直接按照博客中使用L对字符串直接进行强制转换的方式，这种方法在之后学习NEHE过程中会出现很多不可避免的问题。同时这种方式在输出中文的时候也会出翔错误，这个不是我们想看到的。所以我们还需要进行相关的设置。</p>
<p>设置方法这里我们参考<a href="http://blog.csdn.net/ccf19881030/article/details/7967514" target="_blank" rel="noopener">【这篇博客】</a>。</p>
<p>设置完成以后，我们就能很正常的输出字符串了，也不再需要在字符串前面加上L进行强制转换，之后进行NEHE学习的时候也能更加简单。</p>
<h2 id="实验环境搭建"><a href="#实验环境搭建" class="headerlink" title="实验环境搭建"></a>实验环境搭建</h2><p>我在实验开发中使用的是VS2015专业版进行开发。需要使用到的所有库文件和环境搭建可以参考<a href="http://www.cnblogs.com/zpcdbky/p/6724772.html" target="_blank" rel="noopener">【这里】</a>，环境搭建完成之后，尝试include某些库头，如果没有报错，那就说明环境搭建成功。</p>
<h2 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h2><p>实验过程中，最好从教程中，一个函数一个函数向你的项目中添加，如果一次性添加太多的话，报错太多可能会让你很崩溃。</p>
<p>在添加函数的过程中，在开始调用PDB文件之后，可能会出现很多的“无法查找或打开PDB文件”错误信息，为了解决这个问题，你可以参考<a href="http://blog.163.com/qimo601@126/blog/static/1582209320143410125543/" target="_blank" rel="noopener">【这篇博客】</a>。</p>
<p>如果在环境搭建过程中还出现了其他问题，试着参照<a href="http://www.cnblogs.com/clairvoyant/p/5453551.html" target="_blank" rel="noopener">【这篇博客】</a>进行解决。</p>
<h2 id="逻辑图"><a href="#逻辑图" class="headerlink" title="逻辑图"></a>逻辑图</h2><p>经过仔细阅读源码以及理解，整个NEHE第一课的代码框架结构如下。</p>
<p>理解过程中，我们其他的目前可以不用很掌握，但是一定要清楚，在本次项目中，作者将<strong>OpenGL的着色描述表定义为 hRC **。要让您的程序能够绘制窗口的话，还需要创建一个设备描述表</strong>。Windows的设备描述表被定义为 hDC <strong>。</strong>DC将窗口连接到GDI<strong>(Graphics Device Interface图形设备接口)。</strong>而RC将OpenGL连接到DC<strong>。</strong>变量 hWnd 将保存由Windows给我们的窗口指派的句柄<strong>。最后，</strong>程序的实例保存在hInstance中(实例)**。</p>
<p>通过上面的关系，我们能够更加容易的理解窗口的建立与注销的过程中，作者代码中每一步所做的目的和意义。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/05/session1.png" alt></p>
<h2 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h2><p>在读完代码之后，我们知道本次实验中仅仅只是建立一个640*480的窗口。并没有任何内容显示，另外因为我们在初始化设置中(InitGL这个方法中定义的)将屏幕的初始RGB值设置为（0.0f, 0.0f, 0.0f, 0.5f），所以程序运行的结果如图所示。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/05/--1--.png" alt="实验一截图"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（九）</title>
    <url>/2017/05/12/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/71750809" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/71750809</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/nehexue-xi-bi-ji-jiu/">http://yaoyl.cn/nehexue-xi-bi-ji-jiu/</a></p>
<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本次笔记为nehe课程第11课的学习内容，通过实验，我们可以利用正弦函数绘制一个舞动的旗帜。在本次课程中，我们也将学习OpenGL中glPolygonMode函数对一个模型的正面和反面进行不同模式的绘图。</p>
<h2 id="glPolygonMode-函数介绍"><a href="#glPolygonMode-函数介绍" class="headerlink" title="glPolygonMode 函数介绍"></a>glPolygonMode 函数介绍</h2><p>本部分内容请先查看前人整理的博客<a href="http://www.cnblogs.com/Clingingboy/archive/2010/10/18/1854255.html" target="_blank" rel="noopener">【OpenGL学习笔记(7)多边形绘制】</a>。请先仔细阅读该博客，理解如何区分模型中的正面反面（依然遵守右手定则，由描点的方向决定），以及3种填充方式（fill，line point）。</p>
<h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><p>好了，到这里新的基本知识就已经讲述完毕了，我们看看作者是如何实现一个舞动的旗帜的。（基本的代码我就不分析了，只挑重点）</p>
<p>InitGL中，在设置完纹理和透视的init之后，我们将插入glPolygonMode方法进行正反不同方式填充（以此从直观上区分正反面）。然后完成45*45个点阵的绘制。</p>
<p>绘制中，作者将45*45个点阵均匀分布到一个长为9个单位，宽为9个单位，并且中点放置在原点上的正方形中（通过-4.5将中点移动到原点）。Z轴上，作者绘制了一个以x为自变量的正弦函数（刚好一个周期，至于为什么需要一个周期，在看完本篇博客之后你将会有答案）。</p>
<p>接下来DrawGLScene开始进行图像旋转。这里我注释掉了作者的沿y轴和z轴旋转，仅仅保留沿x轴旋转，以方便观察。模型绘制和纹理绑定部分我不分析了，已经是很经典的代码了，就是利用45*45个点阵绘制44*44个正方形而已。</p>
<p>接下来就是本此实验的重点了。一个if判断，这个判断实现了旗帜的舞动。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( wiggle_count == <span class="number">2</span> )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>( y = <span class="number">0</span>; y &lt; <span class="number">45</span>; y++ )</span><br><span class="line">    &#123;</span><br><span class="line">        hold=points[<span class="number">0</span>][y][<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>( x = <span class="number">0</span>; x &lt; <span class="number">44</span>; x++)</span><br><span class="line">        &#123;</span><br><span class="line">            points[x][y][<span class="number">2</span>] = points[x+<span class="number">1</span>][y][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        points[<span class="number">44</span>][y][<span class="number">2</span>]=hold;</span><br><span class="line">    &#125;</span><br><span class="line">    wiggle_count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>仔细阅读代码我们可以发现，作者通过wiggle_count计数，每两帧画面，就将45*45点阵中的z值向左移动一位，最左边的z值放到最右边，实现循环。所以整个if实现的就是将一个正弦波向左移动，这也就是为什么我们在实验中旗帜的挥动，波纹向左走的原因。</p>
<p>剩下的代码就不用怎么解释了，都是和以前一样的代码了。</p>
<p>回到一开始的问题，为什么在设置45*45点阵的z值的时候，要使用2*pi将正弦波控制在一个周期。可不可以乘以n*pi，或者2*n*pi，或者其他值。（提示，if条件中左移的时候，左端点会被移动到右端，此时这个端点有可能是一个突变点造成波形尖锐或者畸形）。</p>
<p>最后附上效果图，首先是作者源代码的运行结果。</p>
<p><img src="http://img.blog.csdn.net/20170531220200082?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section9.1"></p>
<p>然后是经过我注释掉y轴旋转，z轴旋转以及注释掉了整个if判断之后的图像。我们发现这个时候图像已经不能飘动了，而且上下两个边界呈现一种标准的正弦波的形式。</p>
<p><img src="http://img.blog.csdn.net/20170531220237426?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section9.2"></p>
<p>最后是没有注释if，单单注释掉y轴旋转和z轴旋转的图像。喜事已经能够正常的飘动了。</p>
<p><img src="http://img.blog.csdn.net/20170531220401739?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section9.3"></p>
<h1 id="显示列表"><a href="#显示列表" class="headerlink" title="显示列表"></a>显示列表</h1><p>nehe教程第12课显示列表。</p>
<p>该课程主要讲解了glGenLists的使用样例。在使用之前，我们可以了解一下使用glGenLists能给你程序性能所带来的好处。这部分只是我们可以参考<a href="http://blog.csdn.net/dcrmg/article/details/53133112" target="_blank" rel="noopener">【OpenGL（八） 显示列表】</a>以及<a href="http://www.cnblogs.com/yxnchinahlj/archive/2010/11/19/1881426.html" target="_blank" rel="noopener">【OpenGL显示列表】</a></p>
<p>本次课程需要使用的光、材质和光照模型，就比较符合glGenLists的使用环境。</p>
<p>我们来看看课程代码，作者首先定义了两个二位数组，boxcol用来存放立方体除了top之外，其他所有面的5种取，topcol用来存放立方体的顶部颜色。</p>
<p>接下来作者定义了BuildLists方法，在这个方法中，作者使用了本次课程的核心——显示列表。使用方法大致如下。</p>
<ul>
<li>首先调用glGenListst生成一个显示列表（连续地址的数组形式），本次实验中作者生成了包含2个元素的数组，返回数组的首地址给box（不过定义的时候并没有定义成指针，有些奇怪）</li>
<li>接着作者使用glNewList和glEndList定义显示列表中的每一个元素。<ul>
<li>在GLNewList方法中，作者传入了box指向的第一个显示元素，同时传入了一个参数GL_COMPILE。（注意：按照【OpenGL显示列表】中所告诉我们的知识，glNewList的函数原型为<code>void glNewList(GLuint list,GLenum mode);</code>说明一个显示列表的开始，其后的OpenGL函数存入显示列表中，直至调用结束表的函数（见下面）。参数list是一个正整数，它标志唯一的显示列表。参数mode的可能值有GL_COMPILE和GL_COMPILE_AND_EXECUTE。若要使后面的函数语句只存入而不执行，则用GL_COMPILE；若要使后面的函数语句存入表中且按瞬时方式执行一次，则用GL_COMPILE_AND_EXECUTE。）</li>
<li>glNewList和glEndList中间定义矩阵的语句我这里就不再分析，和之前一样。</li>
</ul>
</li>
<li>定义完显示列表中第一个元素之后，定义第二个元素时，需要将数组头指针向后移一位，所以代码中会有<code>top=box+1;</code>一行。</li>
</ul>
<p>接着本次实验中作者修改了InitGL方法，他在Init的最后几行中，调用了3个glEnable方法，打开了GPU默认的灯光(GL_LIGHT0)，自定义的灯光(GL_LIGHTING)，以及颜色纹理(GL_COLOR_MATERIAL)，注意，如果不激活颜色纹理的话，在我们DrawGLScene中，将只能够贴上图片纹理，但是无法再往上添加颜色纹理（即之后的glColor3fv失效）。</p>
<p>DrawGLScene方法中，作者或者了6层，逐渐减少的立方体。使用过程中，作者在定位完画笔，并且旋转坐标轴完成之后，使用glColor3fv将一开始宏定义的颜色作为纹理，然后调用glCallList快速构建矩形。本次实验使用显示列表之后，DrawGLScene代码量明显比以往少了很多。</p>
<p>其他代码就不解释了。本次课程主要掌握显示列表的原理以及使用即可。</p>
<p>最终的显示图像如下所示：</p>
<p><img src="http://img.blog.csdn.net/20170531220421676?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section9.4"></p>
<p>稍微旋转一下图片可以看到如下效果：</p>
<p><img src="http://img.blog.csdn.net/20170531220437794?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section9.6"></p>
<p>我们注释掉<code>glEnable(GL_COLOR_MATERIAL);</code>或者DrawGLScene中的<code>glColor3fv</code>方法，就发现显示的图片已经没有颜色纹理了。</p>
<p><img src="http://img.blog.csdn.net/20170531220455333?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section9.5"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
        <tag>飘动</tag>
        <tag>glPolygonM</tag>
        <tag>glGenLists</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（三）</title>
    <url>/2017/05/03/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<p>第二课和第三课内容为三角形和矩形的颜色渲染内容，通过实例告诉我们如何给实现的样例进行上色。</p>
<p>我们已经知道任何在OpenGL中，任何形状都将最终被分解成矩形和三角形两种形状，所以在这两课中我们将对三角形和矩形的构建和渲染进行学习。</p>
<h2 id="三角形和矩形构造"><a href="#三角形和矩形构造" class="headerlink" title="三角形和矩形构造"></a>三角形和矩形构造</h2><p>构建三角形或者矩形的方法在DrawGLScene方法中实现。</p>
<p>绘制图像之前我们需要先将屏幕缓存清理掉，即调用glClear和glLoadIdentity。这个时候屏幕上的定位点将被重置于窗口的正中间。</p>
<p>整个屏幕按照空间直角坐标系的形式进行坐标划分，分为X轴，Y轴和Z轴，其中<strong>X轴正方向为右方，Y轴正方向为上方，Z轴正方向为屏幕外侧，原点为你的窗口中央。</strong></p>
<p>开始绘制图形的之前，我们首先需要使用glTranslatef对绘制的点进行偏移，将其移到适当的位置之后开始进行图像绘制（记住绘制点初始值位于屏幕正中央。）</p>
<p>绘制图形之前，我们需要调用glBegin(GL_TRIANGLES)来决定绘制图形。GL_TRIANGLES表示绘制一个三角形，GL_QUADS表示绘制一个矩形。如果需要绘制更多点组成的图形的话，可以使用GL_POLYGON。</p>
<p>下面以三角形的绘制为例，通过调用glVertex3f方法设置三个顶点的坐标我们就可以画出一个简单的三角形。如果需要绘制多个三角形，可以在glBegin之后添加3*n行glVertex3f方法，就能绘制出n个三角形。</p>
<p>绘制结束之后，我们将调用glEnd();表示本次绘制结束。</p>
<p>下面将展示第二课的代码及其实现效果。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DrawGLScene</span><span class="params">(GLvoid)</span>                                 <span class="comment">// Here's Where We Do All The Drawing</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// Clear Screen And Depth Buffer</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// Reset The Current Modelview Matrix</span></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>,<span class="number">0.0f</span>,<span class="number">-6.0f</span>);                     <span class="comment">// Move Left 1.5 Units And Into The Screen 6.0</span></span><br><span class="line">    glBegin(GL_TRIANGLES);                              <span class="comment">// Drawing Using Triangles</span></span><br><span class="line">        glVertex3f( <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Top</span></span><br><span class="line">        glVertex3f(<span class="number">-1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Bottom Left</span></span><br><span class="line">        glVertex3f( <span class="number">1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Bottom Right</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Finished Drawing The Triangle</span></span><br><span class="line">    glTranslatef(<span class="number">3.0f</span>,<span class="number">0.0f</span>,<span class="number">0.0f</span>);                       <span class="comment">// Move Right 3 Units</span></span><br><span class="line">    glBegin(GL_QUADS);                                  <span class="comment">// Draw A Quad</span></span><br><span class="line">        glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Top Left</span></span><br><span class="line">        glVertex3f( <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Top Right</span></span><br><span class="line">        glVertex3f( <span class="number">1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Bottom Right</span></span><br><span class="line">        glVertex3f(<span class="number">-1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Bottom Left</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Done Drawing The Quad</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Keep Going</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>绘制出来的效果图如下所示。<br><img src="http://123.207.243.115/content/images/2017/05/section1.png" alt></p>
<h2 id="图像着色"><a href="#图像着色" class="headerlink" title="图像着色"></a>图像着色</h2><p>第三课内容为图像着色部分，这部分内容很简单，我们只需调用glColor3f便可以进行颜色着色。<strong>值得注意的是，我们一旦调用glColor3f之后，在下一次调用glColor3f之前，着色的颜色不会改变。</strong>比如下一段代码展示的这样。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DrawGLScene</span><span class="params">(GLvoid)</span>                                 <span class="comment">// 从这里开始进行所有的绘制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// 清除屏幕和深度缓存</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// 重置当前的模型观察矩阵</span></span><br><span class="line">    <span class="comment">//当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。</span></span><br><span class="line">    <span class="comment">//中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。</span></span><br><span class="line">    <span class="comment">//根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。</span></span><br><span class="line">    <span class="comment">//注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。</span></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>, <span class="number">0.0f</span>, <span class="number">-6.0f</span>);                   <span class="comment">// 左移 1.5 单位，并移入屏幕 6.0</span></span><br><span class="line">    <span class="comment">//glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。</span></span><br><span class="line">    <span class="comment">//本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。</span></span><br><span class="line">    glBegin(GL_TRIANGLES);                              <span class="comment">// Drawing Using Triangles</span></span><br><span class="line">    <span class="comment">//接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// 设置当前色为红色</span></span><br><span class="line">    glVertex3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                       <span class="comment">// Top</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// 设置当前色为绿色</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Bottom Left</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// 设置当前色为蓝色</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Bottom Right</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Finished Drawing The Triangle</span></span><br><span class="line">    <span class="comment">//在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。</span></span><br><span class="line">    glTranslatef(<span class="number">3.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Move Right 3 Units</span></span><br><span class="line">    <span class="comment">//现在使用GL_QUADS绘制正方形。</span></span><br><span class="line">    glBegin(GL_QUADS);                                  <span class="comment">// Draw A Quad</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Top Left</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                       <span class="comment">// Top Right</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Bottom Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Bottom Left</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Done Drawing The Quad</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Everything Went OK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出的图像如下所示。</p>
<p><img src="http://123.207.243.115/content/images/2017/05/section2.2-1.png" alt></p>
<p>我们注意到在三角形的三个点分别设置成三个颜色之后，OpenGL自动给我们设置好了过渡色，同时我们在绘制三角形的时候，最后一个点设置为蓝色。而在绘制矩形的时候，我们并没有设置颜色，结果矩形仍然变成了蓝色，就说明glColor3f的着色具有持久性，同时这个即便是跨glBegin和glEnd也能够保持那种持久性。</p>
<p>接着，我们将探究OpenGL中过渡色是怎么操作的。（这个部分教程中没有详细讲述）</p>
<p>对DrawGLScene稍作修改，在矩形中前两个点着红色，后两个点着绿色，我们查看着色情况如何。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//现在使用GL_QUADS绘制正方形。</span></span><br><span class="line">glBegin(GL_QUADS);                                  <span class="comment">// Draw A Quad</span></span><br><span class="line"><span class="comment">//glColor3f(1.0f, 0.0f, 0.0f);                      // 将当前色设置为蓝色</span></span><br><span class="line">glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Top Left</span></span><br><span class="line">glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                       <span class="comment">// Top Right</span></span><br><span class="line"><span class="comment">//glColor3f(0.0f, 0.1f, 0.0f);                      // 将当前色设置为蓝色</span></span><br><span class="line">glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Bottom Right</span></span><br><span class="line">glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Bottom Left</span></span><br><span class="line">glEnd();</span><br></pre></td></tr></table></figure>

<p>图像显示将从前两个点绘成的直线向另外两个点组成的直线进行过渡。</p>
<p><img src="http://123.207.243.115/content/images/2017/05/section2.4.png" alt></p>
<p>所以我们能够</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（七）</title>
    <url>/2017/05/09/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/</url>
    <content><![CDATA[<p>龙云尧个人博客，转载请注明出处。</p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/71511785" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/71511785</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/nehexue-xi-bi-ji-qi-2017-05-09-20-59/">http://yaoyl.cn/nehexue-xi-bi-ji-qi-2017-05-09-20-59/</a></p>
<hr>
<p>我们在前六个部分已经尝试了nehe教程中1-8可得所有内容，接下来第七部分将实现一个简单的实验，这个实验将涵盖前面所有的内容，以作为一个前期总结。</p>
<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>在实验之前，我们需要知道一个OpenGL中的基本概念。OpenGL中glEnable方法的使用。关于这个功能函数的使用以及参数设定，你可以点击<a href="http://blog.csdn.net/liguangzhenghi/article/details/8166350" target="_blank" rel="noopener">【gl.glenable()介绍】</a>以及<a href="http://blog.csdn.net/huutu/article/details/20872525" target="_blank" rel="noopener">【glEnable(GL_DEPTH_TEST) 有什么用？】</a>进行查看。以下关于glenable的内容转载自上述第二篇博客。</p>
<hr>
<p>在InitGL() 或者类似的初始化OpenGL的地方，会有glEnable(GL_DEPTH_TEST);</p>
<p>启用了之后，OpenGL在绘制的时候就会检查，当前像素前面是否有别的像素，如果别的像素挡道了它，那它就不会绘制，也就是说，OpenGL就只绘制最前面的一层。</p>
<p>当我们需要绘制透明图片时，就需要关闭它<br>glDisable(GL_DEPTH_TEST);<br>并且打开混合<br>glEnable(GL_BLEND);</p>
<p>而且还需要设置使用的透明度<br>glColor4f(1.0f,1.0f,1.0f,0.5f);<br>这样就是一半的显示了，设置为1就是不透明</p>
<p>glBlendFunc(GL_SRC_ALPHA,GL_ONE);<br>基于源像素Alpha通道值的半透明混合函数</p>
<hr>
<p>在实验一以及后续的几个实验中，我们Enable的都是传入GL_DEPTH_TEST作为参数启用深度测试。并立刻在glEnable方法后面调用glDepthFunc(GL_LEQUAL);方法进行前景像素的显示设置。</p>
<p>这个概念在之前的实验中有所涉及，但是我们当时没有关注，这里我们将将其单独拿出来进行分析。<strong>本部分以下部分均为转载。</strong>转载来源为<a href="http://blog.csdn.net/u012463389/article/details/50748128" target="_blank" rel="noopener">【glDepthFunc】</a></p>
<p>函数原型：</p>
<pre><code>void glDepthFunc(GLenum func);</code></pre><p>函数功能：</p>
<pre><code>指定“目标像素与当前像素在z方向上值大小比较”的函数，符合该函数关系的目标像素才进行绘制，否则对目标像素不予绘制。</code></pre><p>参数说明：</p>
<pre><code>func指定深度比较函数，GL_NEVER,GL_LESS,GL_EQUAL,GL_LEQUAL,GL_GREATER,GL_NOTE_QUAL,GL_GEQUAL,GL_ALWAYS,缺省值GL_LESS，</code></pre><p>GL_NEVER,不通过（输入的深度值不取代参考值）</p>
<p>GL_LESS,如果输入的深度值小于参考值，则通过</p>
<p>GL_EQUAL,如果输入的深度值等于参考值，则通过</p>
<p>GL_LEQUAL,如果输入的深度值小于或等于参考值，则通过</p>
<p>GL_GREATER,如果输入的深度值大于参考值，则通过</p>
<p>GL_NOTE_QUAL,如果输入的深度值不等于参考值，则通过</p>
<p>GL_GEQUAL,如果输入的深度值大于或等于参考值，则通过</p>
<p>GL_ALWAYS,总是通过（输入的深度值取代参考值）</p>
<p>描述：</p>
<pre><code>通过目标像素与当前像素在z方向上值大小的比较是否满足参数指定的条件，来决定在深度（z方向）上是否绘制该目标像素。该函数只有启用“深度测试”时才有效，参考glEnable(GL_DEPTH_TEST)和glDisable(GL_DEPTH_TEST)</code></pre><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>前期准备能够帮助我们更好的理解作者在代码中的方法调用，，也能帮助我们更加深入的了解OpenGL的运行机制。我们接下来探讨本次实验中的实现方式。</p>
<p>根据Lesson1课程给我们大基建好的框架结构以及我们整理出来的那张结构图，我们可以快速理解本次实验代码。</p>
<p>首先定义了一个stars结构体，用来存放每一个星星的RGB值，与中心点的距离以及选装角度。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>              // <span class="title">Create</span> <span class="title">A</span> <span class="title">Structure</span> <span class="title">For</span> <span class="title">Star</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> r, g, b;            <span class="comment">// Stars Color</span></span><br><span class="line">    GLfloat dist,           <span class="comment">// Stars Distance From Center</span></span><br><span class="line">        angle;          <span class="comment">// Stars Current Angle</span></span><br><span class="line">&#125;</span><br><span class="line">stars;</span><br><span class="line">stars star[num];            <span class="comment">// Need To Keep Track Of 'num' Stars</span></span><br></pre></td></tr></table></figure>

<p>接着是LoadBMP和LoadGLTextures，这个和以前的实验代码无异，只需要改一下读入的文件名即可。ReSizeGLScene函数同样不需要修改。</p>
<p>接下来的InitGL开始，将会和第一节课开始出现不一样。</p>
<p>首先我们在前期准备中已经知道了glEnable的意义，并且我们也已经知道，深度测试和透明两种功能不能同时开启。而我们在上一次实验中在设置透明的时候，也曾经写过如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">glEnable(GL_BLEND);         // Turn Blending On</span><br><span class="line">glDisable(GL_DEPTH_TEST);   // Turn Depth Testing Off</span><br></pre></td></tr></table></figure>

<p>又因为本次实验需要直接使用透明，所以我们在InitGL中将不再glDisable(GL_BLEND)，而是直接glEnable(GL_BLEND)。</p>
<p>接着就是很重要的一个方法了——DrawGLScene，这个地方，作者将星星的旋转以及着色代码在这里进行实现。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DrawGLScene</span><span class="params">(GLvoid)</span>                                 <span class="comment">// Here's Where We Do All The Drawing</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// Clear The Screen And The Depth Buffer</span></span><br><span class="line">    glBindTexture(GL_TEXTURE_2D, texture[<span class="number">0</span>]);           <span class="comment">// Select Our Texture</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (loop=<span class="number">0</span>; loop&lt;num; loop++)                      <span class="comment">// Loop Through All The Stars</span></span><br><span class="line">    &#123;</span><br><span class="line">        glLoadIdentity();                               <span class="comment">// Reset The View Before We Draw Each Star</span></span><br><span class="line">        glTranslatef(<span class="number">0.0f</span>,<span class="number">0.0f</span>,zoom);                   <span class="comment">// Zoom Into The Screen (Using The Value In 'zoom')</span></span><br><span class="line">        glRotatef(tilt,<span class="number">1.0f</span>,<span class="number">0.0f</span>,<span class="number">0.0f</span>);                 <span class="comment">// Tilt The View (Using The Value In 'tilt')</span></span><br><span class="line">        glRotatef(star[loop].angle,<span class="number">0.0f</span>,<span class="number">1.0f</span>,<span class="number">0.0f</span>);     <span class="comment">// Rotate To The Current Stars Angle</span></span><br><span class="line">        glTranslatef(star[loop].dist,<span class="number">0.0f</span>,<span class="number">0.0f</span>);        <span class="comment">// Move Forward On The X Plane</span></span><br><span class="line">        glRotatef(-star[loop].angle,<span class="number">0.0f</span>,<span class="number">1.0f</span>,<span class="number">0.0f</span>);    <span class="comment">// Cancel The Current Stars Angle</span></span><br><span class="line">        glRotatef(-tilt,<span class="number">1.0f</span>,<span class="number">0.0f</span>,<span class="number">0.0f</span>);                <span class="comment">// Cancel The Screen Tilt</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (twinkle)</span><br><span class="line">        &#123;</span><br><span class="line">            glColor4ub(star[(num-loop)<span class="number">-1</span>].r,star[(num-loop)<span class="number">-1</span>].g,star[(num-loop)<span class="number">-1</span>].b,<span class="number">255</span>);</span><br><span class="line">            glBegin(GL_QUADS);</span><br><span class="line">                glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">                glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">                glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">                glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">            glEnd();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        glRotatef(spin,<span class="number">0.0f</span>,<span class="number">0.0f</span>,<span class="number">1.0f</span>);</span><br><span class="line">        glColor4ub(star[loop].r,star[loop].g,star[loop].b,<span class="number">255</span>);</span><br><span class="line">        glBegin(GL_QUADS);</span><br><span class="line">            glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">            glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">            glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">            glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">        glEnd();</span><br><span class="line"></span><br><span class="line">        spin+=<span class="number">0.01f</span>;</span><br><span class="line">        star[loop].angle+=<span class="keyword">float</span>(loop)/num;</span><br><span class="line">        star[loop].dist-=<span class="number">0.01f</span>;</span><br><span class="line">        <span class="keyword">if</span> (star[loop].dist&lt;<span class="number">0.0f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            star[loop].dist+=<span class="number">5.0f</span>;</span><br><span class="line">            star[loop].r=rand()%<span class="number">256</span>;</span><br><span class="line">            star[loop].g=rand()%<span class="number">256</span>;</span><br><span class="line">            star[loop].b=rand()%<span class="number">256</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Everything Went OK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果我们在之前的课程中已经很深入的了解了的话，这一次的DrawScene就比较容易理解啦，我也就不在这里重复赘述了。</p>
<p>对winMain稍作修改。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> WINAPI <span class="title">WinMain</span><span class="params">( HINSTANCE   hInstance,          <span class="comment">// Instance</span></span></span></span><br><span class="line"><span class="function"><span class="params">                    HINSTANCE   hPrevInstance,      <span class="comment">// Previous Instance</span></span></span></span><br><span class="line"><span class="function"><span class="params">                    LPSTR       lpCmdLine,          <span class="comment">// Command Line Parameters</span></span></span></span><br><span class="line"><span class="function"><span class="params">                    <span class="keyword">int</span>         nCmdShow)</span>           <span class="comment">// Window Show State</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MSG     msg;                                    <span class="comment">// Windows Message Structure</span></span><br><span class="line">    BOOL    done=FALSE;                             <span class="comment">// Bool Variable To Exit Loop</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Ask The User Which Screen Mode They Prefer</span></span><br><span class="line">    <span class="keyword">if</span> (MessageBox(<span class="literal">NULL</span>,<span class="string">"Would You Like To Run In Fullscreen Mode?"</span>, <span class="string">"Start FullScreen?"</span>,MB_YESNO|MB_ICONQUESTION)==IDNO)</span><br><span class="line">    &#123;</span><br><span class="line">        fullscreen=FALSE;                           <span class="comment">// Windowed Mode</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create Our OpenGL Window</span></span><br><span class="line">    <span class="keyword">if</span> (!CreateGLWindow(<span class="string">"NeHe's Animated Blended Textures Tutorial"</span>,<span class="number">640</span>,<span class="number">480</span>,<span class="number">16</span>,fullscreen))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                   <span class="comment">// Quit If Window Was Not Created</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!done)                                    <span class="comment">// Loop That Runs While done=FALSE</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (PeekMessage(&amp;msg,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="number">0</span>,PM_REMOVE))   <span class="comment">// Is There A Message Waiting?</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (msg.message==WM_QUIT)               <span class="comment">// Have We Received A Quit Message?</span></span><br><span class="line">            &#123;</span><br><span class="line">                done=TRUE;                          <span class="comment">// If So done=TRUE</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>                                    <span class="comment">// If Not, Deal With Window Messages</span></span><br><span class="line">            &#123;</span><br><span class="line">                TranslateMessage(&amp;msg);             <span class="comment">// Translate The Message</span></span><br><span class="line">                DispatchMessage(&amp;msg);              <span class="comment">// Dispatch The Message</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>                                        <span class="comment">// If There Are No Messages</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Draw The Scene.  Watch For ESC Key And Quit Messages From DrawGLScene()</span></span><br><span class="line">            <span class="keyword">if</span> ((active &amp;&amp; !DrawGLScene()) || keys[VK_ESCAPE])  <span class="comment">// Active?  Was There A Quit Received?</span></span><br><span class="line">            &#123;</span><br><span class="line">                done=TRUE;                          <span class="comment">// ESC or DrawGLScene Signalled A Quit</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>                                    <span class="comment">// Not Time To Quit, Update Screen</span></span><br><span class="line">            &#123;</span><br><span class="line">                SwapBuffers(hDC);                   <span class="comment">// Swap Buffers (Double Buffering)</span></span><br><span class="line">                <span class="keyword">if</span> (keys[<span class="string">'T'</span>] &amp;&amp; !tp)</span><br><span class="line">                &#123;</span><br><span class="line">                    tp=TRUE;</span><br><span class="line">                    twinkle=!twinkle;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!keys[<span class="string">'T'</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    tp=FALSE;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keys[VK_UP])</span><br><span class="line">                &#123;</span><br><span class="line">                    tilt-=<span class="number">0.5f</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keys[VK_DOWN])</span><br><span class="line">                &#123;</span><br><span class="line">                    tilt+=<span class="number">0.5f</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keys[VK_PRIOR])</span><br><span class="line">                &#123;</span><br><span class="line">                    zoom-=<span class="number">0.2f</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keys[VK_NEXT])</span><br><span class="line">                &#123;</span><br><span class="line">                    zoom+=<span class="number">0.2f</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keys[VK_F1])                        <span class="comment">// Is F1 Being Pressed?</span></span><br><span class="line">                &#123;</span><br><span class="line">                    keys[VK_F1]=FALSE;                  <span class="comment">// If So Make Key FALSE</span></span><br><span class="line">                    KillGLWindow();                     <span class="comment">// Kill Our Current Window</span></span><br><span class="line">                    fullscreen=!fullscreen;             <span class="comment">// Toggle Fullscreen / Windowed Mode</span></span><br><span class="line">                    <span class="comment">// Recreate Our OpenGL Window</span></span><br><span class="line">                    <span class="keyword">if</span> (!CreateGLWindow(<span class="string">"NeHe's Animated Blended Textures Tutorial"</span>,<span class="number">640</span>,<span class="number">480</span>,<span class="number">16</span>,fullscreen))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;                       <span class="comment">// Quit If Window Was Not Created</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Shutdown</span></span><br><span class="line">    KillGLWindow();                                 <span class="comment">// Kill The Window</span></span><br><span class="line">    <span class="keyword">return</span> (msg.wParam);                            <span class="comment">// Exit The Program</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同样，很好理解的代码我就不重复解释了。最终运行的结果如图所示。</p>
<p><img src="http://img.blog.csdn.net/20170516074904158?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（二）</title>
    <url>/2017/05/01/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<p>其实这个和nehe学习没太多关系，纯粹知识记录一下VS的注释和反注释的快捷键而已。</p>
<p>注释：        先CTRL+K，然后CTRL+C<br>取消注释： 先CTRL+K，然后CTRL+U</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>VS</tag>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（六）</title>
    <url>/2017/05/08/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/71407260" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/71407260</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/nehexue-xi-bi-ji-liu-2017-05-08-13-54/">http://yaoyl.cn/nehexue-xi-bi-ji-liu-2017-05-08-13-54/</a></p>
<hr>
<h1 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h1><p>我们在很多场合都过这样的经历，在设置某些色块的颜色的时候，我们不光要设置它的RGB值，还可能需要设置它的Alpha值。一般理解上，我们都认为这个Alpha值代表了当前色块的透明度。这样只是最外在的理解，其实图像的透明是一个颜色的混合过程，当有两种颜色混叠的时候，这个Alpha是用来控制两种颜色的混色程度的一种值。</p>
<p>颜色的混合公式为(Rs*As + Rd (1 - As), Gs*As + Gd (1 - As), Bs*As + Bs (1 - As), As*As + Ad (1 - As))。其中As表示前景色的Alpha值，Rs表示前景色的R值，Rd表示背景色的R值，Gs &amp; Gd，Bs &amp; Bd类似。最终计算出来的RGB值就是混合之后显示出来的RGB值。</p>
<p>举个例子，我们已经知道背景色是（255,255,255），现在有一个（128,128,128）的色块需要层叠在背景色块之上，并且我们先假设Alpha值为1.0，那我们很容易计算出来最终的显示的RGB值为（128,128,128），这个时候我们就从直观上认为前景色完全不透明。而如果Alpha为0.0，计算结果显然为（255,255,255），这个时候我们就认为前景色完全透明。其他的Alpha值类似。</p>
<p>当我们有多张图片需要层叠的时候，并且每一层都有一个Alpha值的时候，我们需要怎么计算呢？</p>
<p>从我们的直观上可以想象出来，当我们在看一堆颜色混合而成的颜色的时候，首先是离我们最近的pic1作为前景，其后面的pic2-picn糊混合结果作为背景，混合出来的结果。而pic2-picn是如何混合的呢？它是由pic2作为前景，pic3-picn混合结果作为背景混合出来的结果。如此递归下去知道最后两张图片混合完成。</p>
<p>好了，到这里我们应该很了解在OpenGL中颜色混合的原理了。接下来动手试试。</p>
<p>首先需要修改LoadGLTextures方法中的文件名，因为本次实验使用的是一张新的位图。将<code>&quot;Data/Crate.bmp&quot;</code>改成<code>&quot;Data/glass.bmp&quot;</code>即可。</p>
<p>然后我们需要修改InitGL方法。在使用glEnable(GL_LIGHT1);激活光源之后，我们添加新的两行glColor4f和glBlendFunc方法。</p>
<p>不过需要注意的是，在使用glColor4f以全亮度进行绘制的时候，它会和光照系统glLightfv产生的效果互相排斥。具体的排斥方式请参看<a href="http://blog.csdn.net/tmljs1988/article/details/6445100" target="_blank" rel="noopener">【 opengl纹理,光照,glColor4f(),混合】</a>.</p>
<p>另外在glBlendFunc中，为什么会取GL_SRC_ALPHA,GL_ONE，以及GL_SRC_ALPHA,GL_ONE这两个参数会对最终的效果产生什么影响。我们可以参考<a href="http://blog.csdn.net/aurora_mylove/article/details/1700540" target="_blank" rel="noopener">【 颜色混合opengl】</a></p>
<p>最后，我们修改WinMain就能够结束本次实验。接着上一次实验的代码.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (keys[VK_LEFT])    <span class="comment">// Left方向键按下了么?</span></span><br><span class="line">&#123;</span><br><span class="line"> yspeed-=<span class="number">0.01f</span>;    <span class="comment">// 若是, 减少yspeed </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们增加如下的代码。这几行监视B键是否按下。如果是的话，计算机检查混合选项是否已经打开。然后将其置为相反的状态。  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Blending Code Starts Here</span></span><br><span class="line">            <span class="keyword">if</span> (keys[<span class="string">'B'</span>] &amp;&amp; !bp)</span><br><span class="line">            &#123;</span><br><span class="line">                bp = TRUE;</span><br><span class="line">                blend = !blend;</span><br><span class="line">                <span class="keyword">if</span> (blend)</span><br><span class="line">                &#123;</span><br><span class="line">                    glEnable(GL_BLEND);         <span class="comment">// Turn Blending On</span></span><br><span class="line">                    glDisable(GL_DEPTH_TEST);   <span class="comment">// Turn Depth Testing Off</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    glDisable(GL_BLEND);        <span class="comment">// Turn Blending Off</span></span><br><span class="line">                    glEnable(GL_DEPTH_TEST);    <span class="comment">// Turn Depth Testing On</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!keys[<span class="string">'B'</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                bp = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Blending Code Ends Here</span></span><br></pre></td></tr></table></figure>

<p>到这里本次课程就结束了，我们试着按下B键查看透视效果怎样，另外我们还可以看看当前代码下，打开光源和不打开光源下，按下B键查看透视效果会有什么区别。思考为什么（光源和glColor4f的冲突）。</p>
<p><img src="http://img.blog.csdn.net/20170516074703833?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section6.1"></p>
<p>如果我们将InitGL中的glBlendFunc(GL_SRC_ALPHA,GL_ONE);改成glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);又会有什么效果。同样请思考为什么（注意混合方式glBlendFunc中，不同参数下，图像混合的计算方式）。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
        <tag>混合</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（八）</title>
    <url>/2017/05/12/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/71702311" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/71702311</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/nehexue-xi-bi-ji-ba/">http://yaoyl.cn/nehexue-xi-bi-ji-ba/</a></p>
<hr>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本部分单独讲Lesson10的内容，本次讲述重点将不再是作者在代码中各种方法如何如何调用，比如如何实现旋转，如何绘制图像，如何实现透明，如何实现步进等等，这个在我前面7篇笔记中已经有详细的说明了，本篇笔记将不再重复，如果有什么疑问可以翻我之前的笔记或者上网查询。</p>
<p>本次实验参变量不少，作者通过代码带我们真正的实现了一个3D世界，我们可以在这个3D世界里面自由的走动和观察。（也是我们玩的譬如《我的世界》这样的第一视角游戏的世界构建的基本）</p>
<p>文中给出了几个数据结构——tagVERTEX，tagTRIANGLE，tagSECTOR。vertex用来存放每一个坐标点的空间直角坐标系中的位置（x, y, z）和需要展示的图像的位置（u, v），trandgle表示三角形中存在的3个点，包含3个tagVERTEX（事实上，现今大多数人都是用无数这样的三角形来近似/逼近一个曲面），然后sector表示一个由许多三角形构成的体的结构。文中，所有的与体相关的三角形都放在一个文件中，通过读写文件来对体进行操作。</p>
<h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>好了，大致的介绍已经完成，我们接着看看作者是如何一步一步完成这个3D世界的建设的。（晚上课程中已经解释的地方我这里不再重复，而还未解释清楚的地方我将重点解释）</p>
<p>作者首先定义了一个readstr方法，用来读取文件f中的内容，将其读进string指向的内存空间。接着定义了一个SetupWorld方法，将”data/world.txt”中的内容调用readstr方法读取内容，并将其写进 tagSECTOR 类的变量 sector1 中，关于txt中数据格式需要在这里说明一下——每一行代表一个坐标点的信息，包含5个变量，分别为该点的x轴坐标、y轴坐标、z轴坐标、该点对应的渲染图片的点的x坐标，该点对应的渲染图片的点的y坐标。每3行（即3个点）构成一个3角形。前3个变量各位可能还有印象，后两个点可以回去看看《nehe学习笔记（五）》，找找<code>glTexCoord2f</code>方法的说明。</p>
<p>然后是和以前一样的LoadBMP以及LoadGLTextures方法。InitGL方法中，打开纹理映射和深度测试，同时调用之前定义好的SetupWorld方法读入所有三角形的信息。</p>
<p>接下来就是第一个重头戏DrawGLScene了，所有的动作都是在这里展示出来的，理解这一块的知识对我们将来自己构建3D世界有莫大的帮助。</p>
<p>该部分首先定义了5个浮点数x_m, y_m, z_m, u_m, v_m，分别用来对应tagVERTEX中的5个5种元素。使用xtrans &amp; ytrans &amp; ztrans 分别表示画笔起笔处的x坐标 &amp; y坐标 &amp; z坐标（也就是说在glTranslatef中将被用到。），接着定义了xtrans &amp; ztrans &amp; ytrans，这三个值决定了画笔起点沿X轴、Y轴、Z轴移动的长度，也即决定了画笔的起点位置（也即整张地图的位置），sceneroty则据定了角色的视觉角度。</p>
<p>变量中我们需要注意，本次实验中，沿着某轴移动的长度通常以 pos 结尾作为变量，而旋转的角度通常以 ros 结尾作为变量，谨记这一点对我们后期按键控制的理解会有帮助。</p>
<p>接着作者调用两次glRotatef，先将图像沿着x轴旋转一定角度(lookupdown)，完成抬头动作，再将图像沿着y轴旋转一定角度(sceneroty)，完成正面朝向的转换。</p>
<p>现在我们已经确定了抬头角度和视角，接下来就要设定你现在所处的位置了——其实就是反方向移动整个3D模型即可，这也就是为什么在trans赋值的时候，会取负数的原因。</p>
<p>在上一步骤调用glTranslatef已经绘点结束之后，我们将开始进行图像绘制，这个部分就不细说了。我对文本中前3行（第一个三角形）标稍作图解，剩下的你可以自己尝试继续绘制。</p>
<p><img src="http://img.blog.csdn.net/20170512032715582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="坐标系"></p>
<p>到这一步，绘制完成，接下来的KillGLWindow以及CreateGLWindow以及WndProc和之前一致，不解释。</p>
<p>第二个重头戏来了，WinMain。这个部分我们将实现通过按键控制你在整个3D世界中的游荡（其实是在控制整个3D世界移动）。下面我将仔细解释。</p>
<p>B键设置透明，这个之前笔记解释过，<strong>记得disable深度测试，然后enable透明</strong>。F键设置画质，不解释了。</p>
<p>接下来是按up键，这个时候首先会更改xpos和zpos，为什么会如此修改，期初我也很疑惑，不过在画了一张图解之后，便豁然开朗了。我们根据代码可以知道heading这个变量代表了你当前正脸朝向与Z轴正向的角度（因为heading赋值给了yrot，而yrot是绕着y轴旋转的角度，所以heading就是你转身的角度啦）。</p>
<p>通过下图我们便可以知道为什么使用UP键向前走的时候，作者使用如下两行代码实现移动了。</p>
<p><img src="http://img.blog.csdn.net/20170512032741089?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="up&amp;down"></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">xpos -= (<span class="keyword">float</span>)<span class="built_in">sin</span>(heading*piover180) * <span class="number">0.05f</span>;</span><br><span class="line">zpos -= (<span class="keyword">float</span>)<span class="built_in">cos</span>(heading*piover180) * <span class="number">0.05f</span>;</span><br></pre></td></tr></table></figure>

<p>接着作者在pos变换完成以后，稍稍微修改walkbias变量，它将影响到ypos，从而模仿人行走的时候的高低起伏，让人更加自然。</p>
<p>接下来的 left, right, page_up &amp; page_down 按键的反馈设置就基本不用解释啦，你按照右手定则稍稍为跟着做一下就能够理解啦。需要注意的是，在WinMain中，所有的pos和trans都是从观察者的角度进行变换的，真正的变换是在DrawGLScene，在DrawGLScene方法中我们已经对数据做了特殊处理以保证显示正常自然。</p>
<p>好了，到这里本章节的代码也就解释完毕了，粗读代码会觉得很容易，因为都是我们之前已经掌握的内容，但是细想作者是如何一步一步具体实现的时候，情况就会复杂很多。通过不断画图和翻以前的代码，我才不断的深入理解整个OpenGL的原理，以及3D模型的构建原理和过程。至此，OpenGL应该算是正式入门了吧。</p>
<p>稍稍留一个小问题，你知道为什么作者在DrawGLScene方法中，xtrans直接赋值为xpos的负值，ztrans同样直接赋值为zpos的负值，sceneroty也是直接取了yrot的负值（不过为了严谨，又添了一个360作为进位），偏偏ytrans要在赋值为walkbias的负值之后，还要减去一个0.25呢？（提示，walkbias乘上sin之后有正有负，如果不添加一个常数，你的“眼睛”就会在地板所在的y=0面上不断上下抖动，而添加0.25之后，则是将你的“眼睛”提高到了一定的高度，让你有了身高的感觉，从而更加自然）</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
        <tag>变换</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（五）</title>
    <url>/2017/05/07/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/71316132" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/71316132</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/nehexue-xi-bi-ji-wu/">http://yaoyl.cn/nehexue-xi-bi-ji-wu/</a></p>
<hr>
<p>这次我们将尝试Lesson6和Lesson7的内容。这个部分我们将学习怎么给一个模型进行纹理映射（其实就是贴图）。</p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>这次实验因为需要使用OpenGL的glaux.h库头使用位图对构建的图形进行纹理映射。所以我们需要进一步进行环境搭建。（注：环境搭建很麻烦，因为微软的VS环境很乱）</p>
<p>如何布置这个库头可以参考<a href="http://blog.csdn.net/delphiwcdj/article/details/6326586/" target="_blank" rel="noopener">【 VS2008无法打开gl/glaux.h头文件的解决方法】</a>我使用的是方法4，测试能够正确include库头。</p>
<p>在高版本的VS中，因为VS使用的是自己重新修改过的C++，所以在进行编译的过程中，可能会出现ERROR LNK2019报错，无法解析“_sscanf,_sscanf_s”，这个时候我们可以参考<a href="http://blog.csdn.net/u010317005/article/details/51155363" target="_blank" rel="noopener">【 VS2015 无法解析的外部符号 __vsnwprintf_s】</a></p>
<p>如果我们在使用AUX_RGBImageRec定义变量的时候，系统没有报错的话，就说明我们本次基本的环境已经搭建好了。</p>
<p>另外，因为我们在实验中需要使用fopen，而微软的VS2015中会强行报错，为了避免不必要的麻烦，我们需要关掉fopen的报错。这个部分我们可以参考<a href="http://jingyan.baidu.com/article/ce436649fd61543773afd32e.html" target="_blank" rel="noopener">【百度经验：VS2013中如何解决error C4996: ‘fopen’问题】</a></p>
<h2 id="开始实现"><a href="#开始实现" class="headerlink" title="开始实现"></a>开始实现</h2><p>如果没出什么问题的话，到这里我们应该能够正常的编写这一刻的代码了。（如果还有什么报错请尝试自行解决或者戳我）。</p>
<p>本次需要在3维图像上添加纹理映射，首先需要的是读取位图像文件。读取的代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">AUX_RGBImageRec *<span class="title">LoadBMP</span><span class="params">(<span class="keyword">char</span> *Filename)</span>                <span class="comment">// Loads A Bitmap Image</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *File=<span class="literal">NULL</span>;                                    <span class="comment">// File Handle</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!Filename)                                      <span class="comment">// Make Sure A Filename Was Given</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;                                    <span class="comment">// If Not Return NULL</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    File=fopen(Filename,<span class="string">"r"</span>);                           <span class="comment">// Check To See If The File Exists</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (File)                                           <span class="comment">// Does The File Exist?</span></span><br><span class="line">    &#123;</span><br><span class="line">        fclose(File);                                   <span class="comment">// Close The Handle</span></span><br><span class="line">        <span class="keyword">return</span> auxDIBImageLoad(Filename);               <span class="comment">// Load The Bitmap And Return A Pointer</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;                                        <span class="comment">// If Load Failed Return NULL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LoadGLTextures</span><span class="params">()</span>                                    <span class="comment">// Load Bitmaps And Convert To Textures</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Status=FALSE;                                   <span class="comment">// Status Indicator</span></span><br><span class="line"></span><br><span class="line">    AUX_RGBImageRec *TextureImage[<span class="number">1</span>];                   <span class="comment">// Create Storage Space For The Texture</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(TextureImage,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="keyword">void</span> *)*<span class="number">1</span>);            <span class="comment">// Set The Pointer To NULL</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load The Bitmap, Check For Errors, If Bitmap's Not Found Quit</span></span><br><span class="line">    <span class="keyword">if</span> (TextureImage[<span class="number">0</span>]=LoadBMP(<span class="string">"Data/NeHe.bmp"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        Status=TRUE;                                    <span class="comment">// Set The Status To TRUE</span></span><br><span class="line"></span><br><span class="line">        glGenTextures(<span class="number">1</span>, &amp;texture[<span class="number">0</span>]);                  <span class="comment">// Create The Texture</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Typical Texture Generation Using Data From The Bitmap</span></span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture[<span class="number">0</span>]);</span><br><span class="line">        glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, <span class="number">3</span>, TextureImage[<span class="number">0</span>]-&gt;sizeX, TextureImage[<span class="number">0</span>]-&gt;sizeY, <span class="number">0</span>, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[<span class="number">0</span>]-&gt;data);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (TextureImage[<span class="number">0</span>])                                    <span class="comment">// If Texture Exists</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (TextureImage[<span class="number">0</span>]-&gt;data)                          <span class="comment">// If Texture Image Exists</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">free</span>(TextureImage[<span class="number">0</span>]-&gt;data);                    <span class="comment">// Free The Texture Image Memory</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">free</span>(TextureImage[<span class="number">0</span>]);                              <span class="comment">// Free The Image Structure</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Status;                                      <span class="comment">// Return The Status</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第一个函数LoadBMP不需要解释，主要功能就是探寻目的位置中是否存在该图像文件。如果存在就调用auxDIBImageLoad将位图加载成渲染文件返回出来。</p>
<p>第二个函数LoadGLTextures要稍微注意一下，在本次实验中是很重要的一个功能函数。</p>
<p>函数中定义了一个LoadGLTextures数组用来存放位图的句柄，这里因为我们只读取了一张位图，所以只开了一个大小的数组。</p>
<p>接着调用LoadBMP将位图转换成为纹理渲染文件存进TextureImage， glGenTextures(1, &amp;texture[0]) 告诉OpenGL我们想生成一个纹理名字，glBindTexture将纹理名字 texture[0] 绑定到纹理目标上。</p>
<p>然后我们调用glTexImage2D进行纹理的创建。然后使用glTexParameteri对图像进行放大和缩小的滤波器进行设置。</p>
<p>最后再纹理穿件完成之后，我们需要释放掉纹理渲染数组中的内容。</p>
<p>整个纹理渲染工作到这里也就结束了。我们对InitGL稍作修改，使用LoadGLTextures检验位图是否存在，然后调用glEnable启用映射</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InitGL</span><span class="params">(GLvoid)</span>        <span class="comment">// 此处开始对OpenGL进行所有设置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">if</span> (!LoadGLTextures())       <span class="comment">// 调用纹理载入子例程</span></span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">return</span> FALSE;       <span class="comment">// 如果未能载入，返回FALSE</span></span><br><span class="line"> &#125;</span><br><span class="line"> glEnable(GL_TEXTURE_2D);      <span class="comment">// 启用纹理映射</span></span><br><span class="line"> glShadeModel(GL_SMOOTH);      <span class="comment">// 启用阴影平滑</span></span><br><span class="line"> glClearColor(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.5f</span>);     <span class="comment">// 黑色背景</span></span><br><span class="line"> glClearDepth(<span class="number">1.0f</span>);       <span class="comment">// 设置深度缓存</span></span><br><span class="line"> glEnable(GL_DEPTH_TEST);      <span class="comment">// 启用深度测试</span></span><br><span class="line"> glDepthFunc(GL_LEQUAL);       <span class="comment">// 所作深度测试的类型</span></span><br><span class="line"> glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);   <span class="comment">// 真正精细的透视修正</span></span><br><span class="line"> <span class="keyword">return</span> TRUE;        <span class="comment">// 初始化 OK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后我们按照惯例，修改DrawGLScene方法，需要注意的是，在将纹理贴上模型的时候，需要调用glTexCoord2f方法，第一个参数是X坐标，0.0是纹理的左侧，0.5是纹理的中点，1.0是纹理的右侧。第二个参数是Y坐标，0.0是纹理的底部，0.5是纹理的中点，1.0是纹理的顶部。将4个点全部绑定在张芳行上面之后，便能够正常的显示了。需要注意的是，在glTexCoord2f方法中，参考系是以图像的右下角作为原点，左边为X轴正方向，上方为Y轴正方向（和绘图中的直角坐标系的设定相似）。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int DrawGLScene(GLvoid)                                 // Here&apos;s Where We Do All The Drawing</span><br><span class="line">&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear The Screen And The Depth Buffer</span><br><span class="line">    glLoadIdentity();                                   // Reset The View</span><br><span class="line">    glTranslatef(0.0f,0.0f,-5.0f);</span><br><span class="line"></span><br><span class="line">    glRotatef(xrot,1.0f,0.0f,0.0f);</span><br><span class="line">    glRotatef(yrot,0.0f,1.0f,0.0f);</span><br><span class="line">    glRotatef(zrot,0.0f,0.0f,1.0f);</span><br><span class="line"></span><br><span class="line">    glBindTexture(GL_TEXTURE_2D, texture[0]);</span><br><span class="line"></span><br><span class="line">    glBegin(GL_QUADS);</span><br><span class="line">        // Front Face</span><br><span class="line">        glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f,  1.0f);</span><br><span class="line">        // Back Face</span><br><span class="line">        glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f);</span><br><span class="line">        // Top Face</span><br><span class="line">        glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f,  1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f,  1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);</span><br><span class="line">        // Bottom Face</span><br><span class="line">        glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, -1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, -1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);</span><br><span class="line">        // Right face</span><br><span class="line">        glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f,  1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);</span><br><span class="line">        // Left Face</span><br><span class="line">        glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f,  1.0f,  1.0f);</span><br><span class="line">        glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);</span><br><span class="line">    glEnd();</span><br><span class="line"></span><br><span class="line">    xrot+=0.3f;</span><br><span class="line">    yrot+=0.2f;</span><br><span class="line">    zrot+=0.4f;</span><br><span class="line">    return TRUE;                                        // Keep Going</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法中，在begin之前，我们先预先定义好图像的旋转方式（不一定非要放在begin之前）。</p>
<p>接着调用glBindTexture进行绑定。我们就能够开始进行纹理渲染的绑定操作了。</p>
<p>操作中我们在每次定义点的同时，将纹理的四个角也固定在对应的点上，便能够完成绑定工作。</p>
<p>注意，用原引博客的话说，<strong>当您想改变纹理时，应该绑定新的纹理。有一点值得指出的是，您不能在 glBegin() 和 glEnd() 之间绑定纹理，必须在 glBegin() 之前或 glEnd() 之后绑定。</strong></p>
<p>到这一步，这一课内容也就结束了。</p>
<p><img src="http://img.blog.csdn.net/20170516074420532?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section5.1"></p>
<h2 id="课程7的实现"><a href="#课程7的实现" class="headerlink" title="课程7的实现"></a>课程7的实现</h2><p>我们接下来尝试课程7的内容。</p>
<p>课程7将带领我们建立一个光照系统，我们也将在这个课程中尝试添加按键控制。通过这个课程，我们会对OpenGL中的光照系统的实现、控制以及如何实现按键控制有一个入门的了解。本次实验基于课程6的内容进行进一步扩展。</p>
<p>实验中，因为我们需要首先添加一些群居变量用来对按键状态进行识别，同时也还要添加一些全局变量用来记录图像的旋转角度。</p>
<p>因此我们在全局变量中添加如下变量。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GLfloat xrot;               <span class="comment">// X 旋转角度</span></span><br><span class="line">GLfloat yrot;               <span class="comment">// Y 旋转角度</span></span><br><span class="line">GLfloat xspeed;             <span class="comment">// X 旋转速度</span></span><br><span class="line">GLfloat yspeed;             <span class="comment">// Y 旋转速度</span></span><br><span class="line">GLfloat z=<span class="number">-5.0f</span>;            <span class="comment">// Depth Into The Screen</span></span><br><span class="line"></span><br><span class="line">GLfloat LightAmbient[]=     &#123; <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">1.0f</span> &#125;;</span><br><span class="line">GLfloat LightDiffuse[]=     &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;;</span><br><span class="line">GLfloat LightPosition[]=    &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">2.0f</span>, <span class="number">1.0f</span> &#125;;</span><br><span class="line"></span><br><span class="line">GLuint  filter;             <span class="comment">// 滤波器类型</span></span><br><span class="line">GLuint  texture[<span class="number">3</span>];         <span class="comment">// 3中纹理文件指针</span></span><br></pre></td></tr></table></figure>

<p>上面代码中，中间3行数组分别表示环境光变量数组，漫射光变量数组，以及光源位置数组。</p>
<p>其中，我们需要了解一下环境光和漫射光的意义是什么。<strong>环境光来自于四面八方。所有场景中的对象都处于环境光的照射中；漫射光由特定的光源产生，并在您的场景中的对象表面上产生反射。处于漫射光直接照射下的任何对象表面都变得很亮，而几乎未被照射到的区域就显得要暗一些。</strong></p>
<p>LightAmbient和LightDiffuse创建光源的过程和颜色的创建完全一致。前三个参数分别是RGB三色分量，最后一个是alpha通道参数。</p>
<p>而LightPosition中，前三个参数表示光源的XYZ左坐标，最后一个参数将告诉OpenGL这里指定的坐标就是光源的位置。</p>
<p>然后我们在上一次实验的基础上稍稍稍修改LoadGLTextures函数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LoadGLTextures</span><span class="params">()</span>                                    <span class="comment">// Load Bitmaps And Convert To Textures</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Status=FALSE;                                   <span class="comment">// Status Indicator</span></span><br><span class="line"></span><br><span class="line">    AUX_RGBImageRec *TextureImage[<span class="number">1</span>];                   <span class="comment">// Create Storage Space For The Texture</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(TextureImage,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="keyword">void</span> *)*<span class="number">1</span>);            <span class="comment">// Set The Pointer To NULL</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Load The Bitmap, Check For Errors, If Bitmap's Not Found Quit</span></span><br><span class="line">    <span class="keyword">if</span> (TextureImage[<span class="number">0</span>]=LoadBMP(<span class="string">"Data/Crate.bmp"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        Status=TRUE;                                    <span class="comment">// Set The Status To TRUE</span></span><br><span class="line"></span><br><span class="line">        glGenTextures(<span class="number">3</span>, &amp;texture[<span class="number">0</span>]);                  <span class="comment">// Create Three Textures</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create Nearest Filtered Texture</span></span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture[<span class="number">0</span>]);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST);</span><br><span class="line">        glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, <span class="number">3</span>, TextureImage[<span class="number">0</span>]-&gt;sizeX, TextureImage[<span class="number">0</span>]-&gt;sizeY, <span class="number">0</span>, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[<span class="number">0</span>]-&gt;data);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create Linear Filtered Texture</span></span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture[<span class="number">1</span>]);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR);</span><br><span class="line">        glTexImage2D(GL_TEXTURE_2D, <span class="number">0</span>, <span class="number">3</span>, TextureImage[<span class="number">0</span>]-&gt;sizeX, TextureImage[<span class="number">0</span>]-&gt;sizeY, <span class="number">0</span>, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[<span class="number">0</span>]-&gt;data);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create MipMapped Texture</span></span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture[<span class="number">2</span>]);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);</span><br><span class="line">        glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST);</span><br><span class="line">        </span><br><span class="line">        gluBuild2DMipmaps(GL_TEXTURE_2D, <span class="number">3</span>, TextureImage[<span class="number">0</span>]-&gt;sizeX, TextureImage[<span class="number">0</span>]-&gt;sizeY, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[<span class="number">0</span>]-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (TextureImage[<span class="number">0</span>])                                <span class="comment">// If Texture Exists</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (TextureImage[<span class="number">0</span>]-&gt;data)                      <span class="comment">// If Texture Image Exists</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">free</span>(TextureImage[<span class="number">0</span>]-&gt;data);                <span class="comment">// Free The Texture Image Memory</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">free</span>(TextureImage[<span class="number">0</span>]);                          <span class="comment">// Free The Image Structure</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Status;                                      <span class="comment">// Return The Status</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在读过上一次的代码之后，我们可以很容易的知道这段代码就是将Data/Crate.bmp这张位图转换成纹理并且存放在texture数组中，并且3次渲染的画面都一致（基于这一点，其实我们也可以自己实现不同的3张图片做出3种不同的，不同的是3章图像的glTexParameteri进行滤波的方式并不相同，第一张渲染使用最邻近过滤（GL_NEAREST），第二张使用线性滤波（GL_LINEAR），第三张使用选择最邻近的mip层，使用线性过滤（GL_LINEAR_MIPMAP_NEAREST）。然后就可以在立方体上渲染出不同的团了）。其他的部分改变不大。</p>
<p>上面对纹理映射的滤波器的选择可以参考<a href="https://my.oschina.net/sweetdark/blog/177812" target="_blank" rel="noopener">【OpenGL超级宝典笔记——纹理映射Mipmap】</a>这篇博客，在上面有很详细的解释和说明。</p>
<p>然后在滤波器设置结束之后，最后一行还添加了一个gluBuild2DMipmaps方法，这个在上面的【OpenGL超级宝典笔记——纹理映射Mipmap】中也有提到，是一个能够将任意图像正常缩放到适当大小的方法函数，这样就不用我们费心进行图像的预处理工作了。</p>
<p>好了，到这里LoadGLTextures就设置完毕了。</p>
<p>接着就到InitGL函数了，我们在第六课中已经设置了GLEnable以及glHint进行纹理绑定工作了。我们需要在后面添加新的方法，用来实现光源的初始化。具体参考代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InitGL</span><span class="params">(GLvoid)</span>                                      <span class="comment">// All Setup For OpenGL Goes Here</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!LoadGLTextures())                              <span class="comment">// Jump To Texture Loading Routine</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;                                   <span class="comment">// If Texture Didn't Load Return FALSE</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glEnable(GL_TEXTURE_2D);                            <span class="comment">// Enable Texture Mapping</span></span><br><span class="line">    glShadeModel(GL_SMOOTH);                            <span class="comment">// Enable Smooth Shading</span></span><br><span class="line">    glClearColor(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.5f</span>);               <span class="comment">// Black Background</span></span><br><span class="line">    glClearDepth(<span class="number">1.0f</span>);                                 <span class="comment">// Depth Buffer Setup</span></span><br><span class="line">    glEnable(GL_DEPTH_TEST);                            <span class="comment">// Enables Depth Testing</span></span><br><span class="line">    glDepthFunc(GL_LEQUAL);                             <span class="comment">// The Type Of Depth Testing To Do</span></span><br><span class="line">    glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);  <span class="comment">// Really Nice Perspective Calculations</span></span><br><span class="line"></span><br><span class="line">    glLightfv(GL_LIGHT1, GL_AMBIENT, LightAmbient);     <span class="comment">// Setup The Ambient Light</span></span><br><span class="line">    glLightfv(GL_LIGHT1, GL_DIFFUSE, LightDiffuse);     <span class="comment">// Setup The Diffuse Light</span></span><br><span class="line">    glLightfv(GL_LIGHT1, GL_POSITION,LightPosition);    <span class="comment">// Position The Light</span></span><br><span class="line">    glEnable(GL_LIGHT1);                                <span class="comment">// Enable Light One</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Initialization Went OK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新增了一个1号光源GL_LIGHT1。在对GL_LIGHT新增的3个glLightfv方法中，第一个表示设置环境光（Ambient Light），传入我们已经定义好的全局变量LightAmbient；第二个是漫射光（Diffuse Light），传入我们已经定义好的全局变量LightDiffuse；第三个是光源位置，传入我们定义好的LightPosition。最后使用glEnable启用光源。</p>
<p>到这里点光源的初始化操作就结束了。和设置渲染一样，我们接着要在DrawGLScene中添加光源的某些设置，</p>
<p>在OpenGL中，法线是指经过面(多边形）上的一点且垂直于这个面(多边形)的直线。使用光源的时候必须指定一条法线。法线告诉OpenGL这个多边形的朝向，并指明多边形的正面和背面。如果没有指定法线，什么怪事情都可能发生：不该照亮的面被照亮了，多边形的背面也被照亮….。对了，法线应该指向多边形的外侧。</p>
<p>所以我们在DrawGLScene中绘制图像的时候，也要同时设置法线。一般来说在绘制一个平面之前，我们就要预先定义好这个平面的法线。参考代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DrawGLScene</span><span class="params">(GLvoid)</span>                                 <span class="comment">// Here's Where We Do All The Drawing</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// Clear The Screen And The Depth Buffer</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// Reset The View</span></span><br><span class="line">    glTranslatef(<span class="number">0.0f</span>,<span class="number">0.0f</span>,z);</span><br><span class="line"></span><br><span class="line">    glRotatef(xrot,<span class="number">1.0f</span>,<span class="number">0.0f</span>,<span class="number">0.0f</span>);</span><br><span class="line">    glRotatef(yrot,<span class="number">0.0f</span>,<span class="number">1.0f</span>,<span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">    glBindTexture(GL_TEXTURE_2D, texture[filter]);</span><br><span class="line"></span><br><span class="line">    glBegin(GL_QUADS);</span><br><span class="line">        <span class="comment">// Front Face</span></span><br><span class="line">        glNormal3f( <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">-1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>,  <span class="number">1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>,  <span class="number">1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        <span class="comment">// Back Face</span></span><br><span class="line">        glNormal3f( <span class="number">0.0f</span>, <span class="number">0.0f</span>,<span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>,  <span class="number">1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        <span class="comment">// Top Face</span></span><br><span class="line">        glNormal3f( <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>,  <span class="number">1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>,  <span class="number">1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>,  <span class="number">1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        <span class="comment">// Bottom Face</span></span><br><span class="line">        glNormal3f( <span class="number">0.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">-1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        <span class="comment">// Right face</span></span><br><span class="line">        glNormal3f( <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>,  <span class="number">1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f( <span class="number">1.0f</span>,  <span class="number">1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f( <span class="number">1.0f</span>, <span class="number">-1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        <span class="comment">// Left Face</span></span><br><span class="line">        glNormal3f(<span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">0.0f</span>); glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">1.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>,  <span class="number">1.0f</span>,  <span class="number">1.0f</span>);</span><br><span class="line">        glTexCoord2f(<span class="number">0.0f</span>, <span class="number">1.0f</span>); glVertex3f(<span class="number">-1.0f</span>,  <span class="number">1.0f</span>, <span class="number">-1.0f</span>);</span><br><span class="line">    glEnd();</span><br><span class="line"></span><br><span class="line">    xrot+=xspeed;</span><br><span class="line">    yrot+=yspeed;</span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Keep Going</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>每新定义一个平面，我们都需要调用glNormal3f定义好一个法向量。法向量的3个参数分别表示其在X轴，Y轴，Z轴上的分量的长度。法向量的值是由面上的点计算出来的。</p>
<p>到这一步，我们编译运行以后就已经能够看到在点光源下的一个木箱子的图案，接下来我们将为其添加键盘控制功能。这部分在WinMain内。</p>
<p>我们在课程1上已经知道，nehe教程中，按键的反馈是在WinMain的一个while循环中，不断检测事件，然后对不同事件进行相应的反馈。里面已经添加了F1进行全屏控制的时间控制，我们要做的就是模仿F1的工作机制，添加其他按键的反馈。</p>
<p>在以前的while循环中，按键的触发设置代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(!done)                                    <span class="comment">// Loop That Runs While done=FALSE</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (PeekMessage(&amp;msg,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="number">0</span>,PM_REMOVE))   <span class="comment">// Is There A Message Waiting?</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (msg.message==WM_QUIT)               <span class="comment">// Have We Received A Quit Message?</span></span><br><span class="line">        &#123;</span><br><span class="line">            done=TRUE;                          <span class="comment">// If So done=TRUE</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>                                    <span class="comment">// If Not, Deal With Window Messages</span></span><br><span class="line">        &#123;</span><br><span class="line">            TranslateMessage(&amp;msg);             <span class="comment">// Translate The Message</span></span><br><span class="line">            DispatchMessage(&amp;msg);              <span class="comment">// Dispatch The Message</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>                                        <span class="comment">// If There Are No Messages</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Draw The Scene.  Watch For ESC Key And Quit Messages From DrawGLScene()</span></span><br><span class="line">        <span class="keyword">if</span> ((active &amp;&amp; !DrawGLScene()) || keys[VK_ESCAPE])  <span class="comment">// Active?  Was There A Quit Received?</span></span><br><span class="line">        &#123;</span><br><span class="line">            done=TRUE;                          <span class="comment">// ESC or DrawGLScene Signalled A Quit</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>                                    <span class="comment">// Not Time To Quit, Update Screen</span></span><br><span class="line">        &#123;</span><br><span class="line">            SwapBuffers(hDC);                   <span class="comment">// Swap Buffers (Double Buffering)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (keys[VK_F1])                        <span class="comment">// Is F1 Being Pressed?</span></span><br><span class="line">        &#123;</span><br><span class="line">            keys[VK_F1]=FALSE;                  <span class="comment">// If So Make Key FALSE</span></span><br><span class="line">            KillGLWindow();                     <span class="comment">// Kill Our Current Window</span></span><br><span class="line">            fullscreen=!fullscreen;             <span class="comment">// Toggle Fullscreen / Windowed Mode</span></span><br><span class="line">            <span class="comment">// Recreate Our OpenGL Window</span></span><br><span class="line">            <span class="keyword">if</span> (!CreateGLWindow(<span class="string">"NeHe's Texture Mapping Tutorial"</span>,<span class="number">640</span>,<span class="number">480</span>,<span class="number">16</span>,fullscreen))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;                       <span class="comment">// Quit If Window Was Not Created</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在确认ESC按键未被按下之前，OpenGL将会不停的绘制图片。在这个窗口刷新工作结束以后，我们开始了F1的按键判断。由此，我们可以在这个基础上，进一步扩展了。扩展的代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (!done)                                   <span class="comment">// Loop That Runs While done=FALSE</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (PeekMessage(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, PM_REMOVE))   <span class="comment">// Is There A Message Waiting?</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (msg.message == WM_QUIT)             <span class="comment">// Have We Received A Quit Message?</span></span><br><span class="line">            &#123;</span><br><span class="line">                done = TRUE;                            <span class="comment">// If So done=TRUE</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>                                    <span class="comment">// If Not, Deal With Window Messages</span></span><br><span class="line">            &#123;</span><br><span class="line">                TranslateMessage(&amp;msg);             <span class="comment">// Translate The Message</span></span><br><span class="line">                DispatchMessage(&amp;msg);              <span class="comment">// Dispatch The Message</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>                                        <span class="comment">// If There Are No Messages</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Draw The Scene.  Watch For ESC Key And Quit Messages From DrawGLScene()</span></span><br><span class="line">            <span class="keyword">if</span> ((active &amp;&amp; !DrawGLScene()) || keys[VK_ESCAPE])  <span class="comment">// Active?  Was There A Quit Received?</span></span><br><span class="line">            &#123;</span><br><span class="line">                done = TRUE;                            <span class="comment">// ESC or DrawGLScene Signalled A Quit</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>                                    <span class="comment">// Not Time To Quit, Update Screen</span></span><br><span class="line">            &#123;</span><br><span class="line">                SwapBuffers(hDC);                   <span class="comment">// Swap Buffers (Double Buffering)</span></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[<span class="string">'L'</span>] &amp;&amp; !lp)</span><br><span class="line">            &#123;</span><br><span class="line">                lp = TRUE;</span><br><span class="line">                light = !light;</span><br><span class="line">                <span class="keyword">if</span> (!light)</span><br><span class="line">                &#123;</span><br><span class="line">                    glDisable(GL_LIGHTING);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    glEnable(GL_LIGHTING);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!keys[<span class="string">'L'</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                lp = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[<span class="string">'F'</span>] &amp;&amp; !fp)</span><br><span class="line">            &#123;</span><br><span class="line">                fp = TRUE;</span><br><span class="line">                filter += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (filter&gt;<span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    filter = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!keys[<span class="string">'F'</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                fp = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[VK_PRIOR])</span><br><span class="line">            &#123;</span><br><span class="line">                z -= <span class="number">0.02f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[VK_NEXT])</span><br><span class="line">            &#123;</span><br><span class="line">                z += <span class="number">0.02f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[VK_UP])</span><br><span class="line">            &#123;</span><br><span class="line">                xspeed -= <span class="number">0.01f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[VK_DOWN])</span><br><span class="line">            &#123;</span><br><span class="line">                xspeed += <span class="number">0.01f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[VK_RIGHT])</span><br><span class="line">            &#123;</span><br><span class="line">                yspeed += <span class="number">0.01f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keys[VK_LEFT])</span><br><span class="line">            &#123;</span><br><span class="line">                yspeed -= <span class="number">0.01f</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (keys[VK_F1])                        <span class="comment">// Is F1 Being Pressed?</span></span><br><span class="line">            &#123;</span><br><span class="line">                keys[VK_F1] = FALSE;                    <span class="comment">// If So Make Key FALSE</span></span><br><span class="line">                KillGLWindow();                     <span class="comment">// Kill Our Current Window</span></span><br><span class="line">                fullscreen = !fullscreen;               <span class="comment">// Toggle Fullscreen / Windowed Mode</span></span><br><span class="line">                                                        <span class="comment">// Recreate Our OpenGL Window</span></span><br><span class="line">                <span class="keyword">if</span> (!CreateGLWindow(<span class="string">"NeHe's Textures, Lighting &amp; Keyboard Tutorial"</span>, <span class="number">640</span>, <span class="number">480</span>, <span class="number">16</span>, fullscreen))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;                       <span class="comment">// Quit If Window Was Not Created</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>如果按下L建，就对光源GL_LIGHTING进行改变（我们在初始化InitGL的时候，就曾经调用过glEnable，不知道你是否还有印象）。其他部分都不难，这里就不一一解释了。</p>
<p>另外需要说明的是，因为在NEHE教程的前文中，按键反馈是在刷新屏幕<code>if ((active &amp;&amp; !DrawGLScene()) || keys[VK_ESCAPE])</code>这个判断结束之后才进行的按键反馈，而在其之后的代码中，却又将ESC之外的按键触发部分放进了判断条件之内。我这里模仿的是作者以前的按键触发设置，所以代码和作者lesson7的代码稍有不同。不过最终效果其实一致——只不过我的会在按下ESC之后延迟一帧才推出，而作者按下ESC立刻退出，因为刷新频率很快，所以其实想过一只。</p>
<p>最后，实验正确运行的话，你应该能够在窗口中正常的运行你的第一个有按键反馈的窗口游戏了。L打开灯光，F设置不同的滤波器，上下左右方向键分别设置不同的旋转方向，PageUp和PageDown分别将图形靠近或者远离我们。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（十）</title>
    <url>/2017/05/13/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/72810534" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/72810534</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/nehexue-xi-bi-ji-shi/">http://yaoyl.cn/nehexue-xi-bi-ji-shi/</a></p>
<hr>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>本部分博客将以nehe教程第2课，笔记（三）为蓝本，将Windows中完成的基础实验在Ubuntu中进行实现。</p>
<p>在<a href="http://yaoyl.cn/ubuntu-huan-jing-pei-zhi/">【Ubuntu环境配置】</a>中我们已经对Ubuntu中的OpenGL环境进行了配置，并且完成了最基础的茶壶demo，接下来我们将进行实验相关的后续开发。</p>
<h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>因为实验中我们需要终端接收到的数据能够在图形界面中实时显示出来，这里我们使用nehe教程的第二课内容，绘制一个矩形作为进度条，起始为0%，最高为100%。接着我们将让这个进度条能够对传输过来的信号产生反馈。将整个过程进行拆分，我们可以按照如下步骤进行实现。</p>
<ol>
<li>构建一个OpenGL窗口，能够根据本地按键实现进度条控制</li>
<li>让OpenGL的窗口能够接收其他终端发送过来的消息</li>
<li>让OpenGL窗口对接收到的信息进行一定的实时反馈（比如进度条变换）</li>
</ol>
<h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><h2 id="OpenGL窗口搭建"><a href="#OpenGL窗口搭建" class="headerlink" title="OpenGL窗口搭建"></a>OpenGL窗口搭建</h2><p>本次使用的代码是以nehe教程第二课中，Linux代码为蓝本，进行修改实现的。<a href="http://nehe.gamedev.net/data/lessons/linux/lesson02.tar.gz" target="_blank" rel="noopener">【代码链接】</a></p>
<p>首先我们将窗口显示中的三角形去掉，留下一个长方形，同时将长方形的右边两个点和左边两个点重合以做出进度条为0%的感觉。代码如下：</p>
<p><img src="http://img.blog.csdn.net/20170530163934393?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="进度条代码"></p>
<h3 id="按钮控制的实现"><a href="#按钮控制的实现" class="headerlink" title="按钮控制的实现"></a>按钮控制的实现</h3><p>我在初始化InitGL的时候，将square_len初始化为0，当有按键触发的时候，square_len++，这样就能够完成进度条的前进工作。</p>
<p>在原始代码中，我们可以看到main函数中，有一个<code>glutKeyboardFunc</code>方法，传入了<code>keyPressed</code>的地址，在<code>keyPressed</code>中，定义了使用<code>ESC</code>按钮进行退出的方法。我们将在这里进行尝试，试试方向键左和方向键右能不能让窗口出现一些反馈。</p>
<p>在经过不短的一段时间的寻找之后，我终于找到了在OpenGL中，各种按键的键值是在<code>glut.h</code>中预定义好的。</p>
<p><img src="http://img.blog.csdn.net/20170530164000862?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="键值"></p>
<p>参考一片CSDN博客<a href="http://blog.csdn.net/andy20081251/article/details/38922295" target="_blank" rel="noopener">【pengl键盘控制一】</a>，我们可以发现在本次程序中，ESC按键确实也刚好是27，这是不是也就意味着我们可以直接按照上面的方法进行修改了？首先我们将ESC的宏定义值修改为102(十进制，对应0x66)，尝试使用左键退出窗体程序。</p>
<p>但是很意外的，没有成功。是不是按键本身的键值并不是102？</p>
<p>我对代码进行进一步修改，当有按键活动的时候，记录下来当前按键的键值，将其存进本地文件中。（亲测不能直接printf，因为根本不会显示出来，至于原因待会会有解释）代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* The function called whenever a key is pressed. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* avoid thrashing this procedure */</span></span><br><span class="line">    <span class="comment">//usleep(100);</span></span><br><span class="line"></span><br><span class="line">    fp = fopen(<span class="string">"key_value.txt"</span>, <span class="string">"a+"</span>); <span class="comment">// a+意味着在文本最后追加</span></span><br><span class="line">    <span class="built_in">fprintf</span>(fp, <span class="string">"%d\n"</span>, key);</span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If escape is pressed, kill everything. */</span></span><br><span class="line">    <span class="keyword">if</span> (key == ESCAPE) &#123;</span><br><span class="line">        <span class="comment">/* shut down our window */</span></span><br><span class="line">        glutDestroyWindow(window);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* exit the program...normal termination. */</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>尝试按下F1~F12的按键，以及上下左右等按键，以及数字按键之后，我们发现txt文档中只记录下来了数字键值，根本没有其他的键值。</p>
<p>为了解决这个问题，我特地打开了nehe的lesson10的linux代码（因为这一课会用到方向键进行控制）。发现原来上下左右这类按键需要在main函数中使用<code>glutSpecialFunc</code>方法，传入一个操作函数进行操作。这里我定义了一个<code>specialKeyPressed</code>方法。在尝试获取键值，并且成功之后，我开始在这里进行进度条的控制。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">specialKeyPressed</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//usleep(100);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    fp = fopen("key_value.txt", "a+");</span></span><br><span class="line"><span class="comment">    fprintf(fp, "%d\n", key);</span></span><br><span class="line"><span class="comment">    fclose(fp);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">switch</span>(key) &#123;</span><br><span class="line">    <span class="keyword">case</span> GLUT_KEY_LEFT:</span><br><span class="line">        square_len--;</span><br><span class="line">        <span class="keyword">if</span>(square_len &lt;= <span class="number">0</span>) square_len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> GLUT_KEY_RIGHT:</span><br><span class="line">        square_len++;</span><br><span class="line">        <span class="keyword">if</span>(square_len &gt;= <span class="number">100</span>) square_len = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为了避免越界，我们需要将square_len控制在0-100之间。同时我们直接使用glut中宏定义的键值，进行按键判断（我已经对键值进行过测试。发现和宏定义的键值确实一致）。</p>
<p>到这里，我们完成了本次demo的step1，一个使用按键进行进度条控制的OpenGL窗口已经构建成功。</p>
<h3 id="在OpenGL创建的控制台窗口中使用网络协议传输"><a href="#在OpenGL创建的控制台窗口中使用网络协议传输" class="headerlink" title="在OpenGL创建的控制台窗口中使用网络协议传输"></a>在OpenGL创建的控制台窗口中使用网络协议传输</h3><p>首先，我们需要知道，在之前的Socket编程中，我们使用的一直都是控制台窗口程序进行的测试，但是在本次实验中，我的理想状态是使用OpenGL建立的窗口作为server，新建一个控制台作为client，然后实验中使用client对server进行控制。</p>
<p>我先定义了一个tcp_server.h头文件。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/shm.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYPORT  8887</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QUEUE   20</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">tcp_server_init</span><span class="params">(<span class="keyword">int</span> &amp;server_sockfd, <span class="keyword">int</span> &amp;conn)</span> </span>&#123;</span><br><span class="line">    <span class="comment">///定义sockfd</span></span><br><span class="line">    server_sockfd = socket(AF_INET,SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">///定义sockaddr_in</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server_sockaddr</span>;</span></span><br><span class="line">    server_sockaddr.sin_family = AF_INET;</span><br><span class="line">    server_sockaddr.sin_port = htons(MYPORT);</span><br><span class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line">    <span class="comment">///bind，成功返回0，出错返回-1</span></span><br><span class="line">    <span class="keyword">if</span>(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,<span class="keyword">sizeof</span>(server_sockaddr))==<span class="number">-1</span>) &#123;</span><br><span class="line">        perror(<span class="string">"bind"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///listen，成功返回0，出错返回-1</span></span><br><span class="line">    <span class="keyword">if</span>(listen(server_sockfd,QUEUE) == <span class="number">-1</span>) &#123;</span><br><span class="line">        perror(<span class="string">"listen"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///客户端套接字</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client_addr</span>;</span></span><br><span class="line">    <span class="keyword">socklen_t</span> length = <span class="keyword">sizeof</span>(client_addr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">///成功返回非负描述字，出错返回-1</span></span><br><span class="line">    conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</span><br><span class="line">    <span class="keyword">if</span>(conn&lt;<span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">"connect"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf("before_conn\n");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">tcp_server_close</span><span class="params">(<span class="keyword">int</span> &amp;server_sockfd, <span class="keyword">int</span> &amp;conn)</span> </span>&#123;</span><br><span class="line">    close(conn);</span><br><span class="line">    close(server_sockfd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="方法一，DrawGLScene中接收消息"><a href="#方法一，DrawGLScene中接收消息" class="headerlink" title="方法一，DrawGLScene中接收消息"></a>方法一，DrawGLScene中接收消息</h4><p>首先我尝试直接在main函数中没有进入glutMainLoop之前，建立tcp连接。（<code>tcp_server_init(server_sockfd, conn);</code>方法在上面已经给出来了）然后在DrawGLScene中接受消息，代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* The main drawing function. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawGLScene</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);     <span class="comment">// Clear The Screen And The Depth Buffer</span></span><br><span class="line">    glLoadIdentity();               <span class="comment">// Reset The View</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">    <span class="keyword">int</span> len = recv(conn, buffer, <span class="keyword">sizeof</span>(buffer),<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;len; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x66</span>) &#123;</span><br><span class="line">            square_len++;</span><br><span class="line">            <span class="keyword">if</span>(square_len &gt;= <span class="number">100</span>) square_len = <span class="number">100</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x64</span>) &#123;</span><br><span class="line">            square_len--;</span><br><span class="line">            <span class="keyword">if</span>(square_len &lt;= <span class="number">0</span>) square_len = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fputs</span>(buffer, <span class="built_in">stdout</span>);</span><br><span class="line">    send(conn, buffer, len, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>,<span class="number">0.0f</span>,<span class="number">-6.0f</span>);             <span class="comment">// Move Right 3 Units</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// draw a square (quadrilateral)</span></span><br><span class="line">    glBegin(GL_QUADS);              <span class="comment">// start drawing a polygon (4 sided)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Top Left</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>+square_len*<span class="number">0.05</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Top Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>+square_len*<span class="number">0.05</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Bottom Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Bottom Left</span></span><br><span class="line">    glEnd();                    <span class="comment">// done with the polygon</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// swap buffers to display, since we're double buffered.</span></span><br><span class="line">    glutSwapBuffers();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://img.blog.csdn.net/20170530164246694?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初次尝试"></p>
<p>运行结果如图。</p>
<p><img src="http://img.blog.csdn.net/20170530164310861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="初次尝试-运行"></p>
<p>刚看到这种情况的时候我以为是程序运行出错，于是经过很长一段时间的搜索才找到了一种解决办法，这个办法我待会会说，这里先说目前的这个问题的解决办法。</p>
<p>首先我们要知道，为什么会出现这个问题，它其实是TCP_\server_init函数中，执行到<code>conn = accept(server_sockfd, (struct sockaddr*)&amp;client\_addr, &amp;length);</code>的时候，在那里停止了，结果导致glut没有继续绘制窗口，最终造成我们看到的窗口很奇怪。对accept稍作了解便知道，这个方法是提取出所监听套接字的等待连接队列中第一个连接请求，创建一个新的套接字，并返回指向该套接字的文件描述符。（参见<a href="http://blog.csdn.net/david_xtd/article/details/7087843" target="_blank" rel="noopener">【socket编程之accept()函数】</a>）这个时候，所以，OpenGL中绘制的窗口会这么奇怪，其实就只是因为server在等待客户端的连接，所以才会继续没有往下执行而已。</p>
<p>我们打开之前的tcp编程中，tcp_client_demo2项目，编译并且运行，和server成功建立上连接成功，理想中，这个时候应该是没有问题了，但是运行以后，显示依然有问题。</p>
<p><img src="http://img.blog.csdn.net/20170530164342970?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="问题2"></p>
<p>这里我猜测是因为recv阻塞了整个进程，造成后续画笔绘制没办法绘制。因为当我在client中发送一个f之后，server中的窗口就立刻能够正常移动进度条了。</p>
<p><img src="http://img.blog.csdn.net/20170530164408102?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="解决1"></p>
<p>最终的代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This code was created by Jeff Molofee '99 (ported to Linux/GLUT by Richard Campbell '99)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// If you've found this code useful, please let me know.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Visit me at www.demonews.com/hosted/nehe</span></span><br><span class="line"><span class="comment">// (email Richard Campbell at ulmont@bellsouth.net)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glut.h&gt;    // Header File For The GLUT Library</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/gl.h&gt;  // Header File For The OpenGL32 Library</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glu.h&gt; // Header File For The GLu32 Library</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;     // Header File For sleeping.</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcp_server.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ASCII code for the escape key. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ESCAPE 27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VK_LEFT 37</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VK_RIGHT 39</span></span><br><span class="line"></span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;<span class="comment">//需要注意</span></span><br><span class="line"><span class="keyword">int</span> square_len;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* TCP 链接  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE 1024</span></span><br><span class="line"><span class="keyword">int</span> server_sockfd, conn;</span><br><span class="line"><span class="keyword">char</span> buffer[BUFFER_SIZE];</span><br><span class="line"><span class="keyword">bool</span> server_init_flag;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The number of our GLUT window */</span></span><br><span class="line"><span class="keyword">int</span> window;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* A general OpenGL initialization function.  Sets all of the initial parameters. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitGL</span><span class="params">(<span class="keyword">int</span> Width, <span class="keyword">int</span> Height)</span> </span>&#123;        <span class="comment">// We call this right after our OpenGL window is created.</span></span><br><span class="line">    glClearColor(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);       <span class="comment">// This Will Clear The Background Color To Black</span></span><br><span class="line">    glClearDepth(<span class="number">1.0</span>);              <span class="comment">// Enables Clearing Of The Depth Buffer</span></span><br><span class="line">    glDepthFunc(GL_LESS);               <span class="comment">// The Type Of Depth Test To Do</span></span><br><span class="line">    glEnable(GL_DEPTH_TEST);            <span class="comment">// Enables Depth Testing</span></span><br><span class="line">    glShadeModel(GL_SMOOTH);            <span class="comment">// Enables Smooth Color Shading</span></span><br><span class="line"></span><br><span class="line">    glMatrixMode(GL_PROJECTION);</span><br><span class="line">    glLoadIdentity();               <span class="comment">// Reset The Projection Matrix</span></span><br><span class="line"></span><br><span class="line">    gluPerspective(<span class="number">45.0f</span>,(GLfloat)Width/(GLfloat)Height,<span class="number">0.1f</span>,<span class="number">100.0f</span>);   <span class="comment">// Calculate The Aspect Ratio Of The Window</span></span><br><span class="line"></span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line"></span><br><span class="line">    square_len = <span class="number">0</span>;</span><br><span class="line">    server_init_flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The function called when our window is resized (which shouldn't happen, because we're fullscreen) */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReSizeGLScene</span><span class="params">(<span class="keyword">int</span> Width, <span class="keyword">int</span> Height)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Height==<span class="number">0</span>)              <span class="comment">// Prevent A Divide By Zero If The Window Is Too Small</span></span><br><span class="line">        Height=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    glViewport(<span class="number">0</span>, <span class="number">0</span>, Width, Height);        <span class="comment">// Reset The Current Viewport And Perspective Transformation</span></span><br><span class="line"></span><br><span class="line">    glMatrixMode(GL_PROJECTION);</span><br><span class="line">    glLoadIdentity();</span><br><span class="line"></span><br><span class="line">    gluPerspective(<span class="number">45.0f</span>,(GLfloat)Width/(GLfloat)Height,<span class="number">0.1f</span>,<span class="number">100.0f</span>);</span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The main drawing function. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawGLScene</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);     <span class="comment">// Clear The Screen And The Depth Buffer</span></span><br><span class="line">    glLoadIdentity();               <span class="comment">// Reset The View</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">    <span class="keyword">int</span> len = recv(conn, buffer, <span class="keyword">sizeof</span>(buffer),<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;len; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x66</span>) &#123;</span><br><span class="line">            square_len++;</span><br><span class="line">            <span class="keyword">if</span>(square_len &gt;= <span class="number">100</span>) square_len = <span class="number">100</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x64</span>) &#123;</span><br><span class="line">            square_len--;</span><br><span class="line">            <span class="keyword">if</span>(square_len &lt;= <span class="number">0</span>) square_len = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fputs</span>(buffer, <span class="built_in">stdout</span>);</span><br><span class="line">    send(conn, buffer, len, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>,<span class="number">0.0f</span>,<span class="number">-6.0f</span>);             <span class="comment">// Move Right 3 Units</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// draw a square (quadrilateral)</span></span><br><span class="line">    glBegin(GL_QUADS);              <span class="comment">// start drawing a polygon (4 sided)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Top Left</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>+square_len*<span class="number">0.05</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Top Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>+square_len*<span class="number">0.05</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Bottom Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Bottom Left</span></span><br><span class="line">    glEnd();                    <span class="comment">// done with the polygon</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// swap buffers to display, since we're double buffered.</span></span><br><span class="line">    glutSwapBuffers();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The function called whenever a key is pressed. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If escape is pressed, kill everything. */</span></span><br><span class="line">    <span class="keyword">if</span> (key == ESCAPE) &#123;</span><br><span class="line">        <span class="comment">/* shut down our window */</span></span><br><span class="line">        glutDestroyWindow(window);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!tcp_server_close(server_sockfd, conn)) &#123;</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* exit the program...normal termination. */</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">specialKeyPressed</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//usleep(100);</span></span><br><span class="line">    <span class="keyword">switch</span>(key) &#123;</span><br><span class="line">    <span class="keyword">case</span> GLUT_KEY_LEFT:</span><br><span class="line">        square_len--;</span><br><span class="line">        <span class="keyword">if</span>(square_len &lt;= <span class="number">0</span>) square_len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> GLUT_KEY_RIGHT:</span><br><span class="line">        square_len++;</span><br><span class="line">        <span class="keyword">if</span>(square_len &gt;= <span class="number">100</span>) square_len = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Initialize GLUT state - glut will take any command line arguments that pertain to it or</span></span><br><span class="line"><span class="comment">       X Windows - look at its documentation at http://reality.sgi.com/mjk/spec3/spec3.html */</span></span><br><span class="line">    glutInit(&amp;argc, argv);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Select type of Display mode:</span></span><br><span class="line"><span class="comment">       Double buffer</span></span><br><span class="line"><span class="comment">       RGBA color</span></span><br><span class="line"><span class="comment">       Alpha components supported</span></span><br><span class="line"><span class="comment">       Depth buffer */</span></span><br><span class="line">    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_ALPHA | GLUT_DEPTH);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get a 640 x 480 window */</span></span><br><span class="line">    glutInitWindowSize(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* the window starts at the upper left corner of the screen */</span></span><br><span class="line">    glutInitWindowPosition(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Open a window */</span></span><br><span class="line">    window = glutCreateWindow(<span class="string">"我的第一个长方形进度条demo"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function to do all our OpenGL drawing. */</span></span><br><span class="line">    glutDisplayFunc(&amp;DrawGLScene);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全屏</span></span><br><span class="line">    <span class="comment">/* Go fullscreen.  This is the soonest we could possibly go fullscreen. */</span></span><br><span class="line">    <span class="comment">//glutFullScreen();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Even if there are no events, redraw our gl scene. */</span></span><br><span class="line">    glutIdleFunc(&amp;DrawGLScene);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function called when our window is resized. */</span></span><br><span class="line">    glutReshapeFunc(&amp;ReSizeGLScene);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function called when the keyboard is pressed. */</span></span><br><span class="line">    glutKeyboardFunc(&amp;keyPressed);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function called when special keys (arrows, page down, etc) are pressed. */</span></span><br><span class="line">    glutSpecialFunc(&amp;specialKeyPressed);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Initialize our window. */</span></span><br><span class="line">    InitGL(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尝试在glutMainLoop之外建立tcp连接</span></span><br><span class="line">    tcp_server_init(server_sockfd, conn);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Start Event Processing Engine */</span></span><br><span class="line">    glutMainLoop();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="方法二，在空闲回调函数中接受消息"><a href="#方法二，在空闲回调函数中接受消息" class="headerlink" title="方法二，在空闲回调函数中接受消息"></a>方法二，在空闲回调函数中接受消息</h4><p>使用空闲回调函数<code>glutIdleFunc</code>。参考博客<a href="http://blog.csdn.net/wuxinliulei/article/details/9103249" target="_blank" rel="noopener">【Idle回调函数的使用】</a>（原出处未知），以及一篇很有用的博客<a href="http://blog.163.com/tfn2008@yeah/blog/static/110321319201271153932982/" target="_blank" rel="noopener">【OpenGL下图形的交互控制[转]】</a></p>
<p>在nehe的所有教程中，图像的转变均是在<code>DrawGLScene</code>实现的，这种方法在单纯的图像变换，不存在任何等待的时候，是没有问题的。但是一旦需要等待的时候，就会出现之前截图中那样，图片绘制上出现问题，画面显示会很不流畅，我刚开始接触的时候也以为是自己的代码写的有问题。为了解决这个问题，我们可以试试其他的方法。</p>
<p>在博客中我们也知道，一般更新场景数据的时候，使用的就是Idle Callback。刚好符合我们的需求。下面我将说明一下代码的编写。</p>
<p>首先在main函数中已经定义好的部分回调函数后面加上一行空闲回调函数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//tcp_server_init(server_sockfd, conn);</span></span><br><span class="line">glutIdleFunc(&amp;IdleFun);  <span class="comment">// idle 回调函数</span></span><br></pre></td></tr></table></figure>

<p>有趣的是，我们发现，<code>DrawGLScene</code>方法也是在空闲回调函数中执行的。不过在main函数中出现两个DrawGLScene函数的时候，对程序的执行并不影响。</p>
<p>接下来我们定义<code>IdleFun</code>。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IdleFun</span><span class="params">()</span> </span>&#123; <span class="comment">// 回调函数，在控制台中的一些操作，需要在本部分进行控制</span></span><br><span class="line">    <span class="comment">//printf("test\n");</span></span><br><span class="line">    <span class="keyword">if</span>(!server_init_flag) &#123;</span><br><span class="line">        <span class="comment">//square_len++;</span></span><br><span class="line">        <span class="comment">//if(square_len &gt;= 100) square_len = 0;</span></span><br><span class="line">        <span class="comment">//printf("init\n");</span></span><br><span class="line">        <span class="keyword">if</span>(tcp_server_init(server_sockfd, conn)) <span class="built_in">printf</span>(<span class="string">"success\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"false\n"</span>);</span><br><span class="line">        server_init_flag = <span class="literal">true</span>;</span><br><span class="line">        glutPostRedisplay();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="keyword">int</span> len = recv(conn, buffer, <span class="keyword">sizeof</span>(buffer),<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;len; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x66</span>) &#123;</span><br><span class="line">                square_len++;</span><br><span class="line">                <span class="keyword">if</span>(square_len &gt;= <span class="number">100</span>) square_len = <span class="number">100</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x64</span>) &#123;</span><br><span class="line">                square_len--;</span><br><span class="line">                <span class="keyword">if</span>(square_len &lt;= <span class="number">0</span>) square_len = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fputs</span>(buffer, <span class="built_in">stdout</span>);</span><br><span class="line">        send(conn, buffer, len, <span class="number">0</span>);</span><br><span class="line">    glutPostRedisplay();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为了避免反复创建tcp连接，我们使用一个全局bool变量来标志是否已经创建连接。并且我们在刷新完场景数据之后，<strong>一定</strong>要调用<code>glutPostRedisplay</code>刷新当前屏幕，否则当前屏幕不会自动刷新，你也将看不到场景变化。具体参考可见<a href="http://www.cnblogs.com/live41/p/3395899.html" target="_blank" rel="noopener">【[译]GLUT教程 - glutPostRedisplay函数】</a>。（这是一篇很好的博客）最终的参考代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glut.h&gt;    // Header File For The GLUT Library</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/gl.h&gt;  // Header File For The OpenGL32 Library</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glu.h&gt; // Header File For The GLu32 Library</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;     // Header File For sleeping.</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcp_server.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ASCII code for the escape key. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ESCAPE 27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VK_LEFT 37</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VK_RIGHT 39</span></span><br><span class="line"></span><br><span class="line">FILE *fp = <span class="literal">NULL</span>;<span class="comment">//需要注意</span></span><br><span class="line"><span class="keyword">int</span> square_len;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* TCP 链接  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE 1024</span></span><br><span class="line"><span class="keyword">int</span> server_sockfd, conn;</span><br><span class="line"><span class="keyword">char</span> buffer[BUFFER_SIZE];</span><br><span class="line"><span class="keyword">bool</span> server_init_flag;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The number of our GLUT window */</span></span><br><span class="line"><span class="keyword">int</span> window;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* A general OpenGL initialization function.  Sets all of the initial parameters. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitGL</span><span class="params">(<span class="keyword">int</span> Width, <span class="keyword">int</span> Height)</span> </span>&#123;        <span class="comment">// We call this right after our OpenGL window is created.</span></span><br><span class="line">    glClearColor(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);       <span class="comment">// This Will Clear The Background Color To Black</span></span><br><span class="line">    glClearDepth(<span class="number">1.0</span>);              <span class="comment">// Enables Clearing Of The Depth Buffer</span></span><br><span class="line">    glDepthFunc(GL_LESS);               <span class="comment">// The Type Of Depth Test To Do</span></span><br><span class="line">    glEnable(GL_DEPTH_TEST);            <span class="comment">// Enables Depth Testing</span></span><br><span class="line">    glShadeModel(GL_SMOOTH);            <span class="comment">// Enables Smooth Color Shading</span></span><br><span class="line"></span><br><span class="line">    glMatrixMode(GL_PROJECTION);</span><br><span class="line">    glLoadIdentity();               <span class="comment">// Reset The Projection Matrix</span></span><br><span class="line"></span><br><span class="line">    gluPerspective(<span class="number">45.0f</span>,(GLfloat)Width/(GLfloat)Height,<span class="number">0.1f</span>,<span class="number">100.0f</span>);   <span class="comment">// Calculate The Aspect Ratio Of The Window</span></span><br><span class="line"></span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line"></span><br><span class="line">    square_len = <span class="number">0</span>;</span><br><span class="line">    server_init_flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//if(!tcp_server_init(server_sockfd, conn)) exit(1);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The function called when our window is resized (which shouldn't happen, because we're fullscreen) */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReSizeGLScene</span><span class="params">(<span class="keyword">int</span> Width, <span class="keyword">int</span> Height)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Height==<span class="number">0</span>)              <span class="comment">// Prevent A Divide By Zero If The Window Is Too Small</span></span><br><span class="line">        Height=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    glViewport(<span class="number">0</span>, <span class="number">0</span>, Width, Height);        <span class="comment">// Reset The Current Viewport And Perspective Transformation</span></span><br><span class="line"></span><br><span class="line">    glMatrixMode(GL_PROJECTION);</span><br><span class="line">    glLoadIdentity();</span><br><span class="line"></span><br><span class="line">    gluPerspective(<span class="number">45.0f</span>,(GLfloat)Width/(GLfloat)Height,<span class="number">0.1f</span>,<span class="number">100.0f</span>);</span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The main drawing function. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawGLScene</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);     <span class="comment">// Clear The Screen And The Depth Buffer</span></span><br><span class="line">    glLoadIdentity();               <span class="comment">// Reset The View</span></span><br><span class="line"></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>,<span class="number">0.0f</span>,<span class="number">-6.0f</span>);             <span class="comment">// Move Right 3 Units</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// draw a square (quadrilateral)</span></span><br><span class="line">    glBegin(GL_QUADS);              <span class="comment">// start drawing a polygon (4 sided)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Top Left</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>+square_len*<span class="number">0.05</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Top Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>+square_len*<span class="number">0.05</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Bottom Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>,<span class="number">-1.0f</span>, <span class="number">0.0f</span>);      <span class="comment">// Bottom Left</span></span><br><span class="line">    glEnd();                    <span class="comment">// done with the polygon</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// swap buffers to display, since we're double buffered.</span></span><br><span class="line">    glutSwapBuffers();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The function called whenever a key is pressed. */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* avoid thrashing this procedure */</span></span><br><span class="line">    <span class="comment">//usleep(100);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If escape is pressed, kill everything. */</span></span><br><span class="line">    <span class="keyword">if</span> (key == ESCAPE) &#123;</span><br><span class="line">        <span class="comment">/* shut down our window */</span></span><br><span class="line">        glutDestroyWindow(window);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!tcp_server_close(server_sockfd, conn)) &#123;</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* exit the program...normal termination. */</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">specialKeyPressed</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//usleep(100);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(key) &#123;</span><br><span class="line">    <span class="keyword">case</span> GLUT_KEY_LEFT:</span><br><span class="line">        square_len--;</span><br><span class="line">        <span class="keyword">if</span>(square_len &lt;= <span class="number">0</span>) square_len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> GLUT_KEY_RIGHT:</span><br><span class="line">        square_len++;</span><br><span class="line">        <span class="keyword">if</span>(square_len &gt;= <span class="number">100</span>) square_len = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IdleFun</span><span class="params">()</span> </span>&#123; <span class="comment">// 回调函数，在控制台中的一些操作，需要在本部分进行控制</span></span><br><span class="line">    <span class="comment">//printf("test\n");</span></span><br><span class="line">    <span class="keyword">if</span>(!server_init_flag) &#123;</span><br><span class="line">        <span class="comment">//square_len++;</span></span><br><span class="line">        <span class="comment">//if(square_len &gt;= 100) square_len = 0;</span></span><br><span class="line">        <span class="comment">//printf("init\n");</span></span><br><span class="line">        <span class="keyword">if</span>(tcp_server_init(server_sockfd, conn)) <span class="built_in">printf</span>(<span class="string">"success\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"false\n"</span>);</span><br><span class="line">        server_init_flag = <span class="literal">true</span>;</span><br><span class="line">        glutPostRedisplay();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="keyword">int</span> len = recv(conn, buffer, <span class="keyword">sizeof</span>(buffer),<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;len; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x66</span>) &#123;</span><br><span class="line">                square_len++;</span><br><span class="line">                <span class="keyword">if</span>(square_len &gt;= <span class="number">100</span>) square_len = <span class="number">100</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0x64</span>) &#123;</span><br><span class="line">                square_len--;</span><br><span class="line">                <span class="keyword">if</span>(square_len &lt;= <span class="number">0</span>) square_len = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fputs</span>(buffer, <span class="built_in">stdout</span>);</span><br><span class="line">        send(conn, buffer, len, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    glutPostRedisplay();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Initialize GLUT state - glut will take any command line arguments that pertain to it or</span></span><br><span class="line"><span class="comment">       X Windows - look at its documentation at http://reality.sgi.com/mjk/spec3/spec3.html */</span></span><br><span class="line">    glutInit(&amp;argc, argv);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Select type of Display mode:</span></span><br><span class="line"><span class="comment">       Double buffer</span></span><br><span class="line"><span class="comment">       RGBA color</span></span><br><span class="line"><span class="comment">       Alpha components supported</span></span><br><span class="line"><span class="comment">       Depth buffer */</span></span><br><span class="line">    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_ALPHA | GLUT_DEPTH);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get a 640 x 480 window */</span></span><br><span class="line">    glutInitWindowSize(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* the window starts at the upper left corner of the screen */</span></span><br><span class="line">    glutInitWindowPosition(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Open a window */</span></span><br><span class="line">    window = glutCreateWindow(<span class="string">"我的第一个长方形进度条demo"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function to do all our OpenGL drawing. */</span></span><br><span class="line">    glutDisplayFunc(&amp;DrawGLScene);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全屏</span></span><br><span class="line">    <span class="comment">/* Go fullscreen.  This is the soonest we could possibly go fullscreen. */</span></span><br><span class="line">    <span class="comment">//glutFullScreen();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Even if there are no events, redraw our gl scene. */</span></span><br><span class="line">    glutIdleFunc(&amp;DrawGLScene);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function called when our window is resized. */</span></span><br><span class="line">    glutReshapeFunc(&amp;ReSizeGLScene);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function called when the keyboard is pressed. */</span></span><br><span class="line">    glutKeyboardFunc(&amp;keyPressed);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//tcp_server_init(server_sockfd, conn);</span></span><br><span class="line">    glutIdleFunc(&amp;IdleFun);  <span class="comment">// idle 回调函数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Register the function called when special keys (arrows, page down, etc) are pressed. */</span></span><br><span class="line">    glutSpecialFunc(&amp;specialKeyPressed);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Initialize our window. */</span></span><br><span class="line">    InitGL(<span class="number">640</span>, <span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Start Event Processing Engine */</span></span><br><span class="line">    glutMainLoop();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完成这一步之后，基本上你就能够完成一个能够通过网络通信控制窗口界面的小demo了。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>RFID实验二总结</title>
    <url>/2017/05/21/RFID%E5%AE%9E%E9%AA%8C%E4%BA%8C%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<blockquote>
<p>没见过debug还这么麻烦的。。。。</p>
</blockquote>
<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/70307683" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/70307683</a></p>
<p>个人blog地址：<a href="http://123.207.243.115:81/rfidshi-yan-er-zong-jie-2/" target="_blank" rel="noopener">http://123.207.243.115:81/rfidshi-yan-er-zong-jie-2/</a></p>
<p>在实验过程中，需要不断翻阅实验课PPT之《03 电子钱包的安全管理》，《实验3文档》，以及不知名大佬的<a href="http://www.tqcto.com/article/software/83894.html" target="_blank" rel="noopener">课程总代码</a>，CSDN大佬吕浪的<a href="http://blog.csdn.net/lv_victor/article/details/51028930" target="_blank" rel="noopener">Java card开发系列文章</a>。</p>
<p>然后再自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。</p>
<p>最终的代码地址：<a href="https://github.com/LongyunYao/RFID_lab/" target="_blank" rel="noopener">https://github.com/LongyunYao/RFID_lab/</a></p>
<p><strong>代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。</strong></p>
<h1 id="正式实验"><a href="#正式实验" class="headerlink" title="正式实验"></a>正式实验</h1><h2 id="实验分析"><a href="#实验分析" class="headerlink" title="实验分析"></a>实验分析</h2><p>首先我们要知道本次实验中需要修改哪些函数，实现那哪些功能。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/----.png" alt="主要内容"></p>
<p>首先我们在PPT中知道本次实验的主要目的是：</p>
<ul>
<li><strong>过程密钥的生成</strong></li>
<li><strong>消息验证码MAC或交易验证码TAC的生成</strong></li>
</ul>
<p><img src="http://123.207.243.115:81/content/images/2017/04/------.png" alt="过程秘钥的产生"></p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/3DES--.png" alt="3DES"></p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/MAC_TAC--.png" alt="MACorTAC"></p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/MAC_TAC--2.png" alt="MACorTAC2"></p>
<p>再看详细内容，我们大概可以捋清如下关系：</p>
<ul>
<li>过程密钥的生成<ul>
<li>输入数据包括“伪随机数+电子钱包联机交易序列号+8000”</li>
<li>子密钥指的是圈存或消费密钥</li>
<li>秘钥8字节长密钥</li>
<li>秘钥生成过程由3次完成<ul>
<li>子秘钥左半部分<strong>加密</strong></li>
<li>子秘钥有半部分<strong>解密</strong></li>
<li>子秘钥左半部分<strong>加密</strong></li>
</ul>
</li>
</ul>
</li>
<li>MAC_TAC的生成<ul>
<li>数组初始化为0</li>
<li>数据<strong>末尾填充0x80</strong></li>
<li>数组<strong>补0x00直到数组长度为8的倍数</strong></li>
<li>数组分割成数据块</li>
<li>按照PPT<strong>《03 电子钱包的安全管理》P13</strong>的过程，生成MAC或者TAC</li>
</ul>
</li>
</ul>
<p>在有了大概思路以后，我们开始阅读源代码。经过简单寻找，我们发现本次实验涉及的代码大多集中在PenCipher.java中。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/PenCipher----.png" alt="PenCipher构造函数"></p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/des----.png" alt="des运算函数"></p>
<p>基本的构造函数和对称加密des的运算函数，这部分函数在ppt上都有解释，推荐把ppt代码复制上来方便阅读和理解。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/-----1.png" alt="需要填充"></p>
<p>这几个函数就是我们本此实验需要填写的函数了。第一个gen_SESPK是过程秘钥生成函数，后面3个都是MAC或者TAC生成中需要使用的函数。</p>
<h2 id="开始打码"><a href="#开始打码" class="headerlink" title="开始打码"></a>开始打码</h2><p>前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始打码的过程了。</p>
<h3 id="过程秘钥的产生"><a href="#过程秘钥的产生" class="headerlink" title="过程秘钥的产生"></a>过程秘钥的产生</h3><p>我们在PPT《03 电子钱包的安全管理》中已经知道了过程秘钥分为3步，分别是<strong>子秘钥左半部分加密</strong>，<strong>子秘钥右半部分解密</strong>，<strong>子秘钥左半部分解密</strong>。在仔细查看<code>gen_SESPK</code>函数传入参数的各种意义，以及<code>cdes</code>函数的参数意义以后，我们就可以调用cdes实现3步产生秘钥了。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/gen_SESPK.png" alt="gen_SESPK"></p>
<h3 id="MAC或者TAC的产生"><a href="#MAC或者TAC的产生" class="headerlink" title="MAC或者TAC的产生"></a>MAC或者TAC的产生</h3><p>接下来是异或操作函数，根据TA的提示，一个简单for循环搞定。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/xorblock8.png" alt="xorblock8"></p>
<p>根据提示，<code>pbocpadding</code>也可以很简单的实现。这个地方本来想写一个new新开空间的，因为数组<strong>在填充的时候可能会爆空间</strong>。但是在完成代码以后，发现结果总是不正确，最终发现有可能是因为在函数栈中声明的空间，在return之后，栈里的空间也被回收掉了，导致data实际上没有完成新开空间的操作。所以无奈注释掉，然后之后在debug的时候，故意给data开辟很大的空间以免爆空间。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/pbocpadding.png" alt="pbocpadding"></p>
<p>填充完成以后，就可以按照<strong>PPT《03 电子钱包的安全管理》P13</strong>的过程，生成MAC或者TAC了。这个部分要注意的是<strong>最后写回mac的时候，只用取前4位就行，因为mac的响应报文中，只有4个byte，而加密完生成的数组有8bytes，不控制长度就会爆掉</strong>。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/gmac4.png" alt="gmac4"></p>
<p>到这里，整个实验二就结束了。在填写完代码之后整个思绪都变得异常清晰，严格按照PPT中的流程，我们就能够填写完本次实验的代码，整体并不难。通过实验其实可以发现，网上流传的实验课完整代码的撰写者代码能力一般，不少地方有冗余。（事后诸葛亮2333）</p>
<h1 id="验证实验"><a href="#验证实验" class="headerlink" title="验证实验"></a>验证实验</h1><p>本次实验需要使用Dex.exe进行验算结果。</p>
<p>因为实验中不能直接使用printf进行debug，所以我们只能手动利用<code>ISOException.throwIt</code>进行debug，或者利用rfid卡的写会操作，将结果直接作为写回，在控制台上打印出来。</p>
<p>因此，我们就需要修改<code>Purse</code>的<code>process</code>了。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/Purse--debug.png" alt="Purse新增debug"></p>
<p>使用某一个ins，控制将mac生成，并且写回。<strong>需要注意的是，我们不能一开始就直接写回加密生成的mac值，如果直接执行就会写回0x6D00</strong>（INS value not supported）。</p>
<p>这个地方坑了我很久。所以我们需要在process中使用条件控制，让我们能够<strong>先执行上次实验中，创建purse等操作，才能进行本次实验的加密生成mac地址并且写回操作</strong>。</p>
<p>因此我们首先执行purse_script（我的实验一的脚本文件），文件生成完成以后，我执行<code>/send 80620000073fffffffffffff</code>随便进行测试一下。算法生成的结果如下图所示，为0x795DB66C。<strong>注，其中9000是正确执行返回的结果。</strong></p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/--.png" alt="结果"></p>
<p>秘钥为自定的<code>0x1212121212121212</code>，data为自定的<code>0x2222222222222222</code>（测试data只有8个0x22,之所以在代码中有16个22，是因为后面8个0x22纯粹用来凑数，以开辟一个足够大的数组以免爆炸。）初始向量在gmac4中已经定义为<code>0x1111111111111111</code>。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/dex----.png" alt="Dex运算结果"></p>
<p>将这些参数在Dex.exe中计算（<strong>数据需要手动添加80和其他00</strong>），计算结果为<code>0x795DB66C0F3467BB</code>。我们知道在取mac地址的时候，我们为了防爆（溢出），将结果的前4个byte取出放进<code>mac</code>，所以前四位为<code>0x795DB66C</code>，和我们的代码一致。</p>
<p>故而我们认为，本次实验成功。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>RFID</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>RFID实验三总结</title>
    <url>/2017/05/23/RFID%E5%AE%9E%E9%AA%8C%E4%B8%89%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<blockquote>
<p>一次debug到哭泣的经历。</p>
</blockquote>
<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：</p>
<p>个人blog地址：<a href="http://123.207.243.115:81/rfidshi-yan-san-zong-jie/" target="_blank" rel="noopener">http://123.207.243.115:81/rfidshi-yan-san-zong-jie/</a></p>
<p>在实验过程中，需要不断翻阅实验课PPT之<strong>《04 电子钱包的功能》</strong>，word之<strong>《实验3文档》</strong>，以及不知名大佬的<a href="http://www.tqcto.com/article/software/83894.html" target="_blank" rel="noopener">课程总代码</a>，CSDN大佬吕浪的<a href="http://blog.csdn.net/lv_victor/article/details/51028930" target="_blank" rel="noopener">Java card开发系列文章</a>。</p>
<p>本次实验和前两次实验相比，代码量多<strong>很多</strong>，并且<strong>实验思路稍有区别</strong>。实验之前可以不太懂实验流程（主要是因为流程本身就太复杂了），但是一定要<strong>一遍又一遍阅读源代码</strong>，只有在读源码的过程中，才能体会整个验证过程，对项目中涉及到的函数方法的使用才能有一个更加深入的了解。接着自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。</p>
<p>最终的代码地址：<a href="https://github.com/LongyunYao/RFID_lab/" target="_blank" rel="noopener">https://github.com/LongyunYao/RFID_lab/</a></p>
<p><strong>代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。</strong></p>
<h1 id="正式实验"><a href="#正式实验" class="headerlink" title="正式实验"></a>正式实验</h1><h2 id="实验分析"><a href="#实验分析" class="headerlink" title="实验分析"></a>实验分析</h2><p>首先我们在PPT中知道本次实验的主要需要实现的功能是：</p>
<ul>
<li>圈存</li>
<li>消费</li>
<li>余额查询</li>
</ul>
<p>接下来我们开始看ppt《04 电子钱包的功能》和《实验3文档》。</p>
<p>首先是圈存功能的流程图。</p>
<p><img src="http://img.blog.csdn.net/20170423014034933?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="圈存流程"></p>
<p>流程图中我们可以分析出圈存一共有4个步骤：</p>
<ul>
<li><strong>终端发送消息初始化</strong></li>
<li><strong>IC响应初始化，并且发送MAC1验证</strong></li>
<li><strong>终端验证MAC1，确认IC卡是否合法，然后发送包含MAC2的圈存命令</strong></li>
<li><strong>IC卡验证终端机的合法性，执行完成以后返回TAC响应操作完成</strong></li>
</ul>
<p>接下来我们将一步一步仔细分析圈存是如何实现的。</p>
<p><img src="http://img.blog.csdn.net/20170423013823877?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="圈存初始化命令"></p>
<p>step1：圈存机发送的初始信息如下所示。消息中包含了<strong>秘钥标识符</strong>，<strong>交易金额</strong>，<strong>终端机编号</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423014006004?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IC卡响应圈存初始化命令"></p>
<p><img src="http://img.blog.csdn.net/20170423020343856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IC卡处理圈存初始化信息流程"></p>
<p>step2：</p>
<ul>
<li><strong>IC卡根据秘钥标识符寻找圈存秘钥</strong></li>
<li><strong>生成过程秘钥。输入数据为[伪随机数||电子钱包联机交易序号||8000]，秘钥为圈存秘钥，使用3DES加密算法。</strong></li>
<li><strong>生成MAC1。输入数据为[电子钱包余额（交易前）||交易金额||交易类型标识||终端机编号]，秘钥为过程秘钥，使用我们在上一次实现的MAC生成函数gmac4，计算出MAC1用来表明身份。</strong></li>
<li><strong>IC卡返回[余额||联机交易序列号||秘钥版本号||算法标识||伪随机数||MAC1]。</strong></li>
</ul>
<p><img src="http://img.blog.csdn.net/20170423014058551?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="圈存指令"></p>
<p><img src="http://img.blog.csdn.net/20170423025731193?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="圈存指令流程"></p>
<p>step3：</p>
<ul>
<li><strong>圈存机对IC卡发挥的MAC1信息进行校验，如果正确就说明IC卡信息合法。</strong></li>
<li><strong>计算MAC2。输入信息为[交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，秘钥为过程秘钥，加密算法为依然为gmac4。用来表明自己的身份。</strong></li>
<li><strong>发送圈存指令。消息中包含[交易日期||交易时间||MAC2]。</strong></li>
</ul>
<p><img src="http://img.blog.csdn.net/20170423030729769?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="圈存TAC"></p>
<p><img src="http://img.blog.csdn.net/20170423124717634?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="TAC"></p>
<p>step4：<strong>IC使用同样的算法计算MAC2，如果计算结果和终端返回的MAC2一致，就说明终端的身份合法。IC卡就会执行圈存命令。同时返回TAC。其中TAC计算时，输入数据为[电子钱包余额（交易后）||电子钱包联机交易序号（加１前）||交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，密钥为TAC密码最左8个字节与TAC密码最右8个字节异或的结果。</strong></p>
<p>到这里整个圈存过程就结束了。消费以及查询和圈存的实现原理一致，这里就不赘述了。</p>
<h2 id="读代码"><a href="#读代码" class="headerlink" title="读代码"></a>读代码</h2><p>前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始<strong>读源码</strong>的过程了。不过本次实验中，因为我们只需要对IC卡的系统进行编程实现，而对终端机需要靠人脑完成，所以我们重心就会放在圈存的初始化和圈存的执行上面了。</p>
<h3 id="圈存初始化"><a href="#圈存初始化" class="headerlink" title="圈存初始化"></a>圈存初始化</h3><p>还是老样子，我们<strong>先读项目给的源码中的<code>Purse</code>部分</strong>，里面有圈存初始化和圈存确认信息的处理函数。</p>
<p>在TA给的源代码中，<code>init_load</code>和<code>load</code>方法是已经给好了的，我们先读这两部分的源代码，理解整个设计思路。</p>
<p>首先我们需要<strong>修改Purse类</strong>，让其<code>process</code>方法里面增执行<strong>圈存初始化，圈存，消费初始化，消费，以及查询的入口</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423105626634?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="handleEvent"></p>
<p>因为圈存和消费的init方法的ins都一样，所以我们还需要<strong>增加一个判断方法，利用两者p1参数不一样，来判断是<code>init_load</code>还是<code>init _purchase</code>。</strong></p>
<p><img src="http://img.blog.csdn.net/20170423105924050?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="init_load_purchase"></p>
<p>好了，入口写好了。我们开始看<code>init_load</code>的实现方法。</p>
<p><img src="http://img.blog.csdn.net/20170423110115765?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="init_load"></p>
<p>前面还是和读写数据时一样的操作，进行参数校对，这个部分已经很简单了。我们看到有一个<code>findkey</code>方法。点进去查看函数的具体内容。</p>
<p><img src="http://img.blog.csdn.net/20170423110323737?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="find_key"></p>
<p>查找方法比较简单，从Key数组中获取秘钥，存进pbuf中，如果存在就返回秘钥标识符，否则返回0。</p>
<p>回到<code>init_load</code>，在执行<code>fendkey</code>之后，是异常处理，验证是否查找失败。然后执行<code>init4load</code>方法。继续点进去查看。（<strong>前方高能预警</strong>）</p>
<p><img src="http://img.blog.csdn.net/20170423110857476?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="init4load"></p>
<p>回忆一下初始化的过程中，IC的操作部分是怎么操作的。</p>
<ul>
<li><strong>IC卡根据秘钥标识符寻找圈存秘钥</strong></li>
<li><strong>生成过程秘钥。输入数据为[伪随机数||电子钱包联机交易序号||8000]，秘钥为圈存秘钥，使用3DES加密算法。</strong></li>
<li><strong>生成MAC1。输入数据为[电子钱包余额（交易前）||交易金额||交易类型标识||终端机编号]，秘钥为过程秘钥，使用我们在上一次实现的MAC生成函数gmac4，计算出MAC1用来表明身份。</strong></li>
<li><strong>IC卡返回[余额||联机交易序列号||秘钥版本号||算法标识||伪随机数||MAC1]。</strong></li>
</ul>
<p>按照这个思路看源代码。（看代码的时候<strong>一定要对着ppt的流程读</strong>，我第一次读源代码就是单纯对着IDE读，结果读的很爽，但是读完了只知道每个基本操作在干嘛，但是整个操作流程还是一脸懵逼。）</p>
<p>开始看代码。</p>
<p>首先从<code>data</code>中提取交易金额，终端编号，存进<code>pTemp42</code>和<code>pTemp81</code>。</p>
<p>然后判断是否超额。我们继续点进去看一下<code>increase</code>的源代码。</p>
<p><img src="http://img.blog.csdn.net/20170423112034624?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="increase"></p>
<p>从<code>EP_ balance</code>中和<code>data</code>中依次取出一个字节，将其相加再和一个<code>ads</code>(进位标志符)相加，如果<code>flag</code>为真，就改写<code>EP _balance</code>中的值，然后更新<code>ads</code>。最终返回进位标志位<code>ads</code>。整个就是大数加法的思想方法。但是<code>EP _balance</code>是啥？？？我们再点进去看源代码。</p>
<p><img src="http://img.blog.csdn.net/20170423112922909?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="EPFile参数"></p>
<p>是当前电子钱包的余额。因此<strong>整个<code>increase</code>就是判断当前余额加上一个圈存值，如果超额（结果超过4bytes），就会返回1（那个进位标志位<code>ads</code>）。否则返回0。如果传入的第二个参数为false，就不会更新余额，否则会执行余额更新操</strong>作。</p>
<p>好，到这里我们知道了<code>rc = increase(pTemp42, false);</code>部分的意义了。再往下看密码取位部分。</p>
<p>首先使用<code>readkey</code>方法。点进去查看。</p>
<p><img src="http://img.blog.csdn.net/20170423113526567?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="readkey"></p>
<p>这里需要对<code>Key</code>的结构有一定的了解了。我们点进去查看<code>Key</code>这个类定义和实现。</p>
<p><img src="http://img.blog.csdn.net/20170423113915210?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Key"></p>
<p><strong>所以<code>Key</code>中存放的结构</strong>为<strong>2bytes信息位</strong>（分别为1byte的<code>pbuf</code>，1byte的<code>length</code>），<strong>5bytes的秘钥头</strong>，<strong>以及16bytes的秘钥值</strong>。其中<strong>length是addKey传入value的长度，为表头+秘钥的长度。</strong></p>
<p>回到<code>readkey</code>，<code>readkey</code>就是将秘钥取出来，然后将秘钥表头中的<code>value</code>值取出来（5bytes表头+16bytes秘钥），<strong>返回长度为秘钥的实际长度（减掉了表头长度）</strong>。</p>
<p>回到init4load，所以这4行代码的意义就是</p>
<ul>
<li><strong>按照秘钥获取部分就是按照秘钥标识符获取bytes秘钥头+16bytes秘钥存进pTemp32</strong></li>
<li><strong>从秘钥头第4个bytes获取秘钥版本号，从第5个bytes获取算法标识符</strong></li>
<li><strong>从获取pTemp32中将秘钥的实际值（从第5位开始读取秘钥长度个bytes），取出来存进pTemp16。</strong></li>
</ul>
<p>再往下读随机数产生的代码。</p>
<p><img src="http://img.blog.csdn.net/20170423115943237?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="GenerateSecureRnd"></p>
<p>调用<code>rd.generateData</code>方法，对传入的参数进行操作。我们在查看generateData的实现方法的时候，已经进入.class文件，没有发现有意义的信息。于是折返查看<strong>v和size的信息</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423120253285?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="v的意义"></p>
<p>根据注释，我们可以大概知道<code>GenerateSecureRnd</code>的意义就是<strong>根据特定的随机数产生机制产生随机数，然后写进v</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423120545489?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="getRndValue"></p>
<p><code>getRndValue</code>方法就是<strong>将随机数v写入参数bf中，偏移位为bOff</strong>。</p>
<p>回到<code>init4load</code>，产生随机数这两行的意义就是<strong>产生随机数</strong>，然后将随机数写进<code>pTemp32</code>的[0:3]位。</p>
<p>接下来，将<code>EP_online</code>(电子钱包脱机交易序号，之前分析图片中出现过)写入<code>pTemp32[4:5]</code>，将<code>0x8000</code>写入<code>pTemp32[6:7]</code>，调用上一次实验中实现的<code>3des</code>加密算法，秘钥为上面得到的圈存秘钥（存在<code>pTemp16</code>中）<strong>产生过程秘钥</strong>，写入<code>pTemp82</code>。</p>
<p>回看前面分析的圈存初始化的第一步和第二步，<strong>①IC卡根据秘钥标识符寻找圈存秘钥；②生成过程秘钥。输入数据为[伪随机数||电子钱包联机交易序号||8000]，秘钥为圈存秘钥，使用3DES加密算法。</strong>是不是一模一样？</p>
<p>好，我们再往下看。</p>
<p>产生<code>MAC1</code>。首先分别往<code>pTemp32</code>中写入<code>EP_balance</code>（余额），<code>data[1:4]</code>（交易金融，对着那一页PPT找<code>data</code>结构就知道了），0x02，<code>data[5:10]（</code>终端机编号，一样看ppt中的<code>data</code>结构），然后将<code>pTemp32</code>中的内容复制到<code>data</code>（不知道这里写入data有什么意义，因为在响应数据部分又会被写一次。）。然后<strong>使用上次实验实现的<code>gmac4</code>，输入数据为<code>pTemp32</code>，秘钥为上一步得到的存在<code>pTemp82</code>的过程秘钥，得到的<code>mac1</code>存在<code>pTemp41</code>中</strong>。</p>
<p>同样回看前面分析的圈存初始化的第三步。<strong>生成MAC1。输入数据为[电子钱包余额（交易前）||交易金额||交易类型标识||终端机编号]，秘钥为过程秘钥，使用我们在上一次实现的MAC生成函数gmac4，计算出MAC1用来表明身份</strong>。是不是对上了？</p>
<p>然后将<strong><code>EP_balance</code>（余额），<code>EP _online</code>(电子钱包脱机交易序号），<code>keyID</code>（秘钥版本号），<code>algID</code>（算法标识符），随机数，以及mac1写进data</strong>。</p>
<p>回看圈存初始化的第四步，<strong>IC卡返回[余额||联机交易序列号||秘钥版本号||算法标识||伪随机数||MAC1]</strong>。一模一样。</p>
<p>到这里<code>init4load</code>也结束了，往上回到<code>init_load</code>，<code>papdu.pdata</code>已经在<code>init4load</code>中设置完成，在<code>papdu.le</code>（理想的下一次指令中的数据长度）写为<code>0x10</code>。然后<code>purse.init _load</code>结束。</p>
<p>光分析这一步我写了一个半钟，当时在读源代码的时候花的时间更久。<strong>但是这个步骤不能跳过，它让我们对整个IC卡的业务逻辑和方法实现以及调用打下了基础。我们在实现其他方法的时候，才能更加得心应手。</strong></p>
<p>再看<code>purse.load</code>方法吧。这一步实现了<strong>圈存</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423123727349?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="purse.load"></p>
<p>前面的就不详说了，它调用了<code>EPfile.load</code>方法，我们点进去查看。</p>
<p><img src="http://img.blog.csdn.net/20170423123641864?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="load实现"></p>
<p>回想在一开始分析的时候，<strong>step4中，IC卡对接收到的终端机指令是怎么处理的</strong>。</p>
<p><strong>step4：IC使用同样的算法计算MAC2，如果计算结果和终端返回的MAC2一致，就说明终端的身份合法。IC卡就会执行圈存命令。同时返回TAC。</strong></p>
<p><strong>查看MAC2的产生方法：输入信息为[交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，秘钥为过程秘钥，加密算法为为gmac4。</strong></p>
<p><strong>查看TAC的产生方法：输入数据为[电子钱包余额（交易后）||电子钱包联机交易序号（加１前）||交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，密钥为TAC密码最左8个字节与TAC密码最右8个字节异或的结果。</strong></p>
<p>通过源代码和步骤分析我们可以得出，<code>EPFile.load</code>整个过程就是将step4实现的过程，不过需要注意的是，<strong><code>EPFile.load</code>中不少参数使用的是<code>EPFile.init4load</code>中存下来放在<code>pTemp</code>中的值，这也就从逻辑上说明为什么我们在执行消费命令前必须执行消费初始化命令，保证了安全性</strong>。返回<code>purse.load</code>，校验异常，设置<code>papdu.le</code>，<code>purse.load</code>也就结束了。</p>
<p><strong>整个阅读过程需要不断跳转代码，也需要不断在代码和PPT《04 电子钱包的功能》和word《实验3文档》。同时因为pTemp实在太多，我们最好能够在一旁做笔记，记录下来每一个pTemp存放了哪些值，以及它们的作用，这样我们才能在实现消费和查询的时候，使用起来更加方便。</strong></p>
<p>附上我记录的在init4load和load中各种变量的变化情况以及pTemp们的存在意义。</p>
<p><img src="http://img.blog.csdn.net/20170423130443504?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="load中pTemp的意义"></p>
<p><strong>大部分pTemp其实是有固定意义的</strong>（结合PPT中传入的各种数据长度，我们就不难理解为什么了）。<strong>pTemp32一般作为中间变量，用来进行3des加密或者gmac加密。</strong></p>
<p>谨记这一点，结合我们在上一步中总结下来的经验。我们就可以着手实现init_purchase和purchase以及get _balance了。</p>
<p>查看消费的流程图。</p>
<p><img src="http://img.blog.csdn.net/20170423014144435?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="消费流程"></p>
<p>我们可以总结出消费的如下流程</p>
<ul>
<li><strong>终端发送消息初始化</strong></li>
<li><strong>IC响应初始化，发回随机数</strong></li>
<li><strong>终端产生MAC1，证明自己的身份，将交易信息发给IC卡</strong></li>
<li><strong>IC卡验证终端机的合法性，计算MAC2和TAC，返回给终端作为身份凭证和消费凭证</strong></li>
</ul>
<p>然后一步一步详细分析。</p>
<p><img src="http://img.blog.csdn.net/20170423014121833?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="消费初始化命令"></p>
<p>step1：圈存机发送的初始信息如下所示。消息中包含了<strong>密钥标识符</strong>，<strong>交易金额</strong>，<strong>终端机编号</strong>。（整个消息串中，除了p1、le对比圈存初始化指令有区别以外，并没有其他区别）。</p>
<p><img src="http://img.blog.csdn.net/20170423013855815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IC卡处理消费初始化信息"></p>
<p><img src="http://img.blog.csdn.net/20170423141716336?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IC卡处理消费初始化指令流程"></p>
<p>step2：</p>
<ul>
<li><strong>IC卡根据秘钥标识符寻找圈存秘钥</strong></li>
<li><strong>生成随机数</strong></li>
<li><strong>检查余额是否足够支付本次交易</strong></li>
<li><strong>返回[余额||脱机交易序号||透支限额||秘钥版本号||算法标识||伪随机数]</strong></li>
</ul>
<p><img src="http://img.blog.csdn.net/20170423014207170?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="消费指令"></p>
<p>step3: <strong>终端将命令响应数据传送给主机，主机利用消费主密钥产生消费子密钥，并生成MAC1。然后终端向IC发送[交易序列号||交易日期||交易时间||MAC1]。（和圈存中发送的信息中多了一个交易序列号）。</strong></p>
<p><img src="http://img.blog.csdn.net/20170423144717148?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IC卡处理消费"></p>
<p><img src="http://img.blog.csdn.net/20170423144743555?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="IC卡处理消费流程"></p>
<p>step4：</p>
<ul>
<li><strong>IC卡根据消费秘钥生成过程秘钥</strong></li>
<li><strong>利用过程秘钥生成MAC1</strong></li>
<li><strong>交易序列号+1，将消费金额从卡中扣除。</strong></li>
<li><strong>IC卡生成MAC2（证明自己身份），和TAC（证明工作完成）。</strong></li>
<li><strong>返回TAC和MAC2给终端</strong></li>
</ul>
<p><strong>首先我们填<code>purse</code>中的<code>init_purchase</code>函数。</strong>（这一步可以先从<code>init _load</code>中复制下来，然后稍微修改一下<code>p1</code>和<code>le</code>的值，以及调用的函数改成<code>init4purchase</code>，原因我刚刚在<code>step1</code>中说过了）。</p>
<p><img src="http://img.blog.csdn.net/20170423145736310?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="init_purchase"></p>
<p><strong>接着我们需要实现<code>EPFile.init4purchase</code></strong>。同样的，我们只需要按照step2步骤，从<code>init4load</code>中，按需复制代码就行。</p>
<p><img src="http://img.blog.csdn.net/20170423150940801?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="EPFile_init4purchase"></p>
<p><strong>同时我们需要对照并且记录下来，每一个pTemp使用是否正确，还要记录init4purchase中每一步执行完成以后pTemp中数据对应的值。</strong></p>
<p><img src="http://img.blog.csdn.net/20170423151241922?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="EPFile_init4purchase_参数"></p>
<p><strong>然后我们再实现<code>EPFile.purchase</code>方法。</strong>实现过程比较复杂，但是每执行一步，就更新所有参数的状态，<strong>按照我们之前整理出来的<code>pTemp</code>用法，使用复制粘贴大法，从<code>EPFile.init4load</code>和<code>EPFile.load</code>中可以提取大量的重复代码下来。</strong></p>
<p>需要注意的是，<code>load</code>中是余额加上交易金额，<code>purchase</code>中就应该是减去交易金额。因此<strong>我们必须手动实现<code>decrease</code>方法。</strong></p>
<p><img src="http://img.blog.csdn.net/20170423152007887?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="decrease"></p>
<p>实现方法和<code>increase</code>类似，从后向前，一次取1byte，进行减法，同时更新借位，最后返回借位即可。</p>
<p>这里有一个小插曲，在计算MAC2的时候，一般不会出什么问题，但是在计算TAC的时候，就会出问题，这个坑在我最后debug的时候才发现（为了找这个bug整整debug了一个多钟= =）。于是我重新改变策略，使用在MAC2生成并且存进data中以后，将pTemp32新开一个数组（JCSystem.makeTransientByteArray），然后重新作为中间变量进行操作，但是不知道为什么，这样操作的结果还是错误的。于是就按照网上流传的代码，在计算TAC的时候，新申明了一个temp数组用来作为临时变量。</p>
<p>最终实现的代码如图。</p>
<p><img src="http://img.blog.csdn.net/20170423152859418?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="EPFile_purchase_part1"><br><img src="http://img.blog.csdn.net/20170423152925637?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="EPFile_purchase_part2"></p>
<p>参数变化的记录如图。</p>
<p><img src="http://img.blog.csdn.net/20170423153748861?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="EPFile_purchase_参数"></p>
<p>最后一个就是<code>get_balance</code>了。</p>
<p><img src="http://img.blog.csdn.net/20170423014320552?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="余额查询指令"></p>
<p>直接从<code>EP_balance</code>里面读出来就行了，一行代码搞定。</p>
<p><img src="http://img.blog.csdn.net/20170423153423563?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="EPFile_get_balance"></p>
<p><strong>到这里，整个实验中需要我们填写的功能函数全部填写完成了。试验过程中，了解业务逻辑是一个很重要的过程，阅读源码，了解源码中每一个函数的具体意义，以及每一个参数中，存放的信息有哪些，这些都最好都在一个txt或者什么地方器记录下来，方便自己查阅和提取（毕竟一个没有debug的IDE，你不能要求什么，只能人脑debug），另一方面，每实现一个功能，就尽可能写清楚这个部分的功能，同时写清楚那些信息在哪些位置，这样你在实现的过程中才不会头晕脑胀。也能够方便你最后debug找错误信息从哪来。</strong></p>
<h1 id="验证实验"><a href="#验证实验" class="headerlink" title="验证实验"></a>验证实验</h1><p>验证之前，我们还需要添加新的参数信息。</p>
<p><img src="http://img.blog.csdn.net/20170423154411458?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="condef新添加"></p>
<p><strong>以及一个的天坑的地方</strong>。。。。。。。这个地方我用throw 0x1234大法，从init_purchase的return 0之前，一直回退到Purse中的if(papdu.APDUContainData())才找到问题。</p>
<p><img src="http://img.blog.csdn.net/20170423154457374?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Papdu新增"></p>
<p>其他的地方应该没什么需要添加或者修改了，按照之前上一次的试验方法，我们可以开始进行debug了。</p>
<p>首先还是新建一个txt，因为我们需要人脑担任终端机的角色，所以<strong>提前将必要的操作流程和模板写下来存在txt里面</strong>，写指令的时候也能迅速一点。</p>
<p><img src="http://img.blog.csdn.net/20170423155806313?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="实验3脚本"></p>
<p>首先实验一中的初始化脚本。</p>
<p>然后模仿终端机输入圈存初始化指令。<code>/send 805000020B080000100000112233445510</code></p>
<p>使用<strong>[伪随机数||电子钱包联机交易序号||8000]</strong>作为数据，<strong>圈存秘钥</strong>作为秘钥，使用<strong>3DES</strong>获得<strong>过程秘钥</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423160609340?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="init4load过程秘钥"></p>
<p>然后<strong>使用过程秘药作为秘钥</strong>，输入自定义好的初始向量，以及数据<strong>[电子钱包余额（交易前）||交易金额||交易类型标识(0x02)||终端机编号]</strong>作为输入，生成<strong>mac1</strong>，和<strong>IC卡返回的mac1校对，发现一致</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423161353741?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="验证mac1"></p>
<p>接着使用<strong>[电子钱包余额（交易前）||交易金额||交易类型标识(0x02)||终端机编号]</strong>作为数据，<strong>过程秘钥</strong>作为秘钥，生成mac2。夹杂其他信息一起发出去。</p>
<p><img src="http://img.blog.csdn.net/20170423162142821?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="init_load发送mac2"></p>
<p>返回<code>TAC+9000</code>，所以我们认为<code>init_load</code>和<code>load</code>成功。</p>
<p>接下来执行查询指令，返回<code>00 00 10 00 90 00</code>。说明卡里面已经有了<code>00001000</code>，我们圈存确实成功了。查询也成功了。</p>
<p><img src="http://img.blog.csdn.net/20170423162321041?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="查询结果"></p>
<p>接下来执行消费指令，<code>/send 805001020B07000010000011223344550F</code></p>
<p><img src="http://img.blog.csdn.net/20170423162639620?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="消费初始化"></p>
<p>返回得到伪随机数。接着我们将<strong>[伪随机数||电子钱包脱机交易序号||终端交易序号的最右两个字节]</strong>作为数据，<strong>消费秘钥</strong>作为秘钥，使用<strong>3DES</strong>得到<strong>圈存秘钥</strong>。</p>
<p>使用<strong>[交易金额||交易类型标识(0x06)||终端机编号||交易日期（主机）||交易时间（主机）]</strong>作为数据，<strong>过程秘钥</strong>最为秘钥生成<strong>mac1</strong>。</p>
<p><img src="http://img.blog.csdn.net/20170423163133686?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="消费发送mac1"></p>
<p>返回<code>MAC2+TAC+9000</code>。故而我们认为本次<code>init_purchase</code>和<code>purchase</code>成功。</p>
<p>为了防止意外，我们再次执行查询余额的指令。</p>
<p><img src="http://img.blog.csdn.net/20170423163641985?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="再次查询余额"></p>
<p>结果显示余额为<code>00000000</code>，返回<code>9000</code>。故而我们认为，查询消费圈存三大功能都已经能够正确执行了。</p>
<p><img src="http://img.blog.csdn.net/20170423165827715?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="多次圈存两次冲入00001000+消费测试一次消费00000001"></p>
<p>最后测试一下<strong>多次存取操作</strong>。没什么问题，故而我们认为，本次实验成功。</p>
<p>2017/4/25更新</p>
<p>线下已校验多次存取（复杂数据），以及TAC码（我喜欢称其工单码）检验。经检验，不存在明显问题。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>RFID</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Python网络爬虫学习</title>
    <url>/2017/04/19/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处</strong></p>
<p><em>初步了解网络爬虫的工具使用和代码编写</em></p>
<p>学习地址见<a href="http://study.163.com/course/courseMain.htm?courseId=1003285002" target="_blank" rel="noopener"><code>网易云课堂《Python网络实战》</code></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>工具</strong></p>
<p>1.Python编辑工具</p>
<p>实验中使用到的Python工具为<a href="https://www.continuum.io/downloads/" target="_blank" rel="noopener"><code>Anaconda</code></a>，工具的安装参照<a href="http://python.jobbole.com/86236/" target="_blank" rel="noopener"><code>Anaconda使用总结</code></a>（Linux下）以及<a href="http://blog.csdn.net/u012675539/article/details/46974217" target="_blank" rel="noopener"><code>Python科学计算的瑞士军刀——Anaconda 安装与配置</code></a>（windows下）相关教程。</p>
<p>在视频教学过程中，讲师也会有一点安装指导。</p>
<p>初学过程中推荐使用<code>Jupyter notebook</code>工具在浏览器中编辑，这样可以每次只执行几行函数，而不用一次从头到尾执行完毕。调试完成以后，可以在<code>Spyder</code>中一次运行。</p>
<p><code>Jupyter notebook</code>工具中，ctrl+enter表示执行当前cell的代码，alt+enter表示新建一个cell，其他的在本次实验中用不到。</p>
<p>2.辅助工具</p>
<p>使用<code>Chrome</code>辅助元素选择。需要对Chrome的<code>开发者模式</code>有较多的使用经验。</p>
<p>不过在视频中，讲师会反复示范怎么使用Chrome的开发者模式，所以使用起来不必太担心。</p>
<p><strong>知识储备</strong></p>
<p>1.语法</p>
<p>基本的Python语法知识可以参照<a href="http://www.runoob.com/python/python-basic-syntax.html" target="_blank" rel="noopener">Python 基础语法</a>（<strong>推荐</strong>）和<a href="http://www.cnblogs.com/toutou/p/4774284.html" target="_blank" rel="noopener">Python基本语法，python入门到精通[二]</a>（页面很low）</p>
<p><strong>注：<a href="http://www.runoob.com/python" target="_blank" rel="noopener">runoob.com</a>是一个好网站</strong></p>
<p>在语法和知识结构上，Python的概念和C++/Java这类面向对象型语言很相似，比如类似的对象概念.</p>
<p>比如类似于数组的列表(List)，类似于map的字典(dictdict)。其他部分自行体会.</p>
<p>因为本次教学课程中，实验较为简单，所以我其实也只是对Python有一个基本的了解。</p>
<p>2.工具使用</p>
<p>BeautifulSoap的使用教程参见<a href="http://cuiqingcai.com/1319.html" target="_blank" rel="noopener"><code>Python爬虫利器二之Beautiful Soup的用法</code></a></p>
<p>在本次实验中，网络爬虫需要对爬取的网页进行解析，故而不可避免的需要使用到html的相关知识。不过难度不大，一边实验一边回忆都已经足够了。</p>
<p>在实验中使用了BeautifulSoup工具能够很方便的将抓取的网页解析成一个文档树。然后我们就可以对这个文档树进行select，选择出特定的标签，进而分析出我们想要的信息。</p>
<p>举个例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="comment"># 导入工具包</span></span><br><span class="line">artibody_url = <span class="string">'http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml'</span></span><br><span class="line">artibody_res = requests.get(artibody_url) <span class="comment"># 模仿浏览器，使用get方法获取url指向的网页资源</span></span><br><span class="line">artibody_res.encoding = <span class="string">'utf-8'</span> <span class="comment"># 设置编码，否则抓取的文档会出现乱码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="comment"># 从bs4中导入BeautifulSoap包</span></span><br><span class="line">artibody_soup = BeautifulSoup(artibody_res.text, <span class="string">'html.parser'</span>) <span class="comment"># 将抓取的网页扔进BeautifulSoap生成一个文档树</span></span><br><span class="line">artibody_div = artibody_soup.select(<span class="string">'#artibody p'</span>)[<span class="number">1</span>:<span class="number">-2</span>] <span class="comment"># 使用select方法获取想要的内容</span></span><br><span class="line"><span class="comment"># select中内容的使用和css的选择器类似，id使用'#xxx'， 类使用'.xxx'，普通标签使用'p'，另外还可以有子代选择器'body div #artibody p'</span></span><br></pre></td></tr></table></figure>

<p>3.<strong>本篇博客系个人学习所总结的知识，如果有什么概念或者其他错误，欢迎喷。但是不小心对你们造成误导，那就概不负责了2333</strong></p>
<p>##正题</p>
<h3 id="课程知识总结"><a href="#课程知识总结" class="headerlink" title="课程知识总结"></a>课程知识总结</h3><p>将这个部分写在最前面，是为了在课程开始之前就对整个课程的目的，以及coding过程中，每一步的目的有所了解。避免盲目跟着打代码，而不知道整个项目目的。</p>
<p>本课程实现了从网易新闻网页中抓取新闻信息，封装成结构化数据的过程。</p>
<p>课程一共18讲，每一讲2-10分钟不等，一般为5分钟。</p>
<ul>
<li>第1-3讲，为课程入门，大致介绍课程目的，对Python编写网络爬虫进行初步介绍。</li>
<li>第4讲，实现模拟浏览器，使用get方法获取网页信息的方法。</li>
<li>第5-6讲，介绍BeautifulSoap，介绍基本使用方法</li>
<li>第7-16讲，利用BeautifulSoap构造的文档树剖析整个网页，并且通过网页一步一步获取”title”(标题), “newssource”(原标题), “date”(发稿时间), “article”(新闻主题), “article”(编辑), “comments”(评论数)。</li>
<li>第17讲，函数封装指导</li>
<li>第18讲，将前17章中所实现的功能封装成一个函数，最终实现输入一个网页，返回一个封装好的结构化数据。</li>
</ul>
<h3 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h3><p><strong>1.requests获取网页信息</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入requests包</span></span><br><span class="line"><span class="keyword">import</span> requests </span><br><span class="line">artibody_url = <span class="string">'http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml'</span></span><br><span class="line"><span class="comment"># 模仿浏览器发送一个get请求，获取链接指向的网页，将获取的数据存进artibody_res</span></span><br><span class="line">artibody_res = requests.get(artibody_url)</span><br><span class="line"><span class="comment"># 设置编码，以免乱码</span></span><br><span class="line">artibody_res.encoding = <span class="string">'utf-8'</span></span><br><span class="line"><span class="comment"># 打印text</span></span><br><span class="line">print(artibody_res.text)</span><br></pre></td></tr></table></figure>

<p><strong>2.利用BeautifulSoap将网页装进文档树</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从bs4中导入BeautifulSoup数据</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment"># 选择解析器为Python标准库(html.parser)，如果不设置就会有warnning</span></span><br><span class="line">artibody_soup = BeautifulSoup(artibody_res.text, <span class="string">'html.parser'</span>)</span><br><span class="line"><span class="comment"># 调用BeautifulSoap中的select方法进行，[1:-2]表示选择从第1个元素到倒数第二个元素（Python从0开始计数）</span></span><br><span class="line">artibody_div = artibody_soup.select(<span class="string">'#artibody p'</span>)[<span class="number">1</span>:<span class="number">-2</span>]</span><br><span class="line">print(artibody_div)</span><br></pre></td></tr></table></figure>

<p><strong>3.获取文本信息</strong></p>
<p>strip函数的使用可以参考<a href="http://www.jb51.net/article/37287.htm" target="_blank" rel="noopener">python strip()函数 介绍</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建一个List，用于存放文本</span></span><br><span class="line">article = []</span><br><span class="line"><span class="comment"># for循环，记得for语句最后有一个':'（注，Python没有括号，而是以缩进代替）</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> artibody_div:</span><br><span class="line">    <span class="comment"># 调用append方法，将text一个一个加入list，调用strip()是为了去掉空白字符</span></span><br><span class="line">    article.append(p.text.strip())</span><br><span class="line">print(article)</span><br></pre></td></tr></table></figure>

<p><strong>4.文本合并</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用join方法，两article中的元素全部合并，原本List中不同的元素之间使用' '隔开，换成'\n'也可</span></span><br><span class="line"><span class="comment">#只不过Juphter Notebook会直接将'\n'显示出来而已</span></span><br><span class="line"><span class="string">' '</span>.join(article)</span><br></pre></td></tr></table></figure>

<p><strong>5.一行实现文本合并</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不用解释了吧</span></span><br><span class="line"><span class="string">' '</span>.join([p.text.strip() <span class="keyword">for</span> p <span class="keyword">in</span> artibody_soup.select(<span class="string">'#artibody p'</span>)[<span class="number">1</span>:<span class="number">-2</span>]])</span><br></pre></td></tr></table></figure>

<p><strong>6.编辑提取</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用lstrip左切除</span></span><br><span class="line">artibody_editor = artibody_soup.select(<span class="string">'.article-editor'</span>)[<span class="number">0</span>].text.lstrip(<span class="string">'责任编辑：'</span>)</span><br><span class="line">print(artibody_editor)</span><br></pre></td></tr></table></figure>

<p><strong>7.title获取</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_title = artibody_soup.select(<span class="string">'title'</span>)[<span class="number">0</span>].text</span><br><span class="line">print(artibody_title)</span><br></pre></td></tr></table></figure>

<p><strong>8.引用获取</strong></p>
<p>contents的使用请继续参照开头提到的文章<a href="http://cuiqingcai.com/1319.html" target="_blank" rel="noopener"><code>Python爬虫利器二之Beautiful Soup的用法</code></a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在较为复杂的层级结构中，调用contents获得其子节点</span></span><br><span class="line">artibody_p = artibody_div.select(<span class="string">'p'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</span><br><span class="line">print(artibody_p)</span><br></pre></td></tr></table></figure>

<p><strong>9.日期获取</strong></p>
<p>关于datetime的使用，参见<a href="http://www.cnblogs.com/snow-backup/p/5063665.html" target="_blank" rel="noopener">python 常用 time, datetime处理</a>。</p>
<p>（其实只要只要strptime和strftime的用法，在本次实验就足够了。）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_time = artibody_soup.select(<span class="string">'.time-source'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># 使用datetime进行日期获取，strptime表示将str转换成时间</span></span><br><span class="line">dt = datetime.strptime(artibody_time, <span class="string">'%Y年%m月%d日%H:%M'</span>)</span><br><span class="line"><span class="comment"># strftime表示将时间转换成文字</span></span><br><span class="line">print(dt.strftime(<span class="string">'%Y-%m-%d %H:%M'</span>))</span><br></pre></td></tr></table></figure>

<p><strong>10.来源获取</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不解释</span></span><br><span class="line">artibody_from = artibody_soup.select(<span class="string">'.time-source span a'</span>)[<span class="number">0</span>].text</span><br><span class="line">print(artibody_from)</span><br></pre></td></tr></table></figure>

<p><strong>11.评论数获取</strong></p>
<p>在课程中，最难抓的也就是这货了。因为使用的是js从后台获取数据，所以不能直接从静态网页抓取。</p>
<p>下面代码就展示了，明明使用了正确的定位，但是抓取不到数值的情况。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">artibody_commentCount = artibody_soup.select(&apos;.page-tool-i&apos;)</span><br><span class="line">print(artibody_commentCount)</span><br></pre></td></tr></table></figure>

<p>结果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&lt;span class=&quot;page-tool-i page-tool-s&quot; title=&quot;分享&quot;&gt;</span><br><span class="line">&lt;a href=&quot;javascript:;&quot; id=&quot;shareArticleButton&quot; onclick=&quot;_S_uaTrack(&apos;index_news_content&apos;, &apos;other_click&apos;);&quot;&gt;分享&lt;/a&gt;</span><br><span class="line">&lt;/span&gt;, &lt;span class=&quot;page-tool-i page-tool-c page-tool-share&quot; title=&quot;评论&quot;&gt;</span><br><span class="line">&lt;span id=&quot;commentCount1&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;a href=&quot;javascript:;&quot; suda-uatrack=&quot;key=index_news_content&amp;amp;value=comment_click&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;/span&gt;, &lt;span class=&quot;page-tool-i page-tool-s&quot; title=&quot;分享&quot;&gt;</span><br><span class="line">&lt;a href=&quot;javascript:;&quot; id=&quot;shareArticleButton2&quot; onclick=&quot;_S_uaTrack(&apos;index_news_content&apos;, &apos;other_roll_click&apos;);&quot;&gt;分享&lt;/a&gt;</span><br><span class="line">&lt;/span&gt;, &lt;span class=&quot;page-tool-i page-tool-c page-tool-share&quot; id=&quot;pageToolShare&quot; title=&quot;评论&quot;&gt;</span><br><span class="line">&lt;a href=&quot;javascript:;&quot; suda-uatrack=&quot;key=index_news_content&amp;amp;value=comment_roll_click&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;span id=&quot;commentCount1M&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;]</span><br></pre></td></tr></table></figure>

<p>只有span标签，而没有任何a标签。</p>
<p>所以我们只能从仿照js抓取数据了。不要问我那个老师是怎么知道是哪个js文件的= =，我也觉得很神奇。</p>
<p>抓取过程中可以用一点小技巧。</p>
<p>在网页加载过程中盯着评论数。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25130907/7cd4cf38-2476-11e7-82fe-2faad44f5885.PNG" alt="未加载出来"></p>
<p>在评论加载出来之后，立即停止Chrome中开发者模式下控制台的监控。这样从后向前找会轻松一点（虽然还是需要寻找很久）。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25130906/7cc85c44-2476-11e7-8132-f0b72b7a09e4.PNG" alt="加载出来"></p>
<p>寻找的过程中好好利用控制台的preview功能。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25130889/6f905068-2476-11e7-80d6-39ef6e4b2e4b.png" alt="preview功能"></p>
<p>抓取过程中，代码如下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">comment_url = <span class="string">'http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=gn&amp;newsid=comos-fyeimzx6745829&amp;group=&amp;compress=0&amp;ie=utf-8&amp;oe=utf-8&amp;page=1&amp;page_size=20'</span></span><br><span class="line">comment_res = requests.get(comment_url)</span><br><span class="line">comment_res.encoding = <span class="string">'utf-8'</span></span><br><span class="line">print(comment_res.text)</span><br></pre></td></tr></table></figure>

<p>然后你就能够抓到如下结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var data=&#123;&quot;result&quot;: &#123;&quot;status&quot;: &#123;&quot;msg&quot;: &quot;&quot;, &quot;code&quot;: 0&#125;, &quot;count&quot;: &#123;&quot;qreply&quot;: 10065, &quot;total&quot;: 10756, &quot;show&quot;: 200&#125;, &quot;replydict&quot;: ...中间省去真·1w字..., &quot;agree&quot;: &quot;251&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5121097321&quot;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>将js返回的这一段数据，使用json存放起来。</p>
<p>json的基本操作参见<a href="http://www.cnblogs.com/kaituorensheng/p/3877382.html" target="_blank" rel="noopener">python解析json</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">jd = json.loads(comment_res.text.strip(<span class="string">'var data='</span>))</span><br><span class="line"><span class="comment"># 获取jd下'result'标签中‘count'标签中’total‘内容</span></span><br><span class="line">jd[<span class="string">'result'</span>][<span class="string">'count'</span>][<span class="string">'total'</span>]</span><br></pre></td></tr></table></figure>

<p>到这里评论数的获取就结束了，有点麻烦们也有点蛋疼。</p>
<p><strong>12.获取newsid</strong></p>
<p>这一步获取newsid能够让我们在后面实现批量导入。</p>
<p>关于正则表示式的使用，参见<a href="http://www.runoob.com/python/python-reg-expressions.html" target="_blank" rel="noopener">Python正则表达式</a>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 有两种实现方法，第一种，先split，然后去头去尾提取出来就是了</span></span><br><span class="line"><span class="comment">#artibody_url.split('/')[-1].rstrip('.shtml')</span></span><br><span class="line"><span class="comment"># newsid=comos-fyeimzx6745829</span></span><br><span class="line"><span class="comment">#news_id = artibody_url.split('/')[-1].lstrip('doc-i').rstrip('.shtml')</span></span><br><span class="line"><span class="comment">#另一种是使用正则表达式</span></span><br><span class="line"><span class="comment"># group(1)表示匹配的字符串， group(0)会将整个字符串返回回来</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">news_id = re.search(<span class="string">'doc-i(.*).shtml'</span>, artibody_url).group(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><strong>13.使用newsid</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将newsis填入form_comment_url的括号内</span></span><br><span class="line">form_comment_url = <span class="string">'http://comment5.news.sina.com.cn/page/info?version=1&amp;\</span></span><br><span class="line"><span class="string">format=js&amp;channel=gn&amp;newsid=comos-&#123;&#125;&amp;group=&amp;compress=0&amp;ie=utf-8&amp;oe=utf-8&amp;page=1&amp;page_size=20'</span></span><br><span class="line">form_comment_url.format(news_id)</span><br></pre></td></tr></table></figure>

<p><strong>14.封装函数</strong></p>
<p>封装函数之后，我们就能够实现，传入一个新闻的网址，就获取这个新闻的评论数的功能了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">artibody_url = <span class="string">'http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCommentCounts</span><span class="params">(news_url)</span>:</span></span><br><span class="line">    news_id = re.search(<span class="string">'doc-i(.*).shtml'</span>, news_url).group(<span class="number">1</span>)</span><br><span class="line">    comments = requests.get(form_comment_url.format(news_id))</span><br><span class="line">    jd = json.loads(comments.text.lstrip(<span class="string">'var data='</span>))</span><br><span class="line">    <span class="keyword">return</span> jd[<span class="string">'result'</span>][<span class="string">'count'</span>][<span class="string">'total'</span>]</span><br></pre></td></tr></table></figure>

<p><strong>15.整体封装</strong></p>
<p>前面步骤全部走了一遍之后，我们就可以将它们封装起来，称为一个函数了。</p>
<p>通过这一步，我们可以就可以把<code>news.sina.com.cn/china</code>中所有的href获取下来，然后逐一传入这个函数，就能够得到每一条新闻的结构化数据了。剩下的任务就是看我们怎么使用咯。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getNewsDetail</span><span class="params">(newsurl)</span>:</span></span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    res = requests.get(newsurl)</span><br><span class="line">    res.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    soup = BeautifulSoup(res.text, <span class="string">'html.parser'</span>)</span><br><span class="line">    result[<span class="string">'title'</span>] = soup.select(<span class="string">'title'</span>)[<span class="number">0</span>].text</span><br><span class="line">    result[<span class="string">'newssource'</span>] = soup.select(<span class="string">'p'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</span><br><span class="line">    artibody_time = soup.select(<span class="string">'.time-source'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</span><br><span class="line">    result[<span class="string">'dt'</span>] = datetime.strptime(artibody_time, <span class="string">'%Y年%m月%d日%H:%M'</span>)</span><br><span class="line">    result[<span class="string">'article'</span>] = <span class="string">' '</span>.join([p.text.strip() <span class="keyword">for</span> p <span class="keyword">in</span> soup.select(<span class="string">'#artibody p'</span>)[<span class="number">1</span>:<span class="number">-2</span>]])</span><br><span class="line">    result[<span class="string">'editor'</span>] = soup.select(<span class="string">'.article-editor'</span>)[<span class="number">0</span>].text.lstrip(<span class="string">'责任编辑：'</span>)</span><br><span class="line">    result[<span class="string">'comments'</span>] = getCommentCounts(newsurl)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<p>整个<code>Python网络爬虫实战</code>课程到这里也就结束了。<code>丘祐玮</code>讲师讲课比较细致，整个课程浅显易懂，对于有JS基础或者java基础或者C++基础或者Matlab基础的人来说，应该不难。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenGL学习笔记（四）</title>
    <url>/2017/05/07/OpenGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/71316089" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/71316089</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/nehexue-xi-bi-ji-si/">http://yaoyl.cn/nehexue-xi-bi-ji-si/</a></p>
<hr>
<h2 id="图像旋转"><a href="#图像旋转" class="headerlink" title="图像旋转"></a>图像旋转</h2><p>接下来我们将学习图像旋转。图像的旋转通过调用glRotatef(Angle,Xvector,Yvector,Zvector)实现。Angle表示旋转角度（注意是角度不是弧度），Xvector表示沿X轴旋转，Yvector表示沿着Y轴旋转，Zvector表示沿着Z轴旋转。注意旋转角度和RGB设置不一样，RGB的范围是0.0f-1.0f，而角度旋转的范围是0.0f-360.0f(其实可以超过360.0f，不过为了避免溢出我们应该将其做一个约束)。</p>
<p>图像的旋转方向遵循右手定则，即右手握住旋转的轴，右手大拇指朝向轴的正方向，那么你右手其他手指所朝的方向便为正方向。</p>
<p>为了实现图像的旋转，我们将尝试调用一个glRotatef方法。</p>
<p>首先我们还是在DrawGLScene方法中，通过glTranslatef确定绘点以后，我们就可以插入glRotatef(rtri, 0.0f, 0.0f, 1.0f)来绕着Z轴旋转。为此我们需要定义一个GLfloat类型的全局变量rtri。同时在DrawGLScene方法结束之前我们需要不断改变rtri的值来实现图像的旋转工作。</p>
<p>最终的参考代码如下（注意需要自己定义一个全局变量rtri）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DrawGLScene</span><span class="params">(GLvoid)</span>                                 <span class="comment">// 从这里开始进行所有的绘制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// 清除屏幕和深度缓存</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// 重置当前的模型观察矩阵</span></span><br><span class="line">    <span class="comment">//当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。</span></span><br><span class="line">    <span class="comment">//中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。</span></span><br><span class="line">    <span class="comment">//根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。</span></span><br><span class="line">    <span class="comment">//注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。</span></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>, <span class="number">0.0f</span>, <span class="number">-6.0f</span>);                   <span class="comment">// 左移 1.5 单位，并移入屏幕 6.0</span></span><br><span class="line">    glRotatef(rtri, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                      <span class="comment">// Rotate The Triangle On The Y axis ( NEW )</span></span><br><span class="line">    <span class="comment">//glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。</span></span><br><span class="line">    <span class="comment">//本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。</span></span><br><span class="line">    glBegin(GL_TRIANGLES);                              <span class="comment">// Drawing Using Triangles</span></span><br><span class="line">    <span class="comment">//接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// 设置当前色为红色</span></span><br><span class="line">    glVertex3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                       <span class="comment">// Top</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// 设置当前色为绿色</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Bottom Left</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// 设置当前色为蓝色</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Bottom Right</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Finished Drawing The Triangle</span></span><br><span class="line">    <span class="comment">//在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。</span></span><br><span class="line">    glTranslatef(<span class="number">3.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Move Right 3 Units</span></span><br><span class="line">    <span class="comment">//现在使用GL_QUADS绘制正方形。</span></span><br><span class="line">    glBegin(GL_QUADS);                                  <span class="comment">// Draw A Quad</span></span><br><span class="line">    <span class="comment">//glColor3f(1.0f, 0.0f, 0.0f);                      // 将当前色设置为蓝色</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Top Left</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                       <span class="comment">// Top Right</span></span><br><span class="line">    <span class="comment">//glColor3f(0.0f, 0.1f, 0.0f);                      // 将当前色设置为蓝色</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Bottom Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Bottom Left</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Done Drawing The Quad</span></span><br><span class="line">    rtri += <span class="number">0.2f</span>;                                           <span class="comment">// Increase The Rotation Variable For The Triangle ( NEW )</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Everything Went OK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现的效果如下图所示。</p>
<p><img src="http://img.blog.csdn.net/20170516074122918?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section3.1"></p>
<p>上述方法实现了整个画面绕着Z轴旋转的情况，我们接下来将实现两个图像分别旋转的场景。</p>
<p>首先我们尝试直接在绘制矩形之前，直接开始对矩形矩形旋选，旋转结果如下所示。</p>
<p><img src="http://img.blog.csdn.net/20170516074144544?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="section3.2"></p>
<p>这个时候我们发现矩形的旋转很异常，他并不是按照我们理想的情况下绕着自己的X轴旋转。这是因为在之前的三角形旋转过程中，实际在旋转的是整个坐标系（这样做是很有道理里的，它能让我们很方便的画出这个三角形，而不用费心计算每个点在固定参考坐标系下旋转之后新的坐标位置）。</p>
<p>为了解决这个问题，我们在三角形旋转完毕之后，应该重新调用glLoadIdentity进行坐标初始化。然后我们重新设置绘点glTranslatef，注意这个时候绘点的参数应该为(1.5f, 0.0f, -6.0f)，因为重置后绘点坐标为(0.0, 0.0, 0.0)，我们应该将矩形的绘点设置到和三角形相同的位置上。</p>
<p>最终的两个图形的旋转的参考代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DrawGLScene</span><span class="params">(GLvoid)</span>                                 <span class="comment">// 从这里开始进行所有的绘制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// 清除屏幕和深度缓存</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// 重置当前的模型观察矩阵</span></span><br><span class="line">    <span class="comment">//当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。</span></span><br><span class="line">    <span class="comment">//中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。</span></span><br><span class="line">    <span class="comment">//根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。</span></span><br><span class="line">    <span class="comment">//注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。</span></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>, <span class="number">0.0f</span>, <span class="number">-6.0f</span>);                   <span class="comment">// 左移 1.5 单位，并移入屏幕 6.0</span></span><br><span class="line">    glRotatef(rtri, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Rotate The Triangle On The Y axis ( NEW )</span></span><br><span class="line">    <span class="comment">//glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。</span></span><br><span class="line">    <span class="comment">//本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。</span></span><br><span class="line">    glBegin(GL_TRIANGLES);                              <span class="comment">// Drawing Using Triangles</span></span><br><span class="line">    <span class="comment">//接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// 设置当前色为红色</span></span><br><span class="line">    glVertex3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                       <span class="comment">// Top</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// 设置当前色为绿色</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Bottom Left</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// 设置当前色为蓝色</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Bottom Right</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Finished Drawing The Triangle</span></span><br><span class="line">    <span class="comment">//在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// 重置模型观察矩阵</span></span><br><span class="line">    glTranslatef(<span class="number">1.5f</span>, <span class="number">0.0f</span>, <span class="number">-6.0f</span>);                        <span class="comment">// Move Right 3 Units</span></span><br><span class="line">    glRotatef(rquad, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                 <span class="comment">//  绕X轴旋转四边形</span></span><br><span class="line">    <span class="comment">//现在使用GL_QUADS绘制正方形。</span></span><br><span class="line">    glBegin(GL_QUADS);                                  <span class="comment">// Draw A Quad</span></span><br><span class="line">    <span class="comment">//glColor3f(1.0f, 0.0f, 0.0f);                      // 将当前色设置为蓝色</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Top Left</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                       <span class="comment">// Top Right</span></span><br><span class="line">    <span class="comment">//glColor3f(0.0f, 0.1f, 0.0f);                      // 将当前色设置为蓝色</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                      <span class="comment">// Bottom Right</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>);                     <span class="comment">// Bottom Left</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Done Drawing The Quad</span></span><br><span class="line">    <span class="keyword">if</span> (rtri &gt;= <span class="number">360.0f</span>) rtri -= <span class="number">360.0</span>;                  <span class="comment">// control the range of the rtri</span></span><br><span class="line">    <span class="keyword">if</span> (rtri &lt;= <span class="number">0.0f</span>) rtri += <span class="number">360.0</span>;</span><br><span class="line">    rtri += <span class="number">0.2f</span>;                                       <span class="comment">// Increase The Rotation Variable For The Triangle ( NEW )</span></span><br><span class="line">    rquad -= <span class="number">0.15f</span>;      <span class="comment">// 减少四边形的旋转变量</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Everything Went OK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3D图像的旋转"><a href="#3D图像的旋转" class="headerlink" title="3D图像的旋转"></a>3D图像的旋转</h2><p>我们已经实现了对2D图像的构建着色以及选装，接下来我们将实现一个3D图像的构建以及旋转。</p>
<p>我们在之前构建三角形的教程中已经知道，在glBegin和glEnd之间可以有很多次相同形状的绘制，所以我们将利用这个特点在实验中利用4个三角形绘制一个金字塔，用6个矩形绘制一个立方体。</p>
<p>绘制过程我们就不再赘述了，旋转方式我们在上一次实验中也已经了解了，所以我们直接上代码和结果图。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DrawGLScene</span><span class="params">(GLvoid)</span>                                 <span class="comment">// 从这里开始进行所有的绘制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// 清除屏幕和深度缓存</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// 重置当前的模型观察矩阵</span></span><br><span class="line">    <span class="comment">//当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。</span></span><br><span class="line">    <span class="comment">//中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。</span></span><br><span class="line">    <span class="comment">//根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。</span></span><br><span class="line">    <span class="comment">//注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。</span></span><br><span class="line">    glTranslatef(<span class="number">-1.5f</span>, <span class="number">0.0f</span>, <span class="number">-6.0f</span>);                   <span class="comment">// 左移 1.5 单位，并移入屏幕 6.0</span></span><br><span class="line">    glRotatef(rtri, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                  <span class="comment">// Rotate The Triangle On The Y axis ( NEW )</span></span><br><span class="line">    <span class="comment">//glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。</span></span><br><span class="line">    <span class="comment">//本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。</span></span><br><span class="line">    glBegin(GL_TRIANGLES);                              <span class="comment">// Drawing Using Triangles</span></span><br><span class="line">    <span class="comment">//接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Red</span></span><br><span class="line">    glVertex3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                   <span class="comment">// Top Of Triangle (Front)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Green</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                 <span class="comment">// Left Of Triangle (Front)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// Blue</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Right Of Triangle (Front)</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Red</span></span><br><span class="line">    glVertex3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                   <span class="comment">// Top Of Triangle (Right)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// Blue</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Left Of Triangle (Right)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Green</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Right Of Triangle (Right)</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Red</span></span><br><span class="line">    glVertex3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                   <span class="comment">// Top Of Triangle (Back)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Green</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Left Of Triangle (Back)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// Blue</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                    <span class="comment">// Right Of Triangle (Back)</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Red</span></span><br><span class="line">    glVertex3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                   <span class="comment">// Top Of Triangle (Left)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// Blue</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                    <span class="comment">// Left Of Triangle (Left)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Green</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                 <span class="comment">// Right Of Triangle (Left)</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Finished Drawing The Triangle</span></span><br><span class="line">    <span class="comment">//在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。</span></span><br><span class="line">    glLoadIdentity();                                   <span class="comment">// 重置模型观察矩阵</span></span><br><span class="line">    glTranslatef(<span class="number">1.5f</span>, <span class="number">0.0f</span>, <span class="number">-6.0f</span>);                        <span class="comment">// Move Right 3 Units</span></span><br><span class="line">    glRotatef(rquad, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                 <span class="comment">//  绕X轴旋转四边形</span></span><br><span class="line">    <span class="comment">//现在使用GL_QUADS绘制正方形。</span></span><br><span class="line">    glBegin(GL_QUADS);                                  <span class="comment">// Draw A Quad</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Set The Color To Green</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">-1.0f</span>);                  <span class="comment">// Top Right Of The Quad (Top)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Top Left Of The Quad (Top)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Bottom Left Of The Quad (Top)</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);                   <span class="comment">// Bottom Right Of The Quad (Top)</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Set The Color To Orange</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Top Right Of The Quad (Bottom)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                 <span class="comment">// Top Left Of The Quad (Bottom)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                    <span class="comment">// Bottom Left Of The Quad (Bottom)</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Bottom Right Of The Quad (Bottom)</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Set The Color To Red</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);                   <span class="comment">// Top Right Of The Quad (Front)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Top Left Of The Quad (Front)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                 <span class="comment">// Bottom Left Of The Quad (Front)</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Bottom Right Of The Quad (Front)</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>);                        <span class="comment">// Set The Color To Yellow</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Top Right Of The Quad (Back)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                    <span class="comment">// Top Left Of The Quad (Back)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Bottom Left Of The Quad (Back)</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">-1.0f</span>);                  <span class="comment">// Bottom Right Of The Quad (Back)</span></span><br><span class="line">    glColor3f(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// Set The Color To Blue</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Top Right Of The Quad (Left)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Top Left Of The Quad (Left)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                    <span class="comment">// Bottom Left Of The Quad (Left)</span></span><br><span class="line">    glVertex3f(<span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                 <span class="comment">// Bottom Right Of The Quad (Left)</span></span><br><span class="line">    glColor3f(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);                        <span class="comment">// Set The Color To Violet</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">-1.0f</span>);                  <span class="comment">// Top Right Of The Quad (Right)</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);                   <span class="comment">// Top Left Of The Quad (Right)</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>);                  <span class="comment">// Bottom Left Of The Quad (Right)</span></span><br><span class="line">    glVertex3f(<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span>);                 <span class="comment">// Bottom Right Of The Quad (Right)</span></span><br><span class="line">    glEnd();                                            <span class="comment">// Done Drawing The Quad</span></span><br><span class="line">    <span class="keyword">if</span> (rtri &gt;= <span class="number">360.0f</span>) rtri -= <span class="number">360.0</span>;                  <span class="comment">// control the range of the rtri</span></span><br><span class="line">    <span class="keyword">if</span> (rtri &lt;= <span class="number">0.0f</span>) rtri += <span class="number">360.0</span>;</span><br><span class="line">    rtri += <span class="number">0.2f</span>;                                       <span class="comment">// Increase The Rotation Variable For The Triangle ( NEW )</span></span><br><span class="line">    rquad -= <span class="number">0.15f</span>;      <span class="comment">// 减少四边形的旋转变量</span></span><br><span class="line">    <span class="keyword">return</span> TRUE;                                        <span class="comment">// Everything Went OK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://img.blog.csdn.net/20170507122003199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="4.1"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>nehe</tag>
        <tag>OpenGL</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring的Bean管理</title>
    <url>/2020/06/20/Spring%E7%9A%84Bean%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>[toc]</p>
<h1 id="Spring的Bean管理"><a href="#Spring的Bean管理" class="headerlink" title="Spring的Bean管理"></a>Spring的Bean管理</h1><blockquote>
<p>本博客基于<a href="https://github.com/LongyunYao/SpringSourceCodeTest" target="_blank" rel="noopener">SpringSourceCodeTest</a>仓库中【SpringDemo1.0】tag进行的编写。</p>
</blockquote>
<p>基于配置文件进行bean管理的方案是Spring初期推行的方式，在历史比较悠久的Spring项目中比较常见。</p>
<h2 id="基于扫描的方式装载bean"><a href="#基于扫描的方式装载bean" class="headerlink" title="基于扫描的方式装载bean"></a>基于扫描的方式装载bean</h2><p>一个比较典型的配置文件通常包含<code>&lt;context&gt;</code>标签， <code>&lt;context&gt;</code>用来表示该项目中哪些包中的bean需要被进行生命周期管理。</p>
<p>默认情况下，使用<code>&lt;context&gt;</code>后，Spring会默认扫描定义的带有如下注解的bean：</p>
<ul>
<li>@Component</li>
<li>@Repository</li>
<li>@Service</li>
<li>@Controller</li>
<li>@RestController</li>
<li>@ControllerAdvice</li>
<li>@Configuration</li>
</ul>
<p>参考项目src/main/resources/beans.xml，一个典型的<code>&lt;context&gt;</code>文件如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">        http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">        http://www.springframework.org/schema/context</span><br><span class="line">        http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--默认会扫描包文件下的@Controller, @Service, @Repository, @Component等常见注解--&gt;</span><br><span class="line">    &lt;context:component-scan base-package=&quot;com.springtest.demo&quot;&gt;&lt;/context:component-scan&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>

<h3 id="XML格式解读"><a href="#XML格式解读" class="headerlink" title="XML格式解读"></a>XML格式解读</h3><p>在这份xml中，我们可以稍微简单说明都是做了一些什么事情。</p>
<ol>
<li>首先我们定义了一个<code>&lt;beans&gt;</code>的大标签，用于生命这个配置文件是用于Spring的生命周期管理，因此我们使用Spring-bean提供的命名空间，<code>&quot;xmlns=&quot;http://www.springframework.org/schema/beans&quot;</code>；</li>
<li>在下文中需要使用<code>&lt;context&gt;</code>标签，因此我们定义context所使用的命名空间<code>xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</code>；</li>
<li>然后我们定义我们需要扫描的包的位置<code>&lt;context:component-scan base-package=&quot;com.springtest.demo&quot;&gt;&lt;/context:component-scan&gt;</code>；</li>
<li>至此我们的xml其实就已经不会报错了，说明此事我们的xml从结构上已经没有明显问题；</li>
<li>但是此时启动Spring启动依然会失败并且报错<code>Cannot find the declaration of element &#39;beans&#39;.</code>，因此我们需要继续补充这份这份xml的schema文件，用来描述我们的xml中的标签行为；</li>
<li>此时我们就需要引入我们的<code>xsi:schemaLocation</code>属性，为此我们首先需要引入<code>xsi</code>的前缀命名空间<code>xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</code></li>
<li>最后我们补充完整的<code>xsi:schemaLocation</code>解析我们所引用的两个命名空间<code>&quot;http://www.springframework.org/schema/beans&quot;</code>和<code>&quot;http://www.springframework.org/schema/context&quot;</code>即可。</li>
<li>附：xmlns即xml namespace的缩写; xsi即xml schema instance的缩写; xsd即xml schema definition的缩写</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans</span><br><span class="line">       &lt;!-- 表明整个beans标签使用的是xmlns所指向的命名空间 --&gt;</span><br><span class="line">       xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       &lt;!-- 表明子节点中context标签使用的是xmlns:contex所指向的命名空间 --&gt;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">       &lt;!-- 表明xsi属性标签使用的是xmlns:xsi所指向的命名空间 --&gt;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       &lt;!-- 表明每一个命名空间具体指向的描述文件(xsd文件) --&gt;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">        http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">        http://www.springframework.org/schema/context</span><br><span class="line">        http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--默认会扫描包文件下的@Controller, @Service, @Repository, @Component等常见注解--&gt;</span><br><span class="line">    &lt;context:component-scan base-package=&quot;com.springtest.demo&quot;&gt;&lt;/context:component-scan&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>

<h3 id="XML内容解读"><a href="#XML内容解读" class="headerlink" title="XML内容解读"></a>XML内容解读</h3><p>这里<code>context:component-scan</code>定义了我们的组件扫描的范围，我们直接定义到整个项目的根节点<code>com.springtest.demo</code>，这样这个包内所有的组件都会被扫描并且组装到上下文中供我们使用。</p>
<p>这里我们暂时不深究，留在将来“模仿”Spring的时候再来。</p>
<p>本部分主要测试文件以及相关文件清单为：</p>
<ol>
<li>test.ConfigurationTest#test1 – 测试函数</li>
<li>src/main/resources/beans.xml – 配置文件</li>
</ol>
<h2 id="基于定义的方式装载bean"><a href="#基于定义的方式装载bean" class="headerlink" title="基于定义的方式装载bean"></a>基于定义的方式装载bean</h2><p>第二种方式和第一种方式很像，两者可以在同一个xml中同时使用。</p>
<p><code>&lt;bean&gt;</code>用来表示该项目中context初始化完成后，有哪些bean需要被补充加载，同时这些bean被装载过程中，以及被销毁时，要指定哪些动作，都是在这里定义的。其内部可使用的参数列表如下图所示(我的项目中Spring版本为5.2.2)：</p>
<p><img src="https://img-blog.csdnimg.cn/20200620154448367.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2hhZWw3NTM5NTE=,size_16,color_FFFFFF,t_70" alt="bean标签可定义属性"></p>
<p>其中我们常用的属性为:</p>
<ul>
<li>name: 用于标记bean的名字</li>
<li>class: 用于标记需要被实例化的class</li>
<li>scope: singleton表示单例; prototype表示每次getBean会获得一个实例; request表示每次请求获得一个实例; session表示每次灰化获得一个实例</li>
<li>lazy-init: 表示装载时间，如果为false表示Spring启动时装载，如果为true表示getBean时装载; 默认是false</li>
<li>init-method: 当bean构造完成并且属性赋值完成之后，装载进context之前被执行的方法，不能带参数，可以抛出异常。<ul>
<li>也可以通过实现Spring的<code>InitializingBean</code>接口;</li>
<li>或者使用标准的<code>@PostConstruct</code>实现该功能</li>
</ul>
</li>
<li>destroy-method: 当bean被销毁时，需要被执行的方法，不能带参数，可以抛出异常。<ul>
<li>也可以通过实现Spring的<code>DisposableBean</code>接口;</li>
<li>或者实现Java的<code>Closeable/AutoCloseable</code>接口;</li>
<li>或者使用标准的<code>@PreDestroy</code>注解实现该功能</li>
</ul>
</li>
<li>factory-method: 定义实例化对象时调用的函数</li>
</ul>
<p>一个比较常见的纯使用bean标签定义需要被装载的组件的配置文件如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">        http://www.springframework.org/schema/beans/spring-beans.xsd&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id=&quot;person&quot; class=&quot;com.springtest.demo.entity.Person&quot; name=&quot;person&quot; scope=&quot;prototype&quot; &gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>

<p>不难发现，这种方式定义上下文装载bean时，我们不需要对我们的类做任何注解(不需要@Component等)。</p>
<p>本部分主要测试文件以及相关文件清单为：</p>
<ol>
<li>test.ConfigurationTest#test1 – 测试函数</li>
<li>src/main/resources/beans.xml – 配置文件</li>
<li>com.springtest.demo.entity.Person – 被实例化的类</li>
</ol>
<h2 id="基于注解的方式装载bean"><a href="#基于注解的方式装载bean" class="headerlink" title="基于注解的方式装载bean"></a>基于注解的方式装载bean</h2><p>废话不多说，直接上源码。相关详细测试需要在项目中运行才能直观感受到（ConfigurationTest.test3)，这里只做粗略解释。相关内容需要阅读注释和各个注解的源码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springtest.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.config.typefilter.PersonTypeFilter;</span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.entity.Person;</span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.service.PersonService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan.Filter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.FilterType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置类等效配置文件</span></span><br><span class="line"><span class="meta">@Configuration</span>(value = <span class="string">"beansConfig2"</span>)  <span class="comment">// 表示这是一个配置类</span></span><br><span class="line"><span class="comment">//@ComponentScan(value = "com.springtest.demo" )  // 表示需要扫描的包，可以尝试注释该行然后运行ConfigurationTest.test3查看区别</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(value = <span class="string">"com.springtest.demo"</span>,</span><br><span class="line">        <span class="comment">// 定制扫描规则，默认扫描@Controller, @Service, @Repository, @Component，控制排除哪些组件不需要被包含</span></span><br><span class="line">         <span class="comment">//excludeFilters = @Filter(type = FilterType.ANNOTATION, classes = Controller.class),</span></span><br><span class="line">        useDefaultFilters = <span class="keyword">false</span>,</span><br><span class="line">        includeFilters = &#123;<span class="comment">// 定制扫描规则，控制只扫描哪些组件，需要关闭默认Filter</span></span><br><span class="line">                <span class="comment">// @Filter(type = FilterType.ANNOTATION, classes = &#123;Controller.class&#125;), // FilterType.ANNOTATION 按照注解方式进行操作</span></span><br><span class="line">                <span class="comment">//@Filter(type = FilterType.ASSIGNABLE_TYPE,classes = &#123;PersonService.class&#125;),  // FilterType.ASSIGNABLE_TYPE 按照指定类型的方式进行组件扫描</span></span><br><span class="line">                <span class="comment">// FilterType.ASPECTJ  比较不常用，指定AspectJ表达式进行组件扫描</span></span><br><span class="line">                <span class="comment">// FilterType.REGEX  指定符合正则的包进行扫描</span></span><br><span class="line">                <span class="comment">// FilterType.CUSTOM // 使用自定义规则</span></span><br><span class="line">                <span class="meta">@Filter</span>(type = FilterType.CUSTOM,classes = &#123;PersonTypeFilter.class&#125;)  <span class="comment">// 使用自定义规则</span></span><br><span class="line">        &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Component是一个可重复定义组件: @Repeatable</span></span><br><span class="line"><span class="comment">//@ComponentScan</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeansConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"person3"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Person <span class="title">person01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Person person = <span class="keyword">new</span> Person();</span><br><span class="line">        person.setAge(<span class="number">20</span>);</span><br><span class="line">        person.setName(<span class="string">"lisi"</span>);</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码中对<code>@ComponentScan</code>中各种扫描规则以及扫描过程中过滤器<code>@Filter</code>的用法做了一些demo。详细实现需要再运行源码体会一下。主要使用内容如下：</p>
<ul>
<li><code>ComponentScan</code>注解：<ul>
<li><code>includeFilters</code>需要包含的扫描范围定义</li>
<li><code>excludeFilters</code> 不需要包含的扫描范围定义</li>
<li><code>@Filte</code>注解：用于上述两种扫描规则的具体过滤规则定义，其<code>Filterype</code>分为如下几种过滤规则：<ul>
<li><code>FilterType.ANNOTATION</code>：对不同的注解进行扫描</li>
<li><code>FilterType.ASSIGNABLE_TYPE</code>：对不同的类名进行规则扫描<ul>
<li><code>FilterType.ASPECTJ</code>： 比较不常用，指定AspectJ表达式进行组件扫描</li>
<li><code>FilterType.REGEX</code>：  指定符合正则的包进行扫描</li>
<li><code>FilterType.CUSTOM</code>：使用自定义规则，上述集中规则应该均由该方式实现</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>注1：</strong> 由于Config自身首先需要进行注册然后才能进行相关的执行，因此Config类本身是肯定会被注册的。</p>
<p>本部分主要测试文件以及相关文件清单为：</p>
<ol>
<li>test.ConfigurationTest#test2 – 测试函数</li>
<li>com.springtest.demo.config.BeansConfig – 注解扫描的定义类</li>
<li>com.springtest.demo.entity.Person – 被实例化的类</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring</tag>
        <tag>源码</tag>
        <tag>Bean管理</tag>
      </tags>
  </entry>
  <entry>
    <title>RFID实验一总结</title>
    <url>/2017/05/20/RFID%E5%AE%9E%E9%AA%8C%E4%B8%80%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>刚接到这个课程项目的时候，是一脸懵逼的。毕竟是第一次接触JavaCard编程（其实就是自己没认真听课）。不过在围观各路大佬的博客之后，总算对整个项目有了较为深入的了解。</p>
<p>在实验过程中，需要不断翻阅实验课PPT之《01 Java智能卡之概述》，《02 电子钱包的文件系统》，《实验2文档》，以及不知名大佬的<a href="http://www.tqcto.com/article/software/83894.html" target="_blank" rel="noopener">课程总代码</a>，CSDN大佬吕浪的<a href="http://blog.csdn.net/lv_victor/article/details/51028930" target="_blank" rel="noopener">Java card开发系列文章</a>。</p>
<p>然后再自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。</p>
<p>最终的代码地址：<a href="https://github.com/LongyunYao/RFID_lab/" target="_blank" rel="noopener">https://github.com/LongyunYao/RFID_lab/</a></p>
<p>代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。</p>
<h1 id="正式实验"><a href="#正式实验" class="headerlink" title="正式实验"></a>正式实验</h1><h2 id="实验分析"><a href="#实验分析" class="headerlink" title="实验分析"></a>实验分析</h2><p>首先我们要知道本次实验中需要修改哪些函数，实现那哪些功能。</p>
<p>首先我们在PPT最后知道本次实验的主要目的是：</p>
<ul>
<li>创建文件</li>
<li>写秘钥</li>
<li>读写二进制文件</li>
</ul>
<p>再看详细内容，我们大概可以捋清如下关系：</p>
<ul>
<li>创建文件<ul>
<li>卡片收到命令并且开始解析</li>
<li>所谓的解析就是判断是何种文件，然后再进行创建</li>
<li>异常处理</li>
</ul>
</li>
<li>写秘钥<ul>
<li>秘钥消息是一条一条接受的，每次只会写入一条秘钥</li>
<li>卡片收到命令以后，取出数据，然后写入秘钥文件</li>
</ul>
</li>
<li>读写二进制文件<ul>
<li>写指令只需要一条</li>
<li>根据指令内容获得需要的参数，然后将其写入持卡人文件或者应用文件中</li>
<li>注意：写入之前需要检查数据时候超过限定大小</li>
<li>读取和写类似</li>
</ul>
</li>
</ul>
<p>在有了大概思路以后，我们开始阅读源代码。经过简单寻找，我们发现本次实验涉及的代码大多集中在Purse.java中。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203468/e80949d0-258b-11e7-96e2-89b3087741fc.png" alt="基本元素"></p>
<p>上面四个元素指明了我们将要操作的几个对象。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203457/e7b2830c-258b-11e7-8911-d2b7e7fc9d0d.png" alt="process"></p>
<p>这个部分似乎用处不明。但是根据让我们填写的部分，可以看出这一块是卡片读取指令的地方，将其缓冲到papdu中，让我们得以进行后续分析。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203452/e78315e0-258b-11e7-8c78-08555ef584ec.png" alt="handleEvent"></p>
<p>注释已经说明了，在《01 Java智能卡之概述》P30也有讲到该部分的作用，这里就是我们分析指令的地方，通过这个地方我们可以知道卡片当前接收的指令目的是什么。</p>
<p>将PPT上的操作内容先填进去，具体实现我们待会再说。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203453/e78578a8-258b-11e7-803f-d095709449d4.png" alt="handleEventv1"></p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203672/a3f1f2b4-258c-11e7-8164-5433dd00f23e.png" alt="添加INS_READ_BIN"></p>
<p>我们发现这里还需要添加读二进制的常量。</p>
<p>再往下读，就是创建文件部分。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203467/e8051338-258b-11e7-8a65-057b6f6674bf.png" alt="create_file"></p>
<p>注释和代码里已经说明，将会有4种文件可以被创建</p>
<ul>
<li>电子钱包文件(EP_file，这个部分已经给出)</li>
<li>秘钥文件</li>
<li>持卡人基本文件</li>
<li>应用基本文件</li>
</ul>
<p>剩下的就是圈存指令获取，初始化，以及一些其他操作，不是本次试验需要关心的部分。</p>
<h2 id="开始打码"><a href="#开始打码" class="headerlink" title="开始打码"></a>开始打码</h2><p>前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始打码的过程了。</p>
<p>我们在PPT《01 Java智能卡之概述》中已经知道了cAPDU的结构。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203449/e77275e6-258b-11e7-9151-f608cfbd22c2.png" alt="cAPDU结构"></p>
<p>我们也在各种文件中知道了每个参数的意义：</p>
<ul>
<li>CLA，即class，指令的类，占2Bytes</li>
<li>INS，instructions，指令编码，占2Bytes</li>
<li>P1 - 第一个指令参数，2Bytes</li>
<li>P2 - 第二个指令参数 (P1，P2 根据INS不同，也有不同的含义)，2Bytes</li>
<li>LC，数据段的长度（多少个字节），2Bytes</li>
<li>Data部分就是真正的数据了，最长可以是255个字节</li>
<li>LE字节表示的是期望卡片发回来的字节长度，注意不包括9000等响应</li>
</ul>
<p>首先我们完善process。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203459/e7b60720-258b-11e7-9b37-fc3b22bbeea5.png" alt="processv1part1"></p>
<p>按照已知的结构，将缓冲中的数据取出来，并且依次按照对应的位置放进papdu中。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203458/e7b4ac9a-258b-11e7-85fd-eebd1abdaa12.png" alt="processv1part2"></p>
<p>因为新加入了数据，所以我们需要更新卡片当前的LE，以便和终端进行确认。</p>
<p>handleEvent函数我们已经按照PPT改好了。接下来就是将它们一个一个实现。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203450/e77490ec-258b-11e7-9441-85f27e4f5d07.png" alt="create_filev1"></p>
<p>模仿提示的case，根据todo，我们可以列出其他3中情况，分别指向创建密钥文件，持卡人基本文件和应用基本文件。具体的对应条件在实验2文档中有详细说明。</p>
<p><a href>文件类型</a></p>
<p>仔细分析EP_file函数，这是一个钱包文件创建的样例，仔细阅读便可以对指令的解析过程有一个深入的了解。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203454/e785c484-258b-11e7-854c-f3997f5367b5.png" alt="create_file_table"></p>
<p>根据上图，我们对EP_file稍作修改，添加了ins校验，keyfile校验，p1p2校验。校验过程中，我们对cAPDU中所有参数进行全部确认一遍，然后确认EPfile目前为空，KEY文件已经建立，我们才能开始进行文件的读写，以免该函数在其他地方被误调用。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203451/e7826c26-258b-11e7-8544-63fdf4409642.png" alt="EP_file"></p>
<p>仿照这个模式，我们可以很快吧剩下3个文件建立实现出来。</p>
<p>Person_ file和Card_file的实现在这里略过，和EP _file一模一样。Key _file则需要稍加注意。因为Key是最先创建的，所以这个时候，keyfile肯定还是null，所以和其他判定条件不太一样，其他条件一样。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203456/e7a85efe-258b-11e7-84b1-6bb6c2d49ccf.png" alt="Key_file"></p>
<p>最后就是write_key和write _read _bin的实现了。</p>
<p>观察write_key表中的参数，以及p2的取值。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203455/e7a68034-258b-11e7-9a9e-a8494f6d2a7b.png" alt="p2"></p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203463/e7e4e964-258b-11e7-990c-df075fef1118.png" alt="write_key_table"></p>
<p>我们可以类似于之前创建文件的操作，完成写key操作。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203466/e7e87840-258b-11e7-86b7-722360b8f7d2.png" alt="write_key"></p>
<p>再然后就不难了。根据实验2文档，我们可以顺利写完整个代码。</p>
<p>首先是write_read _bin()实现。利用switch进行选择。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203464/e7e56e0c-258b-11e7-9d74-1412fc87cb50.png" alt="write_read_bin"></p>
<p>以及二进制的读和写操作函数。不过注意的是，写数据的时候，要注意数据data要在[1, 255]之间进行选择，否则会越界（因为LC不够长）。</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203465/e7e643a4-258b-11e7-8339-d275c98f63ad.png" alt="write_binary"></p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203460/e7b665ee-258b-11e7-9a4c-015bf6990e2c.png" alt="read_binary"></p>
<p>到这里，整个实验一就结束了。在填写完代码之后整个思绪都变得异常清晰，在操作中使用严格的控制能够良好的避免错误，也能够方便我们整理思路。让我们的撸代码的时候，思路更加清晰。</p>
<h1 id="验证实验"><a href="#验证实验" class="headerlink" title="验证实验"></a>验证实验</h1><p>首先将脚本.txt文件转换成.jcsh文件，然后转码成UTF-8，不转码就会出现乱码，eclipse就无法正常读取脚本。</p>
<p>然后在eclipse的控制台输入<code>/set-var path &quot;D:\Eclipse_cpp_workspace\purse&quot;</code>，注意文件路径填写的是你的.jcsh脚本文件所在的位置，然后输入你的脚本文件名就行了，如<code>purse_script</code>。（不需要加后缀）</p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203461/e7d3d930-258b-11e7-8a01-701201525c4a.png" alt="run_part1"></p>
<p><img src="https://cloud.githubusercontent.com/assets/18045191/25203462/e7d74dfe-258b-11e7-9a1a-9eaef2499f31.png" alt="run_part2"></p>
<p>这个时候我们发现，所有指令已经能够<code>no error</code>。实验一成功了。</p>
<p>2017/4/25 更新</p>
<p>基于验收过程中，跑真机过程中出现0x6B00报错的情况。注释掉了create_file中关于P1参数的检验。注释掉了ins 检验（ins检验其实应该没问题）。可能原因是因为真机中运行时指令和之前给的测试样本中的指令不完全一致，或者在create _file中p1有某种特殊的意义而不一定比为0x00（这部分没有在ppt和word中找到）。</p>
<p>另外，基于这个问题，在Purse.java（Java卡的入口类）编写的时候，不推荐按照我的实现方法进行实现。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>RFID</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Socket编程小结</title>
    <url>/2017/06/10/Socket%E7%BC%96%E7%A8%8B%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/Michael753951/article/details/72990141" target="_blank" rel="noopener">http://blog.csdn.net/Michael753951/article/details/72990141</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/socketbian-cheng-xiao-jie/">http://yaoyl.cn/socketbian-cheng-xiao-jie/</a></p>
<hr>
<p>本部分内容是对之前博客<a href="http://blog.csdn.net/michael753951/article/details/72553287" target="_blank" rel="noopener">【 Ubuntu下进行Socket编程】</a>中的补充说明，在这篇博客中，我将详细解释Socket编程的代码，分析编程的流程和思想。</p>
<p><strong>声明：</strong>本部分代码分别引用自<a href="http://www.cnblogs.com/xudong-bupt/archive/2013/12/29/3483059.html" target="_blank" rel="noopener">【Linux C Socket编程原理及简单实例】</a>以及<a href="http://blog.csdn.net/lisonglisonglisong/article/details/22699675" target="_blank" rel="noopener">【Linux网络编程：socket文件传输范例】</a>。</p>
<p>首先我们先分析第一份较为简单的代码，使用Socket编程完成一个两个控制台窗口之间通信的demo。</p>
<h1 id="简单通信"><a href="#简单通信" class="headerlink" title="简单通信"></a>简单通信</h1><p>在分析之前，我推荐你先看一下这篇博客<a href="http://www.cnblogs.com/dolphinX/p/3460545.html" target="_blank" rel="noopener">【简单理解Socket】</a>，上面很详细的解释说明了Socket编程的过程中，服务器端和客户端分别需要调用的函数和调用流程。比如博客中下面这张图，很重要也很直观的。</p>
<p><img src="http://images.cnitblog.com/blog/349217/201312/05232335-fb19fc7527e944d4845ef40831da4ec2.png" alt="流程图"></p>
<p>接下来我们开始分析代码，看代码的过程中，我们需要不断回头看看上面这张流程图，方便对整个代码进行理解剖析。</p>
<p>服务器端代码如下。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/shm.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYPORT  8887</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QUEUE   20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE 1024</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">///获得sockfd</span></span><br><span class="line">    <span class="comment">// SOCK_STREAM 表明使用TCP协议（有序，流）</span></span><br><span class="line">    <span class="comment">// 参考地址 http://baike.baidu.com/link?url=msvzh3jij6QHrqSMUVsst9P7o0wCNRJFS2qwZ_G5uu0hBL090wOB-4Nfgv7ye2-ZlQ3ZnnR4tqueYg6ThnqXSNP6aRe371EX2dhl5uYZ_jm</span></span><br><span class="line">    <span class="keyword">int</span> server_sockfd = socket(AF_INET,SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">///定义sockaddr_in，用来表示接受方的IP地址</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server_sockaddr</span>;</span></span><br><span class="line">    server_sockaddr.sin_family = AF_INET; <span class="comment">// 设置地址家族</span></span><br><span class="line">    <span class="comment">// htons是将整型变量从主机字节顺序转变成网络字节顺序， 就是整数在地址空间存储方式变为：高位字节存放在内存的低地址处。 参考地址：http://baike.baidu.com/link?url=QUJ7h2uCP-Fag7xTlSgVCsZyGFr-hqJuaO-L5wRHbH7ODChk-vsHwsiipqVqIiJeNf1dCz4aeJ7SEvC-324Hfa</span></span><br><span class="line">    <span class="comment">// 绑定端口号至8887号</span></span><br><span class="line">    server_sockaddr.sin_port = htons(MYPORT); <span class="comment">// 设置端口</span></span><br><span class="line">    <span class="comment">// htonl将主机数转换成无符号长整型的网络字节顺序。本函数将一个32位数从主机字节顺序转换成网络字节顺序。</span></span><br><span class="line">    <span class="comment">// INADDR_ANY就是指定地址为0.0.0.0的地址，这个地址事实上表示不确定地址，或“所有地址”、“任意地址”。 一般来说，在各个系统中均定义成为0值。 参考地址：http://baike.baidu.com/link?url=UnkEXjpR6yhwsqWJ9d_77IzqsbEPaiO_e8WI355TORvFwpgf9zO4sQcBLilHuKxTYEOanDCWxGedtp_8-7BfVDZwyjN8ZDJDLrXitPwr49Bf5E7OwvEKHQj6EjZQHGcPU8DpDDsdeixUmYnZxgJMya</span></span><br><span class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY); <span class="comment">// 设置地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">///bind，成功返回0，出错返回-1</span></span><br><span class="line">    <span class="keyword">if</span>(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,<span class="keyword">sizeof</span>(server_sockaddr))==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">"bind"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///listen，成功返回0，出错返回-1</span></span><br><span class="line">    <span class="comment">// 消息队列长度为20</span></span><br><span class="line">    <span class="keyword">if</span>(listen(server_sockfd, QUEUE) == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">"listen"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">///客户端套接字</span></span><br><span class="line">    <span class="keyword">char</span> buffer[BUFFER_SIZE];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client_addr</span>;</span></span><br><span class="line">    <span class="keyword">socklen_t</span> length = <span class="keyword">sizeof</span>(client_addr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">///成功返回非负描述字，出错返回-1</span></span><br><span class="line">    <span class="keyword">int</span> conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</span><br><span class="line">    <span class="keyword">if</span>(conn&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">"connect"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="keyword">int</span> len = recv(conn, buffer, <span class="keyword">sizeof</span>(buffer),<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(buffer,<span class="string">"exit\n"</span>)==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">fputs</span>(buffer, <span class="built_in">stdout</span>);</span><br><span class="line">        send(conn, buffer, len, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    close(conn);</span><br><span class="line">    close(server_sockfd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>仔细查看代码，各种参数的设置原因我已经写在注释中了，就不再赘述。稍加注意我们便可以发现服务器端代码中，依次调用了socket, bind, listen, accept, recv, close。整个流程是符合我们之前放出来的那张图的，我们在计算机网络中也学习过，5层网络模型中，socket套接字担任了应用层和网络层之间通信的任务，我们也知道了每个socket套接字会绑定一个特定的端口，从而接受这个端口传入的讯息。</p>
<h2 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h2><p>代码中，首先使用socket函数定义消息使用IPv4网络，建立一个面向连接的稳定数据传输，即TCP传输。</p>
<p>然后作者定义了一个sockaddr_in结构体，用来存放服务器的信息。sockaddr_in中存放了客户端的网络通信方式——IPv4，TCP，以及监听的ip地址。（这里监听的0.0.0.0，表示监听本机上所有的ip地址，这里的ip地址是指5层网络中的第4层网络层的ip地址，即服务器端自身的ip地址，这部分资料可以参考<a href="http://blog.csdn.net/bloghome/article/details/3342076" target="_blank" rel="noopener">【关于socket绑定INADDR_ANY】</a>）。上面有比较详细的解释。</p>
<p>接下来调用bind函数绑定socket，同时调用listen开始监听，使用accept接收消息队列中的消息内容，监听的ip和端口号已经在sockaddr_in中已经定义好了。</p>
<p>接着使用一个while循环忙等待，等待调用recv让服务端收到从其他客户端发来的消息。send表示将消息发送出去。</p>
<p>只要将服务端的代码看懂，类似的，我们也能够很简单的看懂客户端的代码内容。请自行对着那张流程图和代码进行比对阅读。</p>
<h2 id="demo2分析"><a href="#demo2分析" class="headerlink" title="demo2分析"></a>demo2分析</h2><p>仔细查看demo2使用TCP传输文件的例子，其实和上一个demo没什么本质上的区别，流程的关键代码都一致。不过稍微注意的是，在这一份demo中多了一行代码。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setsockopt(server_socket_fd, SOL_SOCKET, SO_REUSEADDR, &amp;opt, <span class="keyword">sizeof</span>(opt));</span><br></pre></td></tr></table></figure>

<p>关于这一行代码的解释，我在这里就不多说了，因为我也并没有很看明白，如果你有兴趣的话，可以参考这篇博客，上面有很详尽的解释以及说明。<a href="http://blog.csdn.net/chary8088/article/details/2486377" target="_blank" rel="noopener">【setsockopt()用法（参数详细说明）】</a></p>
<p>到这里其实想不出还有什么需要在解释的了，代码很简单，因为这两份demo都很纯粹，简单几行代码便能够展示清楚使用TCP变成的操作方法和顺序（如果你想使用UDP编程的话，方法类似）。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>socket</tag>
        <tag>网络编程</tag>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Apache HTTPD 2.2.15的部分漏洞修复建议</title>
    <url>/2017/12/21/%E5%85%B3%E4%BA%8EApache%20HTTPD%202.2.15%E7%9A%84%E9%83%A8%E5%88%86%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE/</url>
    <content><![CDATA[<p>龙云尧个人博客，转载请注明出处。</p>
<p>CSDN地址：<a href="http://blog.csdn.net/Michael753951/article/details/78861876" target="_blank" rel="noopener">http://blog.csdn.net/Michael753951/article/details/78861876</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/guan-yu-apache-httpd-2-2-15-de-bu-fen-lou-dong-xiu-fu-jian-yi/">http://yaoyl.cn/guan-yu-apache-httpd-2-2-15-de-bu-fen-lou-dong-xiu-fu-jian-yi/</a></p>
<hr>
<h1 id="修复Apache-HTTP-Server畸形Range和Range-Request选项处理远程拒绝服务漏洞"><a href="#修复Apache-HTTP-Server畸形Range和Range-Request选项处理远程拒绝服务漏洞" class="headerlink" title="修复Apache HTTP Server畸形Range和Range-Request选项处理远程拒绝服务漏洞"></a>修复Apache HTTP Server畸形Range和Range-Request选项处理远程拒绝服务漏洞</h1><p>该漏洞有如下几种修补方法</p>
<h2 id="方式1："><a href="#方式1：" class="headerlink" title="方式1："></a>方式1：</h2><p>升级Apache httpd至2.2.21及以上版本</p>
<p>##方式2：<br>可以从官网<a href="http://www.apache.org/dist/httpd/patches/apply_to_2.2.19/CVE-2011-3192-2.2.19-byterange-fixes.patch" target="_blank" rel="noopener">下载补丁包</a>，重新打包编译Apache。</p>
<p>##方式3：</p>
<p>修改httpd.conf文件（一般位于<code>/usr/local/apache2/conf/httpd.conf</code>，具体视安装Apache时的配置而定），相关配置参考<a href="https://httpd.apache.org/security/CVE-2011-3192.txt" target="_blank" rel="noopener">Apache官方关于该漏洞的修复建议</a>，（绿盟也有<a href="http://www.nsfocus.net/index.php?act=sec_bug&do=view&bug_id=17605" target="_blank" rel="noopener">对官方建议的中文翻译</a> ，不过翻译并不准确，不建议参考），这里使用官方建议的修复方式2</p>
<p><strong>Step1.</strong> 引入mod_rewrite和mod_headers模块，这里去掉两个模块的默认的注释即可</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcxMjIxMTEwMDQ1Njk5?x-oss-process=image/format,png" alt="引入mod_rewrite和mod_headers模块"></p>
<p><strong>Step2.</strong> 在正文部分引入如下配置（配置说明：Range:标头中超过5个范围时即拒绝请求，并且总是丢弃Request-Range，因为是旧版的）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule rewrite_module&gt;</span><br><span class="line">&lt;IfModule mod_headers&gt;</span><br><span class="line">    # Reject request when more than 5 ranges in the Range: header.</span><br><span class="line">    # CVE-2011-3192</span><br><span class="line">    #</span><br><span class="line">    RewriteEngine on</span><br><span class="line">    RewriteCond %&#123;HTTP:range&#125; !(^bytes=[^,]+(,[^,]+)&#123;0,4&#125;$|^$) [NC]</span><br><span class="line">    RewriteRule .* - [F]</span><br><span class="line"></span><br><span class="line">    # We always drop Request-Range; as this is a legacy</span><br><span class="line">    # dating back to MSIE3 and Netscape 2 and 3.</span><br><span class="line">    #</span><br><span class="line">    RequestHeader unset Request-Range</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>

<p><strong>Step3：</strong> 重启Apache httpd</p>
<h1 id="修复目录遍历漏洞"><a href="#修复目录遍历漏洞" class="headerlink" title="修复目录遍历漏洞"></a>修复目录遍历漏洞</h1><p>通过修改conf目录下的httpd.conf文件来禁止使用目录索引。（参考自知乎专栏<a href="blog%EF%BC%9Ahttps://zhuanlan.zhihu.com/p/21516413">《目录遍历漏洞》</a> ）</p>
<p><strong>Step1：</strong> 打开httpd.conf文件（一般位于<code>/usr/local/apache2/conf/httpd.conf</code>，具体视安装Apache时的配置而定）</p>
<p><strong>Step2：</strong> 将<code>Options Indexes FollowSymLinks</code>中的<code>Indexes</code>删除更改为<code>Options  FollowSymLinks</code>，这样web目录下的所有目录都不再生成索引。</p>
<p><strong>Step3：</strong> 重启Apache httpd</p>
<h1 id="修复HTTP慢连接拒绝服务攻击漏洞"><a href="#修复HTTP慢连接拒绝服务攻击漏洞" class="headerlink" title="修复HTTP慢连接拒绝服务攻击漏洞"></a>修复HTTP慢连接拒绝服务攻击漏洞</h1><p>建议使用mod_reqtimeout和mod_qos两个模块相互配合来防护。这部分通过修改httpd.conf完成（一般位于<code>/usr/local/apache2/conf/httpd.conf</code>，具体视安装Apache时的配置而定）。参考自<a href="https://cto.eguidedog.net/node/545" target="_blank" rel="noopener">《缓慢的http拒绝服务攻击》</a></p>
<p><strong>Step1：</strong> mod_reqtimeout用于控制每个连接上请求发送的速率。配置如下：</p>
<p><strong>Step1.1</strong> 首先去掉引入默认注释的mod_reqtimeout</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcxMjIxMTEyMDEzMzIx?x-oss-process=image/format,png" alt="引入mod_reqtimeout模块"></p>
<p><strong>Step1.2</strong> 在代码正文开始或者结束部分加入如下代码。（<strong>代码说明</strong>：请求头部分，设置超时时间初始为20秒，并在收到客户端发送的数据后，每接收到500字节数据就将超时时间延长1秒，但最长不超过40秒。可以防护slowloris型的慢速攻击。请求正文部分，设置超时时间初始为10秒，并在收到客户端发送的数据后，每接收到500字节数据就将超时时间延长1秒，但最长不超过40秒。可以防护slow message body型的慢速攻击。需注意，对于HTTPS站点，需要把初始超时时间上调，比如调整到20秒。）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule reqtimeout_module&gt;</span><br><span class="line">    RequestReadTimeout header=20-40,MinRate=500</span><br><span class="line">    RequestReadTimeout body=10-40,minrate=500</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>

<p><strong>Step2：</strong> mod_qos用于控制并发连接数。配置如下：</p>
<p><strong>Step2.1</strong> 首先检查<code>modules</code>目录下，是否有<code>mod_qos.so</code>文件，如果有，则去掉httpd.conf中对<code>LoadModule qos_module   modules/mod_qos.so</code>行的注释，引入该模块，并且跳过Step2.2进入Step2.3。</p>
<p><strong>Step2.2</strong> 如果<code>modules</code>目录下没有<code>mod_qos.so</code>文件，则需要手动引入，指令如下（Linux环境下），参考<a href="http://blog.csdn.net/lwx2615/article/details/18698891" target="_blank" rel="noopener">《Apache mod_qos模块安装与配置》</a> 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1.下载qos模块（该指令中模块版本为文档撰写时的最新版本，实际操作可以稍作修改）</span><br><span class="line">wget http://jaist.dl.sourceforge.net/project/mod-qos/mod_qos-11.45.tar.gz</span><br><span class="line"># 2.解压</span><br><span class="line">tar -zxvf mod_qos-11.45.tar.gz </span><br><span class="line"># 3.安装</span><br><span class="line">cd mod_qos-11.45</span><br><span class="line">cd apache2/</span><br><span class="line">/usr/local/apache2/bin/apxs -i -c mod_qos.c #编译指令，将.c文件编译成.so文件，具体文件路径请按照系统实际路径修改</span><br><span class="line"># 4.检查/usr/local/apache2/modules目录下面是否多了mod-qos.so文件</span><br><span class="line"># 5.回到apache2/conf修改httpd.conf，头文件中增加如下一行</span><br><span class="line">LoadModule qos_module   modules/mod_qos.so</span><br><span class="line">引入qos_module模块。</span><br></pre></td></tr></table></figure>

<p><strong>Step2.3</strong> 在httpd.conf正文中添加一行，引入qos配置文件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Include conf/extra/qos.conf</span><br></pre></td></tr></table></figure>

<p><strong>Step2.4</strong> 进入<code>apache2/conf/extra</code>，新建qos.conf文件，输入以下配置信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># maximum number of active TCP connections is limited to 896 (limited</span><br><span class="line"># by the available memory, adjust the settings according to the used</span><br><span class="line"># hardware):</span><br><span class="line">MaxClients               400</span><br><span class="line"></span><br><span class="line"># idle timeout:</span><br><span class="line">Timeout                  20</span><br><span class="line"></span><br><span class="line"># keep alive (for up to 85% of all connections):</span><br><span class="line">KeepAlive                on</span><br><span class="line">MaxKeepAliveRequests     60</span><br><span class="line">KeepAliveTimeout         3</span><br><span class="line">QS_SrvMaxConnClose       85%</span><br><span class="line"></span><br><span class="line"># name of the HTTP response header which marks preferred clients (this</span><br><span class="line"># may be used to let the application decide which clients are &quot;good&quot; and</span><br><span class="line"># have higher privileges, e.g. authenticated users. you may also use</span><br><span class="line"># the QS_VipUser directive when using an Apache authentication module such</span><br><span class="line"># as mod_auth_basic or mod_auth_oid):</span><br><span class="line">QS_VipIPHeaderName       mod-qos-login</span><br><span class="line"></span><br><span class="line"># enables the known client prefer mode (server allows new TCP connections</span><br><span class="line"># from known/good clients only when is has more than 716 open TCP connections):</span><br><span class="line">QS_ClientPrefer          80</span><br><span class="line"></span><br><span class="line"># minimum request/response speed (deny slow clients blocking the server, </span><br><span class="line"># e.g. defending slowloris) if the server has 500 or more open connections:</span><br><span class="line">QS_SrvMinDataRate        120 1500 500</span><br><span class="line"></span><br><span class="line"># and limit request line, header and body:</span><br><span class="line">LimitRequestLine         7168</span><br><span class="line">LimitRequestFields       30</span><br><span class="line">QS_LimitRequestBody      102400</span><br><span class="line"></span><br><span class="line"># don&apos;t allow more than 30 TCP connections per client source address if</span><br><span class="line"># 500 connections are open to the server:</span><br><span class="line">QS_SrvMaxConnPerIP       30 500</span><br><span class="line"></span><br><span class="line"># block clients violating some basic rules frequently (don&apos;t allows more than 20</span><br><span class="line"># violations within 5 minutes):</span><br><span class="line">QS_ClientEventBlockCount 20 300</span><br><span class="line">QS_SetEnvIfStatus        400               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        401               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        403               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        404               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        405               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        406               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        408               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        411               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        413               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        414               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        417               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        500               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        503               QS_Block</span><br><span class="line">QS_SetEnvIfStatus        505               QS_Block</span><br><span class="line">#QS_SetEnvIfStatus        QS_SrvMinDataRate QS_Block</span><br><span class="line">QS_SetEnvIfStatus        NullConnection    QS_Block</span><br></pre></td></tr></table></figure>

<p><strong>Step3：</strong> 重启Apache httpd</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>Apache</tag>
      </tags>
  </entry>
  <entry>
    <title>一点点手写Spring</title>
    <url>/2020/06/20/%E4%B8%80%E7%82%B9%E7%82%B9%E6%89%8B%E5%86%99Spring/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>[toc]</p>
<h1 id="一点点手写Spring"><a href="#一点点手写Spring" class="headerlink" title="一点点手写Spring"></a>一点点手写Spring</h1><p>一直有一个小小的计划，做一个完整的系列，从使用Spring，到模拟Spring，到“抄袭”Spring，一点点理解Spring的内在和机制，同时加深自己对Java机制以及设计模式等内在的理解。</p>
<p>因为Spring很大，模块很多，这里我计划只关注Spring的core包、bean包和context包，分别对应核心、bean的生命周期管理和Spring上下文的。</p>
<p>首先从Spring的基础配置开始，我们现在最经常使用Spring的Bean管理有两种方式：①通过配置文件管理bean; ②通过注解配置类进行bean的扫描管理。</p>
<p>我将尝试两种扫描方式都用一次，然后尝试各自复现。基于此来对Spring 使用-模拟-“抄袭”。</p>
<h2 id="关于仓库和分支"><a href="#关于仓库和分支" class="headerlink" title="关于仓库和分支"></a>关于仓库和分支</h2><p>相关demo发布在我个人仓库的<a href="https://github.com/LongyunYao/SpringSourceCodeTest" target="_blank" rel="noopener">《SpringSourceCodeTest》</a> 中，当前已经完成了对Spring的初步使用和模拟。</p>
<p>每次有重大特性变动，或者有较大的刷新的时候，我都会打上tag，以此尽可能与博客描述的内容对齐。</p>
<p><em>注：当前博客对应的仓库中的tag为<a href></a>，可以切换到这个tag同步阅读博客</em></p>
<h2 id="关于博客分布"><a href="#关于博客分布" class="headerlink" title="关于博客分布"></a>关于博客分布</h2><p>本次更新计划按照系列更新的方式进行更新，因此这篇文章只是作为综述，详细点在各个文章中更新。</p>
<p>相关文章：</p>
<blockquote>
<p><a href="https://blog.csdn.net/Michael753951/article/details/106578817" target="_blank" rel="noopener">《自定义注解并且进行扫描解析》</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring</tag>
        <tag>源码</tag>
      </tags>
  </entry>
  <entry>
    <title>双系统安装Ubuntu的初始化</title>
    <url>/2017/05/19/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85Ubuntu%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/72547775" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/72547775</a></p>
<p>个人blog地址：<a href="http://http://yaoyl.cn/ubuntu-huan-jing-pei-zhi/" target="_blank" rel="noopener">http://http://yaoyl.cn/ubuntu-huan-jing-pei-zhi/</a></p>
<hr>
<h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>一方面由于实验室开发的要求，另一方面由于自己想搞Linux服务器，于是在自己的电脑上装了双系统——Ubuntu 16.04 + Windows10。其中Win10是PC自身的系统，Ubuntu为后期装入，本篇博客将稍微记录一下我对整个系统的UI优化以及部分必要的软件配置。</p>
<h1 id="必要软件安装"><a href="#必要软件安装" class="headerlink" title="必要软件安装"></a>必要软件安装</h1><h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2><p>首先需要安装的最最重要的当然是输入法了，这里我选用的是搜狗输入法，直接从官网下载安装包即可。（Ubuntu 版本的 搜狗输入法翻页是用 - 和 = 而不是 { 和 }）另外，在Ubuntu中切换输入法的快捷键是 Ctrl + Space 。</p>
<h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>然后是编辑器，我依然选用的是Sublime，这个网上教程很多，上官网下载安装包，激活，配置环境教程太多了。</p>
<h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><p>另外，考虑到我有C++的开发需求，我是用了网上比较推荐的 CodeBlocks ，软件安装教程网上很多。</p>
<h2 id="上网"><a href="#上网" class="headerlink" title="上网"></a>上网</h2><p>再然后就是上网了。毕竟我们不可能永远待在实验室或者图书馆或者蹭别人的WiFi，但是很可惜的是，学校的iNode 64位版本并不好用，官方也没有相对应的安装教程，网上有一些教程，但是都是讲如何在64位Ubuntu系统中使用32位iNode进行上网验证。这种方法并不推荐，因为库依赖太多，而且很难成功，教程也是很多年以前的教程，现如今并不太适用。在和网络中心交流几天之后，他们给我推荐了一款非官方的软件 YaH3C 。详见 <a href="https://github.com/humiaozuzu/YaH3C" target="_blank" rel="noopener">https://github.com/humiaozuzu/YaH3C</a> 。上面有安装教程。</p>
<p>需要注意的是，安装教程中，默认的网卡为 eth0 ，但是在我的电脑上其实并不是，这个问题在一开始直接导致我一直配置不好环境。后面发现应该按照控制台中显示的网卡名称进行配置，否则会出现登录异常。</p>
<p>如下图所示，左边控制台中显示，我的默认网卡其实是 “enp4s0f2” ，所以在配置的时候，我就需要在网卡上填写 “enp4s0f2” 而不是教程中的 “eth0”。</p>
<p><img src="http://img.blog.csdn.net/20170519170710308?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="网卡"></p>
<p>配置完成以后，执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yah3c</span><br></pre></td></tr></table></figure>

<p>然后选择正确的网卡（我是按1），验证成功以后就能够正常上网了。</p>
<h2 id="WiFi"><a href="#WiFi" class="headerlink" title="WiFi"></a>WiFi</h2><p>在WiFi开启这个问题上，Ubuntu下面还是很好解决的，因为系统本身就支持直接进行无线网络共享，我们就不再需要安装各种乱七八糟的WiFi共享软件啦。这里我推荐一个比较靠谱的配置教程<a href="http://www.cnblogs.com/weiweisuhe/p/5635298.html" target="_blank" rel="noopener">【ubuntu 16.04 设置位wifi热点 方法】</a>。其他的网络教程在我的系统中并不能够配置出一个靠谱的WiFi。</p>
<h1 id="UI设置"><a href="#UI设置" class="headerlink" title="UI设置"></a>UI设置</h1><h2 id="Tweak"><a href="#Tweak" class="headerlink" title="Tweak"></a>Tweak</h2><p>UI方面，我使用的网上普遍推荐的 Ubuntu Tweak 进行优化，安装教程网上很多，也忘记保存书签，安装的时候可以自行搜索。</p>
<p>主题方面，“GTK主题”我选择的是“Radiance”，“图标主题”我选择的是“Ultra-Flat”，“光标主题”我选择的是“DMZ-Black”，“窗口主题”我选择的是“Radiance”。</p>
<p>字体方面，我的设置为，“默认字体”为“Ubuntu Regular”，“桌面字体”为“Sans Regular”，“等宽字体”为“Ubuntu Mono Regular”，“文档字体”为“Sans Regular”，“窗口标题字体”为“FreeSans Bold”，其他的可以自行调整。</p>
<p>另外，我还安装了Unity Tweak Tool，安装方法同样网上就有，操作上和 Ubuntu Tweak 类似。稍微调整了系统时钟显示和触控板设置以后，稍微修改壁纸，整个系统看上去就舒服很多了。</p>
<h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><p>Ubuntu内嵌的默认浏览器是火狐浏览器，其实也挺好用的，但是因为我在Windows中刷网页都是使用Chrome，书签和必要的插件也在里面，所以我在Ubuntu中从官网中下载了Chrome，登录账号成功之后，Chrome将我所有的书签全部同步过来，密码也能同步过来。同时，因为Chrome内嵌了 flash ，所以在刷视频的时候，就会比火狐方便很多。</p>
<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>配置完上面内容，然后换一个桌面，整个Ubuntu界面就不再是丑丑的样子啦，用起来也神清气爽了。稍微po两张我的桌面和浏览器。</p>
<p><img src="http://img.blog.csdn.net/20170519170411570?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="浏览器"></p>
<p><img src="http://img.blog.csdn.net/20170519170436258?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="桌面"></p>
<p>接下来就是要开始进行环境配置了，因为我需要在Ubuntu中进行OpenGL开发，所以我们需要进行一些环境上的配置。</p>
<p>环境配置上，我找了不少博客，但是都没有很完美的解决方案，知道后面在CSDN上面找到一个小哥的<a href="http://blog.csdn.net/jarvischu/article/details/8226938" target="_blank" rel="noopener">【Ubuntu 下使用OpenGL/GLUT的配置以及在Codeblocks中使用GLUT 】</a>。小哥在博客中很详细的讲述了环境配置的过程和方法以及一些错误的尝试和正确的打开方式。看完基本就能够使用CodeBlocks进行OpenGL开发了。</p>
<p>最后附上茶壶demo的代码。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glut.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClearColor(<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">    glMatrixMode(GL_PROJECTION);</span><br><span class="line">    glOrtho(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">-5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">15</span>);</span><br><span class="line">    glMatrixMode(GL_MODELVIEW);</span><br><span class="line">    gluLookAt(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">    glColor3f(<span class="number">1.0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    glutWireTeapot(<span class="number">3</span>);</span><br><span class="line">    glFlush();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInit(&amp;argc, argv);</span><br><span class="line">    glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);</span><br><span class="line">    glutInitWindowPosition(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    glutInitWindowSize(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">    glutCreateWindow(<span class="string">"OpenGL 3D View"</span>);</span><br><span class="line">    init();</span><br><span class="line">    glutDisplayFunc(display);</span><br><span class="line">    glutMainLoop();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果能够正常显示，就说明你的Linux目前已经能够进行OpenGL开发了。</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>双系统</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Ghost作为图床</title>
    <url>/2017/04/19/%E5%88%A9%E7%94%A8Ghost%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/Michael753951/article/details/70307694" target="_blank" rel="noopener">http://blog.csdn.net/Michael753951/article/details/70307694</a></p>
<p>个人博客地址：<a href="http://123.207.243.115:81/li-yong-ghostzuo-wei-tu-chuang/" target="_blank" rel="noopener">http://123.207.243.115:81/li-yong-ghostzuo-wei-tu-chuang/</a></p>
<h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>图床一直是一个很让我头疼的问题，在去年开始，我就有用markdown写项目总结的习惯，贴图的时候，怎么找一个好用的图床这个问题却一直没有解决。</p>
<p>目前我是用过的图床包括网易<code>LOFTER</code>，<code>github</code>，<code>CSDN</code>以及自己搭建的<code>Ghost博客服务器</code>。</p>
<p>前三种方式中，<code>LOFTER</code>和<code>github</code>直接将图片拖进去，然后右键图片，复制源地址就行了。但是美中不足的是<code>LOFTER</code>的源在其他网站上显示并不是很友好，<code>github</code>在虽然图片显示很清楚，但是上传图片的时候总是会出问题。<code>CSDN</code>和<code>github</code>一样，上传文件时总是会出问题。</p>
<p>这迫使我有了再重新寻找一个图床的想法。</p>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>今晚（2017/4/21）凌晨在写项目总结的时候，我突然意识到我<strong>可以利用自己的博客服务器</strong>作为图床。而且服务器ip地址在公网中，地理地质位于华南，作为图床应该会比较稳定。</p>
<p>果然，在稍微折腾一下之后，我在ghost官网中找到一篇<a href="https://help.ghost.org/hc/en-us/articles/223237408-Upload-Images" target="_blank" rel="noopener">【Upload Images】</a>的教程，有告诉我们怎么向服务器传文件并且在博客中显示。</p>
<p>我就可以利用这个原理，将Ghost服务器作为图床啦。</p>
<h1 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h1><p>操作过程比较简单。</p>
<p>首先我们进入后台新建一篇文章(<code>New Post</code>)。然后在正文空白部分输入<code>![]()</code>，右侧就会出现一个提示框。如下图所示。</p>
<p><img src="http://123.207.243.115:81/content/images/2017/04/temp.png" alt></p>
<p>点击<code>Update an image</code>，我们就能从本地文件中选取一张图片上传上服务器，同时之前<code>![]()</code>中的括号中出现了一个相对路径，比如我的就是<code>/content/images/2017/04/temp.png</code>。</p>
<p><strong>注意，相对路径是不能在其他地方打开的，只能在本服务器才能打开</strong>。</p>
<p>但是<strong>我们的目的是将该图片用在其他</strong>，将本服务器作为图床。所以我们这是就需要<strong>右键单击右侧显示的图片</strong>，选择<strong><code>“复制图片地址”</code></strong>，然后将这个地址粘贴到其他地方，这样这张图片在其他地方也就能够正常显示啦。</p>
<p><em>本篇博客就是使用这个原理实现的图像显示。</em></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Ghost</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu下进行Socket编程</title>
    <url>/2017/05/19/Ubuntu%E4%B8%8B%E8%BF%9B%E8%A1%8CSocket%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/Michael753951/article/details/72553287" target="_blank" rel="noopener">http://blog.csdn.net/Michael753951/article/details/72553287</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/ubuntu-xia-jin-xing-socket-bian-cheng/">http://yaoyl.cn/ubuntu-xia-jin-xing-socket-bian-cheng/</a></p>
<hr>
<p>这是第一次进行网络编程，献给Ubuntu了。</p>
<p>由于需要结合OpenGL搭建的虚拟环境进行实验，为了将虚拟环境中的实验参数传送至另一台PC机协同工作。我们选择使用网络编程进行数据通行。本次博客先运行两个demo体会一下利用C++进行Socket编程。</p>
<h1 id="实验进行"><a href="#实验进行" class="headerlink" title="实验进行"></a>实验进行</h1><p>我们在本次实验中将运行两个demo，第一个demo用来进行文件传输，第二个demo用来进行窗口对话。</p>
<h2 id="demo1"><a href="#demo1" class="headerlink" title="demo1"></a>demo1</h2><p>本次demo采用TCP流，demo代码来自<a href="http://blog.csdn.net/lisonglisonglisong/article/details/22699675" target="_blank" rel="noopener">【 Linux网络编程：socket文件传输范例 】</a>。</p>
<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>我们打开codeblocks，建立两个项目(project)，新建的时候选择控制台(console)程序。第一个项目命名为“TCP_client”，第二个项目命名为“TCP_server”。然后将博客中的代码拷贝进main.cpp中，ctrl+F9进行编译。</p>
<p>注意，在这里当我们编译到 <code>close(new_server_socket_fd);</code> 的时候，编译器会报错 <code>error: ‘close’ was not declared in this scope</code>。如下图所示。</p>
<p><img src="http://img.blog.csdn.net/20170519192213021?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="tcp_server_error"></p>
<p>我参考CSDN中<a href="http://blog.csdn.net/lanyang123456/article/details/40631453" target="_blank" rel="noopener">【‘close’ was not declared in this scope 】</a>添加了unistd.h库头，编译成功。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>在TCP_server编译成功之后，我们开始编译TCP_client。同样在将客户端复制下来之后，我们首先添加unistd.h库头，接着我们直接编译。</p>
<p>首先是在编译到<code>if(inet_pton(AF_INET, &quot;127.0.0.1&quot;, &amp;server_addr.sin_addr) == 0)</code>的时候，编译器报<code>error: ‘inet_pton’ was not declared in this scope</code>错误如下图所示。</p>
<p><img src="http://img.blog.csdn.net/20170519192313323?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="tcp_client_error_1"></p>
<p>我参考了CSDN中<a href="http://blog.csdn.net/zdyueguanyun/article/details/51352453" target="_blank" rel="noopener">【‘inet_pton’ was not declared in this scope 】</a>添加了arpa/inet.h库头。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>再次编译的时候，依然遇到了报错。此时在编译到<code>close(fp);</code>的时候报错<code>error: invalid conversion from ‘FILE* {aka _IO_FILE*}’ to ‘int’ [-fpermissive]</code>。如下图所示。</p>
<p><img src="http://img.blog.csdn.net/20170519192340850?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="tcp_client_error_2"></p>
<p>我们发现本行代码中fp为文件指针，在C语言中，文件的打开和关闭应该是调用fopen和fclose，在打开文件部分，作者确实调用了fopen进行打开文件，但是在关闭的时候错用成了close，所以造成本次报错，我们将close换成fclose，就能够编译成功了。</p>
<h3 id="执行项目"><a href="#执行项目" class="headerlink" title="执行项目"></a>执行项目</h3><p>我们在两份项目都能够正确编译执行以后，将开始正式进行实验。</p>
<p>首先关闭当前IDE，因为在codeblocks中，不能在同一个进程中打开两个main函数。我们需要分别进入之前已经建立好的TCP_server项目所在的文件夹和TCP_client项目所在的文件夹，分别代开他们的cbp文件，打开两个codeblocks进程，这样就能够同时打开两个console窗口了。（如果不能同时打开的话，可以刹参考CSDN中<a href="http://blog.csdn.net/clever101/article/details/7299670" target="_blank" rel="noopener">【CodeBlocks启动多个进程实例的做法 】</a>的设置方法）</p>
<p>打开后server和client两个界面如图所示。</p>
<p><img src="http://img.blog.csdn.net/20170519192448497?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="运行示意图"></p>
<p>首先我们在server所在的文件夹中放置一个demo.jpeg文件作为源文件，然后我们可以发现此时client所在的文件夹中没有该文件。接着我们在TCP_client窗口中输入<code>demo.jpeg</code>。</p>
<p>我们发现执行成功之后，client所在的文件夹中多出来了一个demo.jpeg文件，打开它和server中的demo.jpeg进行对比，发现结果一致。</p>
<p><img src="http://img.blog.csdn.net/20170519192533186?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="运行完成"></p>
<p>故而我们认为本次demo运行没问题。</p>
<h2 id="demo2"><a href="#demo2" class="headerlink" title="demo2"></a>demo2</h2><p>第二份demo参考自<a href="http://www.cnblogs.com/xudong-bupt/archive/2013/12/29/3483059.html" target="_blank" rel="noopener">【Linux C Socket编程原理及简单实例】</a>。</p>
<p>本次代码能够直接编译运行，不会有报错信息，测试截图如下所示。</p>
<p><img src="http://img.blog.csdn.net/20170519192745477?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="demo2"></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本次demo作为Socket编程的入门测试以及环境测试，下一篇博客将对Socket编程进行深入的分析的总结。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>socket</tag>
        <tag>网络编程</tag>
        <tag>C语言</tag>
        <tag>异步通信</tag>
      </tags>
  </entry>
  <entry>
    <title>华为初面+综合面试（技术面）</title>
    <url>/2017/10/12/%E5%8D%8E%E4%B8%BA%E5%88%9D%E9%9D%A2+%E7%BB%BC%E5%90%88%E9%9D%A2%E8%AF%95%EF%BC%88%E6%8A%80%E6%9C%AF%E9%9D%A2%EF%BC%89/</url>
    <content><![CDATA[<p>华为面试整体流程大致分为<strong>笔试，性格测试，面试，综合面试</strong>，回学校等结果。笔试来说，华为的难度较中等，选择题难度和网易腾讯差不多。最后的代码题，相比下来就简单很多，一共3道题目，前2题很容易就AC，题目已经记不太清楚，不过难度确实不大。最后一题最后提交的代码过了75%的样例，一直没有发现剩下的25%可能存在什么坑。</p>
<p>笔试部分太久远，我就不怎么回忆了。直接将面试。</p>
<h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><p>如果说腾讯的面试是挥金如土（毕竟每个面试官都配了一件单独的房间），那华为就是戒奢宁俭。两个大会议厅坐满了面试官，其中一个是初面面试区，另一边是综合面试区。初面区的面试官会来等待区一个一个叫我们过去面试。</p>
<p>面试桌采取一对一的形式，技术岗的面试通知短信虽然没有通知说要带简历，但是仍然带了一份以免中途需要。（事实证明这是一个明智的选择）</p>
<h2 id="初面"><a href="#初面" class="headerlink" title="初面"></a>初面</h2><p>初面面试官点到我的名字之后，我跟着面试官去他的那个位置。</p>
<p>面试流程和大多数互联网公司流程差不多，首先让自己介绍一个比较满意的项目。（可能想通过这个项目了解我们的技能程度）在我面试准备时，其实我就纠结过这个问题。因为在我的项目中，有两个项目是我比较满意的，第一个主要做后台，第二个主要做虚拟环境和数据交互。</p>
<p>“我有两个项目是比较满意的”，我先抛出这句话，希望面试官能够给机会让我将两个项目都讲一下，“我先讲一下第一个我们当时做的换课平台，当时本来是一个课程项目，但是我们在这个课程项目之上，结合当时校内急需换课这个需求，做出了这么一个换课平台”,<strong>（首先提出项目目的）</strong>，“然后这个项目大概实现了一个怎样怎样的功能”<strong>（抛出产品功能）</strong>，“我在项目中主要负责后台开发和数据库交互功能”<strong>（说下在项目中的角色）</strong>，“整个项目的架构大致如下。。。。”<strong>（项目如何实现）</strong>，我拿着纸笔在草稿上给面试官画着后台所有的系统架构和数据流动方式，同时将涉及到的重要点的技术点都说了下。</p>
<p>按照之前整理过的描述流程，我将整个换课平台项目描述了一遍，中途偶尔面试官会问一下技术细节，不过都不是很难，可能因为我没有使用“SSH”三大框架，而是使用纯JSP进行的底层开发，所以面试官也不是太好提问。</p>
<p>不过有意思的是，在我介绍到项目中实现了实时聊天的时候，面试官提了两个小问题，是我之前项目中没碰到，而实际生产产品中可能遇到的问题：第一，我们的实时聊天是直接P2P，这样需要双方在同一子网下，那如果现在双方不在同一子网下，外网某个移动端客户A可以访问后台服务器B，这时候某个web端C同时也可以访问服务器，这个时候A和C是互相不同的，现在如果我们仍然想让他们通信怎么办；第二，考虑大量用户同时访问后台服务器的时候，该如何处理。</p>
<p>第一个我首先考虑到用服务器作为中介，但是当时老是想着可能打两个聊天信息会对服务器造成压力，所以一直很犹豫要不要用后台服务器作为中转，以及，作为中转该如何操作。不过面试官稍微提醒我可以用服务器作为中转，这时候我突然意识到只要服务器收到之后，立刻将消息转发出去就可以了，不用走数据库。这时候我也才一直到为什么我以前分析微信的聊天服务时，会将所有的文本消息和图片消息发送到微信的后台服务器，而且简单的直接P2P对话，主要还是为了克服网络问题</p>
<p>第二个不难，考虑云计算中的负载均衡，我大致说了下思路，选取一台主机作为负载均衡调度机，其他的作为工作机即可。</p>
<p>第一个项目大概讲了十分钟，不知道是因为刚开始面试还是我项目确实对面试官的胃口。</p>
<p>第一个项目完了以后，面试官翻了下我的简历，“你要不说下你另一个项目？”我有blabla说了一通。</p>
<p>“有什么难点？”“项目中遇到过哪些问题？”</p>
<p>说完之后，初面基本也就结束了，整个过程十分和谐（可能我遇到的面试官比较nice）。最后让我提一个问题，我大概问了下投递的这个岗位今后具体会是什么工作，面试官大致给我讲了下。（我投递的云计算开发岗，PaaS方向）</p>
<h2 id="综合面试"><a href="#综合面试" class="headerlink" title="综合面试"></a>综合面试</h2><p>初面完之后，面试官指引我去综合面试区等待综合面试。</p>
<p>综合面试整体感觉和初面差不多，不过在综合面试阶段面试官首先问了我的籍贯，工作意向和理想的工作地点。</p>
<p>这里我表示并不挑，因为作为一个外省人，自从一个人出省读书以后，就已经对在哪生活在哪上班没有太多顾虑。</p>
<p>接着面试官问了我一些成绩怎样，家庭情况之类问题之后，开始问我的项目经验。（虽然我不太明白，为什么综合面试还会问初面中问过的关于项目经验的问题）这里我就不在重复了，何处是一样，我大致和面试官交流了一下我们的项目内容。</p>
<p>这一块内容完成之后，感觉综合面试整个流程已经基本结束了，面试官开始跟我介绍他们项目组的工作地点（深圳），工作内容，以及平常的一些工作，同时还给我介绍了一些将来工作中需要了解的基本知识——比如docker容器，k8s，部分国内国外的公有云的运行原理，让我回去之后提前自学一下。（到这里我开始感觉有戏了）</p>
<p>其实，综面和初面差别其实没有太大，不过感觉这还是和面试官有关系，因为在我同行的队友中，他们有的就被问到了一些比较底层的知识点比如Java有什么特点之类，也有被问及面向对象的优点等等（这些我都没被问到）。</p>
<h1 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h1><p>总的来说，其实华为的面试并没有我想象中的困难（因为听说华为今年缩招，我还以为面试会故意很难）。<strong>简历准备很重要， 尤其是项目经历，个人blog，github这类容易加分的内容，最好能够写出来</strong>。两场面试相比较同伴更加顺利，有一定程度上就是简历给我加了分。</p>
<p>因为我面试的是云计算开发岗，所以我在项目中重新添加了很多Java相关的项目经历，虽然不是很重要，但是至少能让面试官从中了解我在Java方面有不少经验。</p>
<p>面试时候不用太紧张，在之前腾讯面试中我就明显很紧张，脑子一片发蒙，而这次华为面试就感觉稍微舒服很多，不知道是因为已经经历过几次面试，还是因为面试官带动的比较好。</p>
<p>最后还挺重要的要能够及时清楚地描述自己想说的内容。毕竟将来工作岗位中，少不了和同事的交流。另外清晰的描诉对面试官了解你，了解你的项目会很有帮助。因此，不论是在给面试官讲述自己项目的时候，还是在回答面试官问题，亦或是想表达自己观点的时候，都需要清晰的表达。如果一时语塞，可以尝试停顿一下，整理下思路然后重新描述，只要面试官能够理解你的话，一般有些停顿是不会有什么大碍。</p>
<p>最后的最后，希望能够收到华为的offer吧_(:зゝ∠)_目前正在“排队待录取”中。</p>
<hr>
<p><strong>更新：</strong> </p>
<ul>
<li>10月10号面试</li>
<li>10月17日收到进入资源池通知</li>
<li>10月24日收到offer短信，通知27日签约（估计是两方协议）。</li>
<li>27日签约，同时决定结束持续了6个月的备考生活，准备工作。</li>
</ul>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>校招</tag>
        <tag>华为</tag>
      </tags>
  </entry>
  <entry>
    <title>腾讯初试（技术面）</title>
    <url>/2017/10/11/%E8%85%BE%E8%AE%AF%E5%88%9D%E8%AF%95%EF%BC%88%E6%8A%80%E6%9C%AF%E9%9D%A2%EF%BC%89/</url>
    <content><![CDATA[<p>腾讯笔试因为比较久远，而且最后的代码题没有成功AC，所以已经记不太清楚。这里主要讲一下面试经历吧。</p>
<p>（听说鹅厂的简历关和笔试关都很松，几乎不卡人。这大概是我认为已经失败的情况下依然受到面试通知的原因吧。）</p>
<h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><p>鹅厂的初试其实还是比较面向学生的，可能考虑到在校生没有接触太多工程项目，一般都是简单问一下项目经历，然后开始问智力题和简单编程题。</p>
<p>面试之前我还是准备了挺久，看了不上网上关于腾讯面试的面经，看了很多以前的面试题，大致准备的内容如下吧。</p>
<p>[外链图片转存中…(img-ACk3dKWt-1595021180397)]</p>
<p>图片来自抱团面试小队。</p>
<p>然而在我面试的时候，上面问题全部没有问到。。。可能是我最后花费的时间太长，表现的不好，面试官对我兴趣不大。也有可能是不同面试官问的问题不一样（因为小队里，有人面试鹅厂的被问到了该图中某几个问题）。</p>
<h2 id="项目经历"><a href="#项目经历" class="headerlink" title="项目经历"></a>项目经历</h2><p>项目经历这一块，个人感觉其实还是很重要的。因为在面试官和你开始讲话之前，ta对你可以说没有一点了解，你擅长什么，你做过什么，你能做什么，你团队能力之类的怎样，这些都是需要通过你的项目经历来了解的。</p>
<p>因为我在以前网易实习面试中，吃过项目经历删减太多，导致最后面试官已经没问题可问的尴尬。这次面试中我将大三之后，不是很水的项目经历，比赛经历，实验室项目经历都写在了简历上。<strong>一共一页半</strong>（本来是两页，不过删掉了半页感觉太水的项目）。</p>
<p>到达酒店扫码签到之后，等待面试短信告知面试地点在哪（鹅厂还是挺壕的，一个面试官包了一个房间）。</p>
<p>上去首先递上自己的简历。面试官开始询问我的项目经历，我投的是后台开发岗位，所以讲的是大三下的时候，和3个小伙伴做的一个换课系统。我大致讲述了一下整个项目的创建目的，实现的功能（<strong>这部分我拿笔在草稿上将设备的部署，设备之间的连接以及通信方式全部画出来，以便解释说明，个人觉得这是个好习惯</strong>），以及在整个项目中的难点和个人承担的角色。</p>
<p>面试官一边听我讲诉，中途会偶尔插一两句话，比如某个功能是怎样实现，以及这个功能实现的时候是否有什么难点和在实现这个项目的时候担任了什么功能。不过总体不是很难。</p>
<p>不知道是因为面试官对我的项目兴趣不大，或者对我负责的这一块不是很了解。这一部分面试官问的比较少。</p>
<h2 id="智力题"><a href="#智力题" class="headerlink" title="智力题"></a>智力题</h2><p>接下来是智力题。是我很不擅长的数字推理题。题目我在后来找到了原题，大致如下：</p>
<blockquote>
<p>AB两男士女奇问C女士年龄，C女士将给出11个可能答案，35，36，38，42，45，46，51，55，57，61，62。</p>
</blockquote>
<blockquote>
<p>C女士将十位数告诉A，将个位数告诉B<br>A男士说，我不知道C女士年龄，我想B也不知道。<br>B男士说，原本我不知道C女士年龄，但现在知道了。<br>A男士说现在我也知道了</p>
</blockquote>
<blockquote>
<p>请问C女士年龄多少</p>
</blockquote>
<p>题目大致如此，我思考了一会，没有头绪，于是口头向面试官表示暂时可能解不出来，然后又大致讲了一下当前我已经思考到哪，以及我当前的推理逻辑。面试官听了一会，点了一下，然后开始让我做简单的代码实现题。</p>
<p>这时候我开始有点紧张了，因为担心这一关是不是没有发挥好，或者是否哪里有逻辑漏洞。</p>
<h2 id="简单代码题"><a href="#简单代码题" class="headerlink" title="简单代码题"></a>简单代码题</h2><p>题目确实很简单。</p>
<p>面试官从她的题库中挑选了两道题目，第一道题目是看代码让我描述这段代码的功能，以及生么样的输入会带来什么样的输出。感觉实在考验我们的代码阅读能力。整段代码不长，30行左右，大致功能是将一个long型十进制整数转成字符串，然后逐位取出，统计该位出现次数，如果为3就会有特定输出。就是一个简单的桶排思想，认真看懂的话不难。</p>
<p>第二道题是编程题，面试官让我实现一个功能函数，输入一个字符数组的头指针，让我实现一个功能函数将字符数组中的空格全部去掉。</p>
<p>很简单吧？然而我想复杂了。</p>
<p>太久没有写这种很基础的功能函数，加上有些紧张，我当时想的越来越复杂，以至于最后想出来的方法是<strong>开辟一个bool型的标志数组标识当前位是否为空格，然后重新开辟一个数组空间，将传入的字符串一个一个字符数组遍历一次，如果是空格就跳过，如果不是就取出来放进新的数组空间，最后free掉指针指向的以前的数组空间，重新指向当前开辟的新空间。</strong></p>
<p>其实这是一种舍近求远的想法，这种思路直接让本来码代码就不是很快的我写了差不多十分钟才写完（感觉面试官已经等的有点不耐烦），最后实现的代码量也是很冗长，同时其实最后还是有bug。函数中new的数组空间在返回后是会被del掉了（这部分栈空间被回收掉了），这样我们操作完成的数组其实已经不存在了，原始数组也不存在了。但是当时我想法太乱，明明知道会有这种问题，但还是硬着头皮写了。</p>
<p>写完面试官让我分析代码的时间复杂度和空间复杂度，然后问我还有什么问题想提问的，便让我回去等通知。</p>
<p>回来的路上，我和朋友一起回学校的时候，才想起来，明明去空格可以很简单的实现，<strong>只需将原数组中非空格的字符向前移动，直到遍历完成，然后手动添加\0结束</strong>就行了，只是我当时想的太复杂。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del_blank_space</span><span class="params">(<span class="keyword">char</span>* pStr)</span></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> *temp = pStr;</span><br><span class="line">	<span class="keyword">while</span>(*temp)&#123;</span><br><span class="line">		<span class="keyword">if</span>(*temp == <span class="string">' '</span>) &#123;++temp; <span class="keyword">continue</span>;&#125;</span><br><span class="line">		*pStr++ = *temp++;</span><br><span class="line">	&#125;</span><br><span class="line">	*pStr = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>就这么简单，然而我当时脑子蒙了。鹅厂面试也就只能草草收场。</p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>校招</tag>
        <tag>腾讯</tag>
      </tags>
  </entry>
  <entry>
    <title>网易复试（技术面）</title>
    <url>/2017/04/27/%E7%BD%91%E6%98%93%E5%A4%8D%E8%AF%95%EF%BC%88%E6%8A%80%E6%9C%AF%E9%9D%A2%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/70837240" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/70837240</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/wang_yi_fu_shi_ji_shu_mian/">http://yaoyl.cn/wang_yi_fu_shi_ji_shu_mian/</a></p>
<hr>
<blockquote>
<p>这篇博客还可以有个别称，网易复试被教做人。</p>
</blockquote>
<p>比较幸运的通过了初试。这周周三又去网易大厦参加了网易直播开发的复试面试。依然是技术面。</p>
<p>一开始收到复试短信的时候，心情其实还蛮激动的，毕竟人生第一次实习面试，来的还算比较顺利。</p>
<p>短信中没有提到要带简历，所以在收到通知后，我便以为这一次要问后台开发或者服务器相关的问题了。所以面试之前又临时补了一下网络编程（对，就是上次被问到的东西），然后又复习了一下排序+搜索，仔细看了<strong>《程序员面宝典》</strong>中面向对象以及继承与接口两个章节。</p>
<p>带着100次/秒的心跳来到网易大厦。整个人紧张的不行，上一次还看到两个本科生，这一次本科生都没看见，上一次还看到一个我们级的同学，这一次也没看见过来。周围全是学硕大佬，听着他们讲着听不懂的项目名词，我越来越忐忑。</p>
<h1 id="正式面试"><a href="#正式面试" class="headerlink" title="正式面试"></a>正式面试</h1><p>小姐姐给我打印了一张简历（因为我以为这一次不用带也就没带了），还是上次的小姐姐带我们去的面试小房间，房间里面依然还是两名面试官（和上一次不一样），不过两个人年龄差不多，不过不同的是，这一次两个人年龄都不大，30不到的样子。</p>
<p>面试官拿着我的简历，以及我的笔试试卷，开始看起来。</p>
<p>？？？竟然还是和初试一样的内容？？？</p>
<p>接着面试官开始从我简历中第一个项目开始，从上往下一个一个问（跳过了Hadoop）。询问过程很细致，感觉主要在考验我的表达能力和对编程的理解能力。同时每个项目还问了我详细的设计思路（和上一次面试差不多）。另外还会从这个项目开始挖掘你对一些基础知识的了解程度。</p>
<p>比如说在问我一个C++项目经验的时候，问了我使用了哪些特殊的东西（算法），大致上答完以后开始问我很基础的知识——C++中，如果两个头文件中有同名函数的时候，同时include这两个头文件会不会报错，以及会报何种错，如何解决这种错误。前两问问得我有点蒙，肯定会报错我知道，但是回报什么错我就不太知道了，每次编译都是看error信息，但是从没可以注意错误信息有哪些种类。我打的有点不好。</p>
<p>至于解决方案，根绝我以前的项目经验，我果断说出了曾经使用过的<code>ifndef</code>。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> XXX</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> XXX</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun3</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p>“<strong>不能使用ifndef</strong>”。“那就<strong>封装成类</strong>。”“也<strong>不能封装成类</strong>。”</p>
<p>我开始蒙了，这个问题的解决办法我从来没想过，一直以来，为了良好的封装性，避免不同包头之间<code>include</code>出问题，我都严格的控制函数名和变量名。但是怎么解决却没怎么注意过。</p>
<p>回来之后，饭局上问了下老师，加上自己在网上查阅了相关资料，我找到了第三种解决办法，那就是使用命名空间namespace解决，具体结局方案可以参考<a href="http://www.cnblogs.com/zhoug2020/p/5972439.html" target="_blank" rel="noopener">【C++命名空间 namespace的作用和使用解析】</a></p>
<p>回到面试上。</p>
<p>感觉简历太苍白，面试官看着我的简历似乎不太好。他继续往下提问，美赛的经历和算法设计过程。二维码图像识别中的实现方法和难点。</p>
<p>最后在我们之前一个多平台项目中又开始了基础知识的提问。http请求报文中，第一行内容是什么，我开始又犯蒙，先回答了一个肯定会有的<code>request</code>标识符。其他的还有什么，当时计网没要求记，我就跳过了，现在问起来，我有点犯难。想了半天我勉强想起来似乎有一个http版本。其它的又开始犯难了。</p>
<p>以前使用jsp的时候都是使用已经封装好的库头，现在突然问我这个，我就有点想不起来了。根据我上个星期学python的时候网络处理部分的东西，我开始艰难的回忆，最后猜了一个ip地址和端口号。其他的也没觉得有什么东西了。</p>
<p>然后面试官问了一个关于JavaXXX（一个没听过的名词，不是JavaScript）多线程的问题，我表示没听过这个名词之后，面试官也就停止提问了。</p>
<p>接着面试官问我为什么在外网中无法访问内网的网站。这一点我在前期准备过程中，LDNS看的比较多，所以顺口就说了出来。当然，这个答案可能存在一定问题，欢迎指正。</p>
<p>最后面试官问了我一些我的试卷上那些错题是怎么错的，错在哪。这些还好我在笔试那天回寝室之后和舍友讨论过，自己也到查过，所以基本上都能讲出来。</p>
<h1 id="面试总结"><a href="#面试总结" class="headerlink" title="面试总结"></a>面试总结</h1><p>感觉复试过程明显就没有初试的时候顺利了。面试过程磕磕绊绊，挺多东西不知道，加上自己本身紧张，所以答得并不好。</p>
<p>总结一下，在准备方面：</p>
<ul>
<li><strong>二面和一面内容上其实差不多，可能面试官也知道我们对相关岗位的知识并不是很熟，所以就不会问太深入的东西，基本上都是稍微试探一下，如果你不会也就停止了。</strong></li>
<li><strong>前期准备还是需要对着自己的简历准备，因为面试官还是会对着你的简历进行提问，而且二面明显感觉比一面更加重基础，反而不问任何算法知识。</strong></li>
<li><strong>心态还是很重要，紧张很容易导致自己犯下不该犯的错误。</strong></li>
<li><strong>面试官对你的了解仅仅只有那十几分钟，怎么在短短的十几分钟之内将自己的有点展示出来，需要在面试前做好比较好的准备，同事面试的时候，要适当的带面试官走。</strong></li>
</ul>
<p>最后，希望我还有机会写一个HR终面总结吧。</p>
<hr>
<p>更新，归咎于自己的技术底子是在不好，我还是没有成功闯过复试关。</p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>网易</tag>
      </tags>
  </entry>
  <entry>
    <title>网易初面（技术面）</title>
    <url>/2017/04/22/%E7%BD%91%E6%98%93%E5%88%9D%E9%9D%A2%EF%BC%88%E6%8A%80%E6%9C%AF%E9%9D%A2%EF%BC%89/</url>
    <content><![CDATA[<p>昨天我正在怼RFID第三次实验的圈存，消费和查询功能，丝毫没注意有短信，直到我出门准备拿快递查短信的时候才发现。。。</p>
<p>于是今天什么都没准备的去猪场（网易）面试，不过还好对面两个面试官人比较好，并没有怼我什么。</p>
<h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><p>上周四，网易在中大场的宣讲结束以后，便同时进行了一场笔试。<strong>笔试题目较难</strong>。题目<strong>满分一百分，前60分选择以及计算填空题，后40分编程</strong>。</p>
<h2 id="前60分"><a href="#前60分" class="headerlink" title="前60分"></a>前60分</h2><p>前面60分里面主要是<strong>理论算法题</strong>，还夹杂一些<strong>操作系统题目</strong>和<strong>计算机网络题目</strong>，以及部分<strong>和岗位有关的内容</strong>（比如我面试的是直播开发，试卷上就有问视频格式不包括下面中的哪一个），另外选择题里面<strong>少量数据库</strong>。</p>
<p>现在还记得的比如很经典的<strong>2017!的结构末尾有多少个0</strong>, <strong>7^2017%5结果为多少</strong>啊，<strong>第一趟快排结果</strong>怎样，<strong>堆排调整结果怎样</strong>，<strong>OS的内存置换算法</strong>，还有一些暂时想不起来的题目。</p>
<p>题目<strong>难度有点大</strong>，对<strong>基础的算法</strong>要求比较高，同时还要求被试者记得<strong>OS</strong>，<strong>计网</strong>知识等。如果以后有人打算去网易的话，遇到笔试前最好去<a href="https://www.nowcoder.com/" target="_blank" rel="noopener"><strong>牛客网</strong></a>刷一套或者几套网易的笔试题感受一下。笔试的时候才更加适应网易的套路，<strong>运气好的话还有可能遇到原题</strong>。（我遇到一个比较简单的原题，还有一个一起考试的碰到了移到算法计算题的原题）。</p>
<p>这部分答题过程中，我思路比较清楚。可能因为不少题目在以前上机测试或者其他算法书中遇到过，所以不是特别偏的算法还是会的（比如有一道三进制的题，当时怎么都不会，现在时间太久也忘了）。经常打算法的人应该完成难度不大。</p>
<h2 id="后40分"><a href="#后40分" class="headerlink" title="后40分"></a>后40分</h2><p>40分一共<strong>有两道手写编程题</strong>，<strong>第一题10分比较简单</strong>，<strong>第二题会难一点30分</strong>。</p>
<p>在这次考试中，第一题是<strong>求最大公因数和最小公倍数</strong>。第一题题目要求数据大小在1~2^32-1之间。这两个算法的实现我就不说了，因为已经算是算法入门级的代码了。但是很傻的是，我在计算最大公倍数时，return的结果只开到了undesigned int，这个估计会扣不少分。其实应该开到long long才能不溢出。</p>
<p>第二题，是一道<strong>0-1背包问题，DP可解</strong>。但是因为时间不够，加上笔试前没有准备关于DP和背包问题，所以空出来了。题目大概意思是，在线直播平台上有各种打赏，比如打赏1（分数100）、打赏2（200）、打赏3（300），每种打赏收费标准不一样。相当于背包问题中的物品。一个用户想给主播发礼品，怎样做才能既将手中的钱花完，主播收到的积分也能最多。（题目大致应该是这样的，时间有点久了，记不是很清楚。）</p>
<p>然后在面试过程中，我瞟到了我的试卷，前面60分拿了36。这个能理解，我在那天回寝室，回想题目的时候，就发想算法填空题里面，有几道题手算出错了。页面置换的题目里面，将LRU（Least Recently Used, 最近最久未使用，可以实际应用），错用成了OPT（Optimal，最佳置换，理论上的置换方法）。其他的错在哪就可能自己事后都没发现吧。</p>
<p><strong>编程只拿到了4分</strong>（还是6分？）。羞耻= =，全是在那一道10分题中拿到的，除了long long之外不知道其他分数扣在哪，有可能是因为我当时图快使用的是递归求解，效率赶不上迭代，也有可能是犯了其他某些错误。30分的DP一分没拿到，毕竟我一行代码都没写= =。只有一行注释说“背包问题，可以用DP求解”。</p>
<p>总的来说，当时笔试完自我感觉并不好。本来以为不会过，等了快一周还没收到短信，所以都已经准备放弃希望了。直到昨天翻快递短信的时候，看到了网易的短信通知，说我笔试过了，可以参加初面了。</p>
<h1 id="初面"><a href="#初面" class="headerlink" title="初面"></a>初面</h1><h2 id="裸面"><a href="#裸面" class="headerlink" title="裸面"></a>裸面</h2><p>初面来的猝不及防，没有一点点心理准备的我，在收到短信的当天都还在淡定撸RFID的课程项目代码。结果一下午都在debug，晚上10点才搞完。当时觉得，“完了完了，明天得裸面了”。</p>
<p>半夜看了一会<a href="http://chenbowen.baijia.baidu.com/article/472127" target="_blank" rel="noopener">直播相关的技术帖</a>，白天精力消耗太大，爬上床睡了。</p>
<p>第二天早上7点多就爬起来继续看了一会，毕竟自己以前没怎么学过这一块，就按照计网知识，再加上自己以前学图像处理时对音频的知识，勉强硬啃下来了。</p>
<p><strong>但是我忘记了，校招一般不会问太多和工作岗位相关的工作，他们往往问的比较基础。比如最经典的8排序3搜索，比如OOP的虚类，虚函数，继承之类的基础知识。尤其是我简历里面还说了我主力代码是C/C++，之后是Java。</strong></p>
<p>抱着裸面的心态去的网易大厦。今天的人还不少，不过脸熟的没多少，可能我们院（指我们软件工程（移动信息工程），而不是整个数据科学院啦）的人有的上午就面过了，或者没什么人投这边。整场面试下来就碰到一个认识的人。</p>
<p>进去之后人挺多了，我们在网易大厦一楼一个放映室等待，然后被一波一波叫出去等待面试。等不多一会，一个应该是HR的小姐姐带我们上了四楼（直播平台开发所在的楼层），十几个人在一个会议室等着被喊去面试。</p>
<p>全是中大人，我们这一波十几个人就仨本科生，其他都是研究生，我开始有点怂了。。。。那个时候，对面一个研二师姐说上次面试就是手写搜索算法，我才突然想到，我光看直播技术贴，排序搜索什么的都没看= =</p>
<p>临时用手机翻了一点关于排序和搜索的算法，看了一下时间复杂度，被叫去面试。</p>
<h2 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h2><p>面试环境还好，空间虽然小了点，但是因为是透明玻璃墙，所以也就没有显得拥挤，房间里面有<strong>两个面试官</strong>。年轻的面试官主要提问算法和其他工程上的问题，另一位大叔感觉像是HR或者主管之类的管理者。</p>
<p>首先是自我介绍啦，稍微讲一下自己的情况就好（我就讲了讲我来自哪，目前情况怎么样之类的，半分钟就没词了= =）。</p>
<p>之后试官首先问我兴趣点，因为这个岗位进去之后还是有很多方向，比如<strong>前端 ，服务器，移动端</strong>之类。我说的是服务器，一方面是因为自己确实对前段没什么兴趣，另一方面去年和今年项目做得多了，就越来越觉得服务器挺重要的，毕竟很多前端的动态处理，移动端的服务，都得靠服务器端进行处理。</p>
<p>接着面试开始问我的项目经验。年轻面试官从我的简历里面抽了大二时候做的用哈希表实现词典查询的项目进行提问。</p>
<p>一脸懵逼，两脸茫然，猝不及防。我以为会问我直播技术有哪些瓶颈，我以为会问我怎么降低网络延迟，我以为会问我直播使用什么协议，分别有哪些优缺点，我以为会问我云计算课程实现的利用MapReduce分布式项目，我以为。。。</p>
<p>然而，他竟然问我大二的项目= =</p>
<p>还好当时自己在那个项目上折腾了好几天，依稀记得使用<strong>Map方法+链表</strong>实现的查询功能。然后我开始<strong>在草稿上回忆项目思路，一边回忆一遍和面试官口述</strong>（虽然一开始有点紧张还回忆错了，面试官仔细听了以后，对我查询方式提了一点质疑，我才重新想起来当时的项目内容。）口述完自己当时的项目之后，考官问我对这个项目有什么<strong>改进的想法</strong>。</p>
<p>改进的想法？？？刚刚回忆完整个项目的我又开始陷入了沉思。我开始吧这个项目和这个岗位可能需要的地方开始考虑。</p>
<p>这个岗位不是应该对分布式要求对点么，那就分布式搜索？？<strong>没听说过，不能瞎说</strong>。自己唯一写过的分布式架构的也就<strong>MapReduce实现的线性回归</strong>，自己也暂时没想带怎么使用分布式进行搜索的方法。突然我想到，提问过程中，面试官似乎问过我<strong>处理的信息量</strong>，<strong>我那种实现方法需要将所有数据写进内存，很费空间，这一点似乎可以优化</strong>。于是我就根据操作系统里面内存的的<strong>多级检索</strong>，大致讲了一下在大量数据情况下，减少内存消耗的方法。</p>
<p>接下来面试官又从我项目经验中挑了一个二维码识别的项目。这个虽然是团队项目，但是前半部分我和队友一人一半，后半部分一人单挑，再加上是上个学期的项目，所以讲起来比较轻松。大致讲了一下自己当时实现的原理（直线在极坐标中的表示，点光源影响去除之类的）。</p>
<p>又谈了一点项目经验，面试官开始问我主要擅长的领域。</p>
<p>擅长的领域？？？又开始茫然，大学3年下来，基本都是按照课程项目走过来的，学的很散，也没有做过很成熟的项目。知识面有点广度，但是没有几个领域有深度，开始打算个人项目也是在上周四被网易理论试题打击以后，突然开始搞的。</p>
<p>那就<strong>算法</strong>吧，再加个<strong>计网</strong>。仔细想了想自己的两年半多，算法自己从大一下怼到大二下，一年半下来，<strong>比赛奖项也集中在算法比赛上</strong>，就提了下自己的比较擅长算法。然后又想到我们上学期我<strong>计网理论</strong>学的还行，实验课怼交换机也贡献了大部分力气。这两个合起来对我拿到这份offer会不会有帮助。</p>
<p>面试官开始问我关于<strong>网络编程的问题</strong>（当时的问题是，<strong>tcp编程的时候，什么时候会有time_ wait</strong>）。但是我没经历过网络编程啊，上个学期交换器和路由器的实验全部重在配置，在控制台输指令的那种。网络编程这一块我就没接触过啊，我就试探了一下说是不是在网络用塞的时候，因为听到这个变量我以为是TCP的连接超时。面试官否决了我的回答，我只能如实说自己没做过相关项目，面试官说了真确答案是断开连接的时候。（<strong>回来查了一下相关知识，time _wait确实是在TCP的四次挥手的时候用到的，拥塞控制是tcp _timestamps，</strong><a href="http://blog.csdn.net/qq100440110/article/details/52267708" target="_blank" rel="noopener"><strong>知识来源</strong></a>）</p>
<p>接着面试官开始问我<strong>算法题</strong>，比如<strong>堆排和快排的对比，两种算法的应用场景之类</strong>。我大致分析了一下快排的缺点是<strong>最坏情况时间复杂度</strong>是(On^2), 堆排整理需要(Onlgn)，但是忘记分析堆排和快拍的<strong>空间消耗</strong>（自己平时从来没注意过），<strong>是否乱序</strong>方面也忘记分析了（其实两者都会乱序）。终究还是自己平时项目做得少了，算法也看的少了。。。。</p>
<p>然后面试官问了我<strong>快排的实现方法</strong>，我在纸上大致说了一种刚刚在网上看到，回忆起来的教科书上的快排。这种方法对最后的标志位在一开始是不明确的。我看考官没怎么说话，就默默在纸上再说了一下整个整理过程。看完考官提问，没有标志位的么。我就又说了在大一的时候学的预先定位标志位进行快排整理的方法，考官这次就似乎比较满意。</p>
<p>再接着面试官问了一下<strong>STL中Map是用什么实现的</strong>。因为我第一个项目中，就是使用的标准STL Map，而不是自己实现。我答了<strong>红黑树</strong>，这个在很久以前某篇文章中看到过。</p>
<p>最后就是大叔面试官问，<strong>我还想说些什么</strong>。（大叔面试官全程比较少提问，感觉他应该是坐在主管位置，年轻的小哥面试官则应该是主要带项目什么的了）我大致说了一下<strong>自己在投简历和面试过程中对这个岗位产生的疑问，以及问了下我能够学到什么</strong>，基本面试也就结束了。</p>
<h2 id="面试总结"><a href="#面试总结" class="headerlink" title="面试总结"></a>面试总结</h2><p>总的来说，网易的<strong>笔试确实有难度，面试关反而没有那么难了</strong>，主要重在<strong>项目</strong>和你<strong>擅长的方向</strong>的了解。</p>
<p>在准备方面</p>
<ul>
<li><strong>我笔试40分都有机会拿到面试机会，如果有机会参加笔试机会的人可以有信心了。</strong></li>
<li><strong>简历上的项目一定要是你有参与或者主持或者独自完成的项目。混水的项目就不要写上去了，以免面试官问起来自己一脸茫然。</strong></li>
<li><strong>面试前最好准备一下基础的算法知识。因为自己面的是开发岗，所以对算法要求还是比较高的。基本的8大查找，3大搜索要知道。</strong></li>
<li><strong>网易的面试方面不会太难。提前对自己的项目做好整理，看一下自己的项目报告什么的帮助回忆，也就不会像我这样裸面，在面试的时候一边面试一边回忆了。</strong></li>
<li><strong>有些问题还是流程化的，比如对这个工作有什么期待，自我评价（本次面试没有提到），自我介绍什么的。在准备前都好好准备下。</strong></li>
<li><strong>网易技术岗的技术面一共有两轮。我目前只经历了第一轮，希望有机会能够接触到第二轮（并不知道会问什么内容），以及最终的HR面。</strong></li>
<li><strong>面试官不会很严，技术面也不会压力面试什么的，面试环节还是比较轻松的，不用紧张。</strong></li>
</ul>
<p><strong><em>最后，希望我还有机会写一个二面以及终面总结吧。</em></strong></p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>网易</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义注解并且进行扫描解析</title>
    <url>/2020/06/05/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E5%B9%B6%E4%B8%94%E8%BF%9B%E8%A1%8C%E6%89%AB%E6%8F%8F%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="注解背景"><a href="#注解背景" class="headerlink" title="注解背景"></a>注解背景</h1><p>首先我们要知道背景知识：</p>
<ol>
<li>每一个注解其实就是一个特殊的接口(带着@符号，其实是语法糖，会被编译器自动编译成继承自Annotation接口)。我们反编译一下class文件就能看出来。</li>
<li>注解只是一个标记位，标记了某一个类，某一个字段或者某一个函数之后，我们就可以对被标记的属性进行我们期望的行为——比如运行时动态获取和修改被标记的属性，动态执行被标记的函数等等</li>
<li>基于第二点，我们在定义了自己的注解之后，还要定义自己注解的解析类，这样我们才能真正让注解发挥起作用（只标记而不做任何动作就和没标记没任何区别了）</li>
</ol>
<h1 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h1><p>废话不说上我自己定义的代码，然后一个一个说明。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springtest.demo.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Fruit &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">enum</span> FruitType &#123;</span><br><span class="line">        APPLE, PEACH, PEAR, WATERMELON</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">FruitType <span class="title">type</span><span class="params">()</span> <span class="keyword">default</span> FruitType.APPLE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springtest.demo.entity.fruit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.annotation.Fruit;</span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.annotation.Scope;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Scope</span>(Scope.SCOPE_PROTOTYPE)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pear</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Fruit</span>(value = <span class="string">"pear"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Fruit</span>(type = Fruit.FruitType.PEAR)</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.springtest.demo.entity.fruit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.annotation.Fruit;</span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.annotation.Scope;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Scope</span>(Scope.SCOPE_PROTOTYPE)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Apple</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Fruit</span>(value = <span class="string">"apple"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Fruit</span>(type = Fruit.FruitType.APPLE)</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上就是我做的最简单的demo，定义并应用了一个注解。我们来看看Fruit注解反编译的结果是什么就能大概知道这故事背后的作用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Fruit</span></span></span><br><span class="line"><span class="class">    <span class="keyword">extends</span> <span class="title">Annotation</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitType</span> <span class="keyword">extends</span> <span class="title">Enum</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> FruitType APPLE;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> FruitType PEACH;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> FruitType PEAR;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> FruitType WATERMELON;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> FruitType $VALUES[];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> FruitType[] values()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> (FruitType[])$VALUES.clone();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> FruitType <span class="title">valueOf</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (FruitType)Enum.valueOf(com/springtest/demo/annotation/Fruit$FruitType, name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> </span><br><span class="line">        &#123;</span><br><span class="line">            APPLE = <span class="keyword">new</span> FruitType(<span class="string">"APPLE"</span>, <span class="number">0</span>);</span><br><span class="line">            PEACH = <span class="keyword">new</span> FruitType(<span class="string">"PEACH"</span>, <span class="number">1</span>);</span><br><span class="line">            PEAR = <span class="keyword">new</span> FruitType(<span class="string">"PEAR"</span>, <span class="number">2</span>);</span><br><span class="line">            WATERMELON = <span class="keyword">new</span> FruitType(<span class="string">"WATERMELON"</span>, <span class="number">3</span>);</span><br><span class="line">            $VALUES = (<span class="keyword">new</span> FruitType[] &#123;</span><br><span class="line">                APPLE, PEACH, PEAR, WATERMELON</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">FruitType</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(s, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">name</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> FruitType <span class="title">type</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看代码我们发现所谓注解的本质还是很简单的其实就是一个继承了Annotation的接口，然后内部定义了一些默认的抽象类而已。</p>
<h2 id="Retention注解"><a href="#Retention注解" class="headerlink" title="Retention注解"></a>Retention注解</h2><p>由于因为我们知道其实一个注解本质上就只是一个标记，这个标记要怎么使用，什么时候使用是我们的编译器和jvm决定的，也就意味着一个注解通常会有一个目的，或者我们叫<strong>作用域</strong>。通常分为三类：</p>
<ol>
<li>仅在编码时生效 @RetentionPolicy .SOURCE</li>
<li>仅在编译时生效 @RetentionPolicy .CLASS</li>
<li>仅在运行时生效 @RetentionPolicy .RUNTIME</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Target</span>(ElementType.ANNOTATION_TYPE)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Retention &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns the retention policy.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the retention policy</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">RetentionPolicy <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Annotation retention policy.  The constants of this enumerated type</span></span><br><span class="line"><span class="comment"> * describe the various policies for retaining annotations.  They are used</span></span><br><span class="line"><span class="comment"> * in conjunction with the &#123;<span class="doctag">@link</span> Retention&#125; meta-annotation type to specify</span></span><br><span class="line"><span class="comment"> * how long annotations are to be retained.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>  Joshua Bloch</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> RetentionPolicy &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Annotations are to be discarded by the compiler.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SOURCE,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Annotations are to be recorded in the class file by the compiler</span></span><br><span class="line"><span class="comment">     * but need not be retained by the VM at run time.  This is the default</span></span><br><span class="line"><span class="comment">     * behavior.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CLASS,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Annotations are to be recorded in the class file by the compiler and</span></span><br><span class="line"><span class="comment">     * retained by the VM at run time, so they may be read reflectively.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> java.lang.reflect.AnnotatedElement</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RUNTIME</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Target-注解"><a href="#Target-注解" class="headerlink" title="Target 注解"></a>Target 注解</h2><p>同时由于我们的注解是可能被写在各种地方的，因此我们需要定义我们这个参数的作用域。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Target</span>(ElementType.ANNOTATION_TYPE)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Target &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns an array of the kinds of elements an annotation type</span></span><br><span class="line"><span class="comment">     * can be applied to.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> an array of the kinds of elements an annotation type</span></span><br><span class="line"><span class="comment">     * can be applied to</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ElementType[] value();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> ElementType &#123;</span><br><span class="line">    <span class="comment">/** Class, interface (including annotation type), or enum declaration */</span></span><br><span class="line">    TYPE,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Field declaration (includes enum constants) */</span></span><br><span class="line">    FIELD,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Method declaration */</span></span><br><span class="line">    METHOD,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Formal parameter declaration */</span></span><br><span class="line">    PARAMETER,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Constructor declaration */</span></span><br><span class="line">    CONSTRUCTOR,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Local variable declaration */</span></span><br><span class="line">    LOCAL_VARIABLE,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Annotation type declaration */</span></span><br><span class="line">    ANNOTATION_TYPE,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Package declaration */</span></span><br><span class="line">    PACKAGE,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Type parameter declaration</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    TYPE_PARAMETER,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Use of a type</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    TYPE_USE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Documented注解"><a href="#Documented注解" class="headerlink" title="Documented注解"></a>Documented注解</h2><p>最后就是一个是否需要被Javadoc记录的标记位@Documented。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>基于遇上三点，也就是为什么我们常见的注解，头上都会有这三个标记的原因。因此，我们再手动实现另一个注解，可以再理解一下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springtest.demo.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.FIELD, ElementType.TYPE&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Scope &#123;</span><br><span class="line">    String SCOPE_SINGLETON = <span class="string">"singleton"</span>;</span><br><span class="line"></span><br><span class="line">    String SCOPE_PROTOTYPE = <span class="string">"prototype"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认是单例</span></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> Scope.SCOPE_SINGLETON</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看看上面这个注解，是不是很眼熟？~~</p>
<p>没错，就是我们在Spring中常用的<code>@Scope</code>注解的照搬版~试试分析看这个注解是怎么表达的。</p>
<p>接下来开始进行注解的解析，这里因为我们直接定义成运行时，所以可以在运行中通过类的反射机制，找到我们这个注解对应的作用域，如果被我们注解了，并且注解内的条件达到了，我们就对这个作用域内的对象进行某些我们想要的操作就行了。下面附上我的源代码以及编译器编译后的class的反编译结果。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springtest.demo.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.springtest.demo.config.YunyaoBeanPostProcessor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注解驱动</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Scope</span>(Scope.SCOPE_PROTOTYPE)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitInfoUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getFruitInfo</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        String strFruitName = <span class="string">" 水果名称："</span>;</span><br><span class="line"></span><br><span class="line">        Field[] fields = obj.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.isAnnotationPresent(Fruit.class)) &#123;</span><br><span class="line">                Fruit fruit = field.getAnnotation(Fruit.class);</span><br><span class="line">                strFruitName = strFruitName + fruit.value() + fruit.type().name();</span><br><span class="line">                System.out.println(strFruitName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注：同一个对象，被实力出多个不同value的单例时，PostConstruct只会被执行一次</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postConstruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"PostConstruct被执行..."</span> + <span class="keyword">this</span>.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getFruitInfo</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    String strFruitName = <span class="string">" \u6C34\u679C\u540D\u79F0\uFF1A"</span>;</span><br><span class="line">    Field fields[] = obj.getClass().getDeclaredFields();</span><br><span class="line">    Field afield[] = fields;</span><br><span class="line">    <span class="keyword">int</span> i = afield.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Field field = afield[j];</span><br><span class="line">        <span class="keyword">if</span>(field.isAnnotationPresent(com/springtest/demo/annotation/Fruit))</span><br><span class="line">        &#123;</span><br><span class="line">            Fruit fruit = (Fruit)field.getAnnotation(com/springtest/demo/annotation/Fruit);</span><br><span class="line">            strFruitName = (<span class="keyword">new</span> StringBuilder()).append(strFruitName).append(fruit.value()).append(fruit.type().name()).toString();</span><br><span class="line">            System.out.println(strFruitName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postConstruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    System.out.println((<span class="keyword">new</span> StringBuilder()).append(<span class="string">"PostConstruct\u88AB\u6267\u884C..."</span>).append(getClass().getName()).toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>其实说到最后，注解真的很容易，而且很简单易用，只要我们搞清楚：</p>
<ol>
<li>注解的本质是什么  – 本质上注解就是一个JDK提供给我们的标记位，我们需要自己定义这个标记会会在什么条件下触发什么动作</li>
<li>基于第一点，我们甚至可以自己定义执行函数，来对其他三方组件或者JDK提供的注解进行自定义补充解析。</li>
<li>基于第二点，我们就可以知道，注解的灵魂不在注解本身，而在于谁来解析这个注解（所谓一千个…）</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>注解</tag>
        <tag>注解扫描</tag>
      </tags>
  </entry>
  <entry>
    <title>囚笼</title>
    <url>/2017/04/14/%E5%9B%9A%E7%AC%BC/</url>
    <content><![CDATA[<blockquote>
<p>一个病人除了说他自己病了以外，还能说什么呢？——<em>塞·约翰逊</em></p>
</blockquote>
<h2 id="现在正在看这篇推送的你对艾滋病了解多少？"><a href="#现在正在看这篇推送的你对艾滋病了解多少？" class="headerlink" title="现在正在看这篇推送的你对艾滋病了解多少？"></a>现在正在看这篇推送的你对艾滋病了解多少？</h2><ul>
<li>你可能知道艾滋病是由HIV病毒引起的；</li>
<li>你可能知道HIV病毒传播途径主要包括血液传播、性传播和母婴传播，此外还有可能通过尿液、泪液等其他体液传播（但是飞沫、握手等日常行为并不会传播）；</li>
<li>你可能知道HIV在人体内的潜伏期平均为8～9年，一旦爆发就是临床上表现的艾滋病；</li>
<li>你可能知道艾滋病爆发会破坏病人的免疫系统，造成病人的免疫系统紊乱，使病人极易受到各种感染或者罹患癌症；</li>
<li>你还可能知道一个良好的心态和健康的锻炼对艾滋病的治疗会有所帮助。</li>
</ul>
<p>可是你知道的内容大概也就仅限于此了。</p>
<h2 id="初访艾滋"><a href="#初访艾滋" class="headerlink" title="初访艾滋"></a>初访艾滋</h2><p>出发的高铁上，我刷着VICE的 [ <a href="http://mp.weixin.qq.com/s/OtB0-GGbB2wqk_F_AGxOyA" target="_blank" rel="noopener">我们问了几个艾滋携带者，愿意这辈子只吃饺子皮还是感染 HIV？</a> ]，想着待会该怎么说话，想着可以拿到几个公益时，想着还能不能赶回来拿快递，想着今天的晚餐。</p>
<p>一切似乎就像在广州地下来来往往的地铁一样，按部就班。</p>
<h2 id="笼"><a href="#笼" class="headerlink" title="笼"></a>笼</h2><p>沉寂。</p>
<p>所有人都带着口罩。</p>
<p>病人躺在病床上，没有呻吟。电子屏规律的跳动，没有一点干扰。家属在病人旁边或削水果，或枕着床沿休息，或在走廊外的小板凳上想些什么。护工在走廊上自顾地擦着玻璃。</p>
<p>一切似乎都很安静，安静中夹杂着一丝灰色。</p>
<p>第一个病房，拥挤，稍显杂乱。三个病人躺在里面。</p>
<p>突然进入的我们5个人，几乎占据了病房剩余空间的一半。</p>
<p>介绍完此行的目的猴，我开始试着和靠在门口的病人进行交流。</p>
<p>这是我第一次访问重症病人，我没察觉他旁边起伏的呼吸机显示着他已经很虚弱，甚至当我们刚开始对话时我都没察觉他说话已经颇为费力。</p>
<p>他很瘦，露在被单的小腿已经不像我们那般结实，嶙峋的胸膛贴着呼吸机的某种贴片，眼看体重不会超过100斤。</p>
<p>他用一支空闲的手轻轻的笔画，配合着几乎已经模糊的吐字介绍着他现在正在进行的治疗。</p>
<p>我突然反应过来他现在并不适合说话。和另一名同行队员将手中的水果放在床头柜，送上祈愿，退出走廊和他的弟弟开始了对话。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">“他原来有170斤。”</span><br><span class="line"></span><br><span class="line">病人的家属指了指床上的哥哥。“病发后一直瘦，就</span><br><span class="line">变成了现在这个样子。”</span><br><span class="line"></span><br><span class="line">“我们也只有平时多安抚他啊，要对活下去有希望</span><br><span class="line">啊。但是他本身（求生）欲望其实不高。”家属看</span><br><span class="line">了看走廊中部某个病房，“两天前刚从那间病房拉</span><br><span class="line">走一个人。”</span><br></pre></td></tr></table></figure>

<p>平淡的语气，似乎已经司空见惯。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">“不管情况怎么糟，总要对生存下去抱有希望啊，”</span><br><span class="line">我开始根据我仅知道的一点艾滋病知识安慰他，</span><br><span class="line">“艾滋病只要能够好好控制，按时吃药，拥有一个良</span><br><span class="line">好的心态，其实生活和正常人差不多。你平时给他多</span><br><span class="line">打气，多带他出去走走，对他的治疗会有好处的。”</span><br><span class="line"></span><br><span class="line">“他现在已经基本走不动了。其实很久以前他就查出</span><br><span class="line">来了身上有异常。去医院好不容易压（制）下来，医</span><br><span class="line">生告诫他，不能停药，病才能控制得住。但是回去没</span><br><span class="line">几天他还是自己停了，”家属看着病床上的哥哥，小</span><br><span class="line">声说，“但是其实药是可以免费领的。前两年还挺正</span><br><span class="line">常的。但是后面他慢慢的发现老是咳嗽，偏偏他自己</span><br><span class="line">又喜欢拖着，等到严重了才去大医院检查。结果透析</span><br><span class="line">的时候发现，病灶转移了。肺里面有一团絮状阴影，</span><br><span class="line">真菌感染的。”</span><br></pre></td></tr></table></figure>

<p>我突然语塞，不知道该怎么继续安抚家人，因为我发现我既无法站在一个旁观者的角度说“要保持一个良好的心态接受治疗”，也无法冷静的说“如果他当时及时吃药，是不会有这样的境况的”。</p>
<p>一个只能靠呼吸机维生的人，浑身痛楚的人，怎么谈心态良好。</p>
<p>一个消瘦至此、离不开床的人，怎么能后悔“如果当初”。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">但是还是得给家属鼓气，至少树立点信心还是好的，</span><br><span class="line">我想。</span><br><span class="line"></span><br><span class="line">“家人还是多劝导他，艾滋虽然可怕，但是好好疗养，</span><br><span class="line">能够过上正常的生活就好了。”</span><br><span class="line"></span><br><span class="line">“其实糖尿病也是很惨的”。我开始比惨，“糖尿病也</span><br><span class="line">是终生没法治疗，只能保守治疗。糖尿病平常也是要</span><br><span class="line">控制饮食加上不停吃药。如果碰上其他并发症，血管</span><br><span class="line">病变之类了，也是很痛苦的。”</span><br><span class="line"></span><br><span class="line">“不不不，艾滋可怕多了。艾滋（HIV病毒）潜伏周期</span><br><span class="line">长，10年都可以和没事人一样。这段时间你要是发现</span><br><span class="line">了，提早预防，提早控制，说不定还能一辈子不爆发</span><br><span class="line">（艾滋病）。但是你如果没发现，还一点不照顾自己</span><br><span class="line">身体，有一点毛病就开药打针，你的免疫力下降了，</span><br><span class="line">提前爆发都有可能。一旦发病，就要格外小心，你的</span><br><span class="line">免疫力那么差，万一不小心交叉感染就很容易出事</span><br><span class="line">了……”</span><br></pre></td></tr></table></figure>

<p>终于，病房中一直捂着头的大爷打断了我们对这个病房的探视，他有点不耐烦的比划着让我们离开。</p>
<p>大概是我们打扰了他的休息，或者是空气被我们搅动的有些浑浊让他不舒服，亦或是担心我们带来什么传染源。</p>
<p>我们当然不敢多问，离开后开始继续往后探访。</p>
<p>……</p>
<p>整个楼层差不多10间病房，大部分是中年或者老年人。</p>
<p>只碰到一个和我们年纪相仿的年轻人。不过他听完我们的介绍，便静静地拿着手机翻了个身，背朝着我们，面朝自己母亲。</p>
<p>我们自然很识趣的不去“打扰”他。</p>
<p>我们在这层楼呆了差不多3个小时。基本没见过病人走出病房走动，那些看上去还挺健康，能起身走动的人被悬在床上的吊瓶束缚着不能到处走动。</p>
<p>唯独有一个老大爷。</p>
<p>大爷其实还挺精神的，虽然头发已经开始稀疏，但是胜在黑多白少，清澈的眼眸总透着一股睿智。他扶着板凳走出病房，吹着徐凤，闭目养神。有一个队友看见他出来以后便走向他，我也慢步跟了上去。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">“我80了。”</span><br></pre></td></tr></table></figure>

<p>老爷子在凳子上给我们讲述他年轻时候的故事。</p>
<p>从大学毕业开始，到被分配至广州，再到在广州扎根，以及现在两个儿子还有孙子已经彻底融入广州的故事。</p>
<p>很平淡，但是老人说的津津有味。</p>
<p>……</p>
<p>6点，我们这一支队伍探访完毕，等着另一只队伍结束一起返校。</p>
<p>一个大叔提着一个板凳，走到楼梯拐角，试探性的问我们——“你们是中山大学的？”。</p>
<p>这个我们在进入病房前就已经说过了。</p>
<p>很明显，他是在有话想跟我们说，只是故意用那这句话作为开场白。</p>
<p>我们队伍两名女生走了过去。</p>
<p>不多时，那边传来了啜泣声——是那位中年大叔的。</p>
<p>我在楼梯口让队伍另一名女生递了一份餐巾纸过去——我知道我对安抚人这种事情并不擅长。</p>
<p>然而，大叔的哭声在那之后愈发嚎啕。</p>
<p><strong>他哭的像个孩子。</strong></p>
<p>差不多7点，女生们才安抚完大叔。我们开始准备启程返校。</p>
<p>路上我从另一名女生口中知道了事情的缘由。</p>
<p>大叔只有两周时间筹集手术费用，原本是通过轻松筹筹款的。但是大叔家住农村，担心因为自己的事情影响了家人在其他人眼中的形象，他停掉了轻松筹上的筹款。</p>
<p>他想通过抵押房产贷款手续费，但是房产证还没过户，银行办不了。想走法律程序拿到房产证，但是时间已经由不得他。</p>
<p>另外家人现在对他的态度也不是很好，不是很支持他。</p>
<p>他很无助，想从我们队伍中寻求帮助。</p>
<h2 id="囚"><a href="#囚" class="headerlink" title="囚"></a>囚</h2><p>晚上在寝室，我和一个学医的朋友谈到这次行程。</p>
<p><strong>谈着谈着，我开始感觉艾滋病患者们生活在一个囚笼中。</strong></p>
<center>**舆论**</center>

<p>不光之前那个向我们哭诉的大叔。现在几乎没有人敢坦诚自己是艾滋病患者（HIV携带者）。</p>
<p>有的人担心舆论会影响自己的正常利益受损——工作受阻，或者在公众场合受到歧视等<br>也有人担心舆论会影响自己的名声——社会上普遍认为艾滋病患者不是当年风流落下的，就认为他吸毒</p>
<p><strong>舆论之下，他们宁愿躲在囚牢的阴影里。</strong></p>
<center>**治疗**</center>

<p>探访中，我和一名能够自由起身吃饭的患者闲聊，“多走动走动呗，有利于身体健康，也有利于治疗”。</p>
<p>这句话我在无数宣传册上看到过，想必应该不会有问题。</p>
<p>病人无奈的笑笑，“我基本一天吊水就有十几个小时，哪有什么机会出去走动。”</p>
<p>“而且外面空气太乱了，不小心就有可能交叉感染。”她的妻子扒了一口饭，补充到。</p>
<p>能将这一切看开的大抵也就只有那位80岁的老大爷了。</p>
<p><strong>大多数患者经历着长时间的治疗，再者担心自己一不小心被感染，只能在牢笼中过着提心吊胆的日子。</strong></p>
<center>**未知**</center>

<p>集中式的病房一定程度上减少了交叉感染的概率，也让医院的管理更加高效。</p>
<p>但是这也造就了这里压抑的氛围。</p>
<p>在这里的病人，睡觉之前不知道自己能不能看见第二天的太阳，也不知道下一个被“狱卒”带走的是谁，甚至都不知道自己肉体和精神还能在这种环境中撑到什么时候。</p>
<p><strong>囚笼外面，狱卒始终在徘徊。</strong></p>
<center>**社会**</center>

<p>目前社会上依然处于谈艾色变的环境。</p>
<p>广大普通人对艾滋的了解还是有不足。人们对待艾滋病患者（甚至HIV携带者）依旧处于一种排斥的态度。</p>
<p>这也就造成了艾滋病患者（以及HIV携带者）对自我在社会定位中的不足。他们自己将自己的画作“其他人”，害怕遭受周围人的歧视。患者从心理上被画牢“囚禁”起来。</p>
<p>艾滋面临的不仅仅是身体上的问题，其实更包含心理上的问题。</p>
<p><strong>无形的囚笼笼罩了他们，笼内的人渴望自由。</strong></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>这次探访其实挺沉重的。</p>
<p>我抱着蹭公益时的心出发，回程却再无心顾念公益时。脑子里反复旋转的是今天见到的一张张面孔。</p>
<p>我曾因伤住院，那一个星期憋在病房就已经差点逼疯我，不敢想艾滋病病人们要在病房中熬过被囚禁的日日夜夜。</p>
<p>我们的艾滋病的知识普及度正在不断扩展，关于艾滋病的讲座也在不断开展。但是想要打破这个囚笼依然有很长一段路要走。</p>
<p>我们在和病人的实际接触中，发现尽管我们对患者抱有希望，但是患者对自身却常处于一种放弃的态度。<strong>尽我们所能为他们重拾希望</strong>，想必就是我们此行最大的意义了吧。</p>
<p>最后，希望有一天HIV等病毒能够想天牛病毒一样，在这个世界上消失吧。</p>
<h2 id="再说点什么"><a href="#再说点什么" class="headerlink" title="再说点什么"></a>再说点什么</h2><p>对于艾滋，依旧有很多人是恐惧的。但是它的传播途径始终有限，正常人和艾滋病患者接触过程中的正常接触是不会出问题的。在探访过程中，我也是<strong>披长衣长裤戴口罩</strong>的，避免有自己不注意的伤口暴露在空气中。</p>
<p>另外，也挺庆幸自己进大学之后每年有献血这个习惯的。毕竟像我这么懒的人，每年能够进行一次严格的，免费的血检能给我免去很多麻烦。</p>
<p>最后的最后，希望认识的或者不认识的，健康的或者正在和病魔斗争的你们，好好照顾自己的身体。</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟驾驶环境搭建(三)</title>
    <url>/2017/07/13/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%B8%89)/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/75073755" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/75073755</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/huan-jing-da-jian-san/">http://yaoyl.cn/huan-jing-da-jian-san/</a></p>
<hr>
<h1 id="移动场景的环境搭建"><a href="#移动场景的环境搭建" class="headerlink" title="移动场景的环境搭建"></a>移动场景的环境搭建</h1><p>需要移动的场景主要集中在公路,草坪,楼房和障碍物.下面我将逐一实现它们的移动.</p>
<h2 id="公路以及草坪的移动"><a href="#公路以及草坪的移动" class="headerlink" title="公路以及草坪的移动"></a>公路以及草坪的移动</h2><p>公路的移动较为简单,还记得我们在第一节中那个run_len变量么,在这里我们将使用它进行操作,已达到移动的效果.代码如下:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 开始进行场景移动 */</span></span><br><span class="line">go_ahead_rate += go_ahead_ac;</span><br><span class="line"><span class="comment">/*  防止速度过快 */</span></span><br><span class="line"><span class="keyword">if</span>(go_ahead_rate &gt;= run_len_max) go_ahead_rate = run_len_max;</span><br><span class="line"><span class="keyword">if</span>(go_ahead_rate &lt;= run_len_min) go_ahead_rate = run_len_min;</span><br><span class="line">run_len += go_ahead_rate;</span><br><span class="line"><span class="comment">// 小孩的速度恒定</span></span><br><span class="line"><span class="comment">//child_run_len += 0.1f;</span></span><br><span class="line"><span class="keyword">if</span>(run_len &gt;= <span class="number">4.0f</span>)&#123;</span><br><span class="line">    run_len = <span class="number">0.0f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中go_ahead_rate是一个步进长度,go_ahead_ac是步进加速度,用来模拟车辆的加速减速过程,以免车辆的加减速太过突然而失真.run_len_max用来限制车速的上下界.最后的if判断是为了当车辆运行到一块道路的边界的时候,将run_len归0模拟到达一块新的道路上继续行驶,这样能通过比较少的资源达到比较仿真的驾驶环境.</p>
<p>到了这里,草地和楼房便能够正常的开始进行步进操作了.我们接下来开始移动楼房.</p>
<h2 id="楼房的移动"><a href="#楼房的移动" class="headerlink" title="楼房的移动"></a>楼房的移动</h2><p>楼房的移动相比较场景的一动就就没有那么简单了.因为我们在第一节已经简单分析过,道路和草地的出现都是重复的,恒定的.而楼栋的出现是随机的,恒定的.</p>
<h3 id="使用run-len进行前进控制"><a href="#使用run-len进行前进控制" class="headerlink" title="使用run_len进行前进控制"></a>使用run_len进行前进控制</h3><p>道路和草地的移动中我们可以使用run_len在0.0~4.0之间不停的变换,所以道路和草地的真正移动距离是不会操作4.0的,而我们在设计场景的时候,又是使用12*12的方块填满的,为了让楼栋能够跨过这12个方块完成移动,我们就需要想一些特殊的办法.</p>
<p>为了简化场景建设,我们让视野内,每栋楼占据的设计面积和道路的方块一致,因此道路单侧最多也只能有12栋楼层,举个例子,就算左侧楼栋不停的出现的话,最多也只能出现12栋楼,再出现新的楼栋的时候,距离自己最近的楼栋也会消失在自己的视野,使用这种方法能够比较简单的同时控制道路和楼栋的运动,即使用len_run进行控制,让他们保持同样的速度运动.</p>
<p>好了我们已经设计成使用len_run对楼栋进行控制了,但是我们又知道run_len在0.0~4.0之间不停的变换,这也就意味着,如果我们没有进行什么特定操作,那么楼栋在移动一段距离(4.0)之后,又会回到起点(0.0)重新移动,这种画风并不是我们需要的结果,因此需要对其进行一定的控制.</p>
<h3 id="添加标志让楼栋完成移动"><a href="#添加标志让楼栋完成移动" class="headerlink" title="添加标志让楼栋完成移动"></a>添加标志让楼栋完成移动</h3><p>前一步骤中我们已经完成了楼栋简单的移动,但是楼栋并不能够跨过一个格子的长度.为了实现跨过格子的操作,我们需要添加一些标志位,用来记录当前这栋楼栋运行到了第几格,同时,每当run_len到达4.0,进行归0操作的时候,将标志位进行更新,让所有楼栋的的起点移动到下一个格子,这样当run_len增长的时候,就是从新的起点开始运动的,我们视觉上就会觉得,这栋楼没有间断的不停的向前走.</p>
<p>这种格子移动操作和我们的位运算极其相似,因此我们可以使用一个int的后12位作为标志位,来标识楼栋的位置信息.这样能够让屏幕中同时显示多栋楼层,而且能够让所有楼层同时运动,并且不会显得很突兀.</p>
<p>下面展示部分代码,首先是绘制楼栋的代码:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 绘制右边的楼栋</span></span><br><span class="line">glBindTexture(GL_TEXTURE_2D, texture[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">int</span> right_temp = building_right_flag;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">12</span>; ++i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(right_temp &amp; <span class="number">0b1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        glLoadIdentity();</span><br><span class="line">        glTranslatef(<span class="number">2.0</span>,<span class="number">-1.0f</span>, ((<span class="number">12</span>-i)*<span class="number">-4.0f</span>)+run_len); <span class="comment">// 移动绘点</span></span><br><span class="line">        glCallList(building2);</span><br><span class="line">    &#125;</span><br><span class="line">    right_temp &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后对场景移动代码稍作修改,让楼栋移动一格.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 开始进行场景移动 */</span></span><br><span class="line">go_ahead_rate += go_ahead_ac;</span><br><span class="line"><span class="comment">/*  防止速度过快 */</span></span><br><span class="line"><span class="keyword">if</span>(go_ahead_rate &gt;= run_len_max) go_ahead_rate = run_len_max;</span><br><span class="line"><span class="keyword">if</span>(go_ahead_rate &lt;= run_len_min) go_ahead_rate = run_len_min;</span><br><span class="line">run_len += go_ahead_rate;</span><br><span class="line"><span class="comment">// 小孩的速度恒定</span></span><br><span class="line"><span class="comment">//child_run_len += 0.1f;</span></span><br><span class="line"><span class="keyword">if</span>(run_len &gt;= <span class="number">4.0f</span>)&#123;</span><br><span class="line">    run_len = <span class="number">0.0f</span>;</span><br><span class="line">    <span class="comment">// 提取12位</span></span><br><span class="line">    building_left_flag = (building_left_flag&lt;&lt;<span class="number">1</span>) &amp; <span class="number">0b111111111111</span>;</span><br><span class="line">    building_right_flag = (building_right_flag&lt;&lt;<span class="number">1</span>) &amp; <span class="number">0b111111111111</span>;</span><br><span class="line">    <span class="keyword">int</span> rand_temp = rand();</span><br><span class="line">    <span class="comment">// 左边有一定概率出现一栋楼房</span></span><br><span class="line">    <span class="keyword">if</span>(rand_temp%<span class="number">4</span> == <span class="number">0</span>) building_left_flag |= <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 右边同样有一定概率出现一栋楼房</span></span><br><span class="line">    <span class="keyword">if</span>(rand_temp &gt;&gt; <span class="number">2</span> &amp; <span class="number">1</span>) building_right_flag |= <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//child_run_len = -3.0f;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="障碍物的移动"><a href="#障碍物的移动" class="headerlink" title="障碍物的移动"></a>障碍物的移动</h2><p>障碍物的移动相比起来就很简单了,直接放代码:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 绘制障碍物</span></span><br><span class="line"><span class="keyword">int</span> left_temp = building_left_flag;</span><br><span class="line"><span class="keyword">if</span>(left_temp &gt;&gt; <span class="number">11</span> &amp; <span class="number">0b1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">    time(&amp;appear);</span><br><span class="line">    <span class="keyword">if</span>(appear - appear_tmp &gt;= <span class="number">5</span>)&#123;</span><br><span class="line">        appear_tmp = appear;</span><br><span class="line">        bdw_appear = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(bdw_appear) &#123;</span><br><span class="line">        <span class="comment">// 同时控制左边的障碍物</span></span><br><span class="line">        <span class="comment">//printf("debug\n");</span></span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">        glLoadIdentity();</span><br><span class="line">        glTranslatef(child_run_len, <span class="number">-1.0f</span>, <span class="number">-7.0f</span>);</span><br><span class="line">        glCallList(children);</span><br><span class="line">        <span class="keyword">if</span>(child_run_len &gt;= <span class="number">-0.5</span>) &#123;</span><br><span class="line">            child_run_len = <span class="number">-3.0f</span>;</span><br><span class="line">            bdw_appear = <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 障碍物的速度恒定</span></span><br><span class="line">            child_run_len += <span class="number">0.1f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>基本上到这里的时候,整个代码已经能够正常的运行起来,我们坐在一辆虚拟的车上不断的前进,偶尔会闪出一个障碍物挡在路中间.</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>OpenGL</tag>
        <tag>虚拟驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔(2020.07.18)</title>
    <url>/2020/07/18/%E9%9A%8F%E7%AC%94(2020.07.18)/</url>
    <content><![CDATA[<h2 id="近况"><a href="#近况" class="headerlink" title="近况"></a>近况</h2><p>已经很久没有时间好好整理一下个人的知识经验总结，加上事业的压力和个人状态调整问题，让自己一直兜兜转转在工作和会议中。</p>
<p>前段时间两年一次的压力测试结果显示我工作压力从入职的4提升到了现在的16，加之上上周照彩超发现后颈长了一小块脂肪瘤（良性观察半年），心理和身体上的预警对我这种天性比较闲散、不喜欢给自己压力、又喜欢瞎吃零食的人来说，想来不是什么好事。</p>
<p>昨晚趁着稍微闲下来，折腾了半夜把自己的小角落修修补补，重新打扫装修一下，也算磕磕绊绊重新开张了（ps，下次更新这种杂谈类的文章，不知道又要多久之后了）。</p>
<h2 id="后继计划"><a href="#后继计划" class="headerlink" title="后继计划"></a>后继计划</h2><p>工作量方面要开始释放压力出去，过去一年周边同事一直在流失，新入职同事能力也没有补齐，导致一个人承担了刚入职的时候2-3个人的工作量，超负荷运转让身体每况愈下。</p>
<p>接下来很长一段时间的都准备投资自己，看看理财和软件相关的书籍，没事读读源代码，多陪陪女票，少打游戏少氪金。</p>
<p>毕业那年自己的三年之约还有一年，这里再给自己立个小小的flag——苟过接下来几年国际形势变化~~</p>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>这几天因为疫情的影响，女票准备了几个月的新疆计划泡汤了。十月之前尽量把手头的工作搞完，十一陪她再出去走走，算补偿一下对她的亏欠。</p>
<p>– 2020.07.18 于松山湖畔 by WriterP</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟驾驶环境搭建(四)</title>
    <url>/2017/07/13/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E5%9B%9B)/</url>
    <content><![CDATA[<p>龙云尧个人博客，转载请注明出处。</p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/75074051" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/75074051</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/huan-jing-da-jian-si-2/">http://yaoyl.cn/huan-jing-da-jian-si-2/</a></p>
<hr>
<h1 id="障碍物移动的改进"><a href="#障碍物移动的改进" class="headerlink" title="障碍物移动的改进"></a>障碍物移动的改进</h1><p>在之前的版本中.我们的障碍物移动和场景移动放在同一个for循环中,虽然减少了代码的操作,但是很容易出现边界问题,程序运行中往往会出现障碍物骤现,或者障碍物还未抵达车前方便突然消失的情况,为了修改这出bug,我将重写这部分代码.</p>
<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>无脑写代码的多数结果都是bug不断,并且写完后文就忘记前文.为了提高代码的清晰度和准确性,挺尸帮我们捋清思路,我们先通过写伪代码的方式整理一下我们的程序有哪些需求,以及粗略的实现方式.</p>
<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>障碍物能够从左侧楼栋出现,到达路中央之后,将停留一小段时间(等待车撞上).</p>
<p>对这个过程进行分解分析,我们可以大致得到如下流程: </p>
<ul>
<li>障碍物出现的时机: 左侧有障碍物 &amp; 距离上次消失已经有10s以上</li>
<li>障碍静止时机: 已经达到路中间, 并且停留时间没有达到2s</li>
<li>障碍物消失诗句时机: 停留2s之后,障碍物消失</li>
</ul>
<h3 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h3><ul>
<li>首先判断障碍物是否已经消失,然后判断左侧是否有障碍物,然后检查消失时间是否已经达到10s,如果满足条件,就更新appear标志, 让障碍物开始移动</li>
<li>开始步进障碍物, 直到达到边界, 此时更新appear_tmp, 更新appear标志, 记录下当前时间</li>
<li>如果当前状态为静止, 并且停留时间还未到达2s,保持pos不变</li>
<li>否则如果停留时间超过2s,就将appear更新为消失, 让障碍物消失, 同时用appear_tmp记录下消失的时间, 方便之后判断障碍物的出现时机</li>
</ul>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先获取左侧建筑情况</span></span><br><span class="line"><span class="keyword">int</span> left_temp = building_left_flag;</span><br><span class="line"><span class="comment">// bdw_appear有3个值, 0表示已经消失, 1表示正在进行移动, 2表示移动到边界,已经静止</span></span><br><span class="line"><span class="keyword">if</span>(bdw_appear == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(left_temp &gt;&gt; <span class="number">11</span> &amp; <span class="number">0b1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        time(&amp;appear);</span><br><span class="line">        <span class="comment">// 如果距离上次出现已经5s,就更新记录,同时更新flag</span></span><br><span class="line">        <span class="keyword">if</span>(appear - appear_tmp &gt;= <span class="number">5</span>)&#123;</span><br><span class="line">            appear_tmp = appear;</span><br><span class="line">            bdw_appear = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bdw_appear == <span class="number">1</span>)&#123;</span><br><span class="line">    glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">    glLoadIdentity();</span><br><span class="line">    glTranslatef(child_run_len, <span class="number">-1.0f</span>, <span class="number">-7.0f</span>);</span><br><span class="line">    glCallList(children);</span><br><span class="line">    <span class="keyword">if</span>(child_run_len &gt;= <span class="number">-0.5</span>) &#123;</span><br><span class="line">        <span class="comment">//child_run_len = -3.0f;</span></span><br><span class="line">        <span class="comment">//bdw_appear = false;</span></span><br><span class="line">        <span class="comment">// 刚移动到边界</span></span><br><span class="line">        <span class="keyword">if</span>(bdw_appear == <span class="number">1</span>)&#123;</span><br><span class="line">            time(&amp;appear_tmp);</span><br><span class="line">            child_pos = <span class="number">-7.0f</span>;</span><br><span class="line">            bdw_appear = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        child_run_len = <span class="number">-0.5f</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 小孩的速度恒定</span></span><br><span class="line">        child_run_len += <span class="number">0.1f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    time(&amp;appear);</span><br><span class="line">    <span class="comment">// 如果距离上次出现已经5s,就更新记录,同时更新flag</span></span><br><span class="line">    <span class="keyword">if</span>(appear - appear_tmp &gt;= <span class="number">2</span>)&#123;</span><br><span class="line">        appear_tmp = appear;</span><br><span class="line">        child_run_len = <span class="number">-3.0f</span>;</span><br><span class="line">        bdw_appear = <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">        glLoadIdentity();</span><br><span class="line">        <span class="comment">// 障碍物的pos还要加上run_len, 这样能够让障碍物在达到路中央静止之后, 和周围物体一起移动,产生向人靠近的感觉</span></span><br><span class="line">        glTranslatef(child_run_len, <span class="number">-1.0f</span>, child_pos+run_len);</span><br><span class="line">        glCallList(children);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="实现障碍物从两侧随机出现"><a href="#实现障碍物从两侧随机出现" class="headerlink" title="实现障碍物从两侧随机出现"></a>实现障碍物从两侧随机出现</h1><p>为了和真实驾驶更加相似,我们不应该让障碍物只从单侧出现,而是因该让其两侧都有可能出现.因此,我们需要在原来的代码上进行进一步的修改.</p>
<h2 id="需求分析-1"><a href="#需求分析-1" class="headerlink" title="需求分析"></a>需求分析</h2><h3 id="需求-1"><a href="#需求-1" class="headerlink" title="需求"></a>需求</h3><p>首先我们暂时让不倒翁的出现有两种情况, 情况一, 从左侧出现, 情况二, 从两侧随机出现. 通过按键’c’来控制模式的转换(改变appear_mode的值).</p>
<p>因此, 当我们按下’c’键时, 需要对模式进行转换. 接下来在DrawGLScene中将根据appear_mode的值进行一系列操作. 如果appear_mode为默认的0, 就让障碍物从左侧出现, 如果appear_mode为1, 就让障碍物从两侧出现. </p>
<p>如果障碍物从两侧出现的话, 每次障碍物<em>将要出现</em>的时候, 我们需要用一个flag标志保存障碍物本次出现是从左侧出现还是右侧出现. 在绘制障碍物的时候, 我们将通过这个flag来判断物体是如何运动.</p>
<ul>
<li>障碍物出现的时机: 本身已经消失, 距离上次消失已经有10s以上, 决定好从哪一侧出现, 并且该侧有楼栋</li>
<li>障碍物移动的时机: 本身已经出现, 根据上一步已经得到的flag判定是向左还是向右, 直到到临界点</li>
<li>障碍物静止的时机: 已经达到路中间,并且停留时间并未超过2s</li>
<li>障碍物消失的时机: 已经静止超过2s</li>
</ul>
<h3 id="伪代码-1"><a href="#伪代码-1" class="headerlink" title="伪代码"></a>伪代码</h3><ul>
<li>首先我们需要在KeyPressed函数中, 添加按键’c’的控制事件, 另其对appear_mode进行修改.</li>
<li>接下来在DrawGLScene中, 我们将对这个appear_mode进行判断. 如果appear_mode为0,就按照之前的代码执行. 如果appear_mode为1, 则进入两侧出现事件.</li>
<li>当appear_mode为1时, 如果当前状态为消失, 如果当前已经消失10s以上, 则随机决定在哪应该出现障碍物, 然后检查该侧是否有楼栋, 如果有楼栋, 则保存裁决位置(左或者右), 同时更新当前状态为移动</li>
<li>当appear_mode为1时, 当前状态为移动时, 根据裁决, 如果裁决决定从左侧出来, 则起点设置为左侧, 同时,不断增加child_run_len,直到到达边界; 如果裁决决定从右侧出来, 则起点设置为1.0f位置, 同时不断减小, 直到到达-0.5f位置停止.</li>
<li>停止时, 将appear_mode设置为2, 记录开始时间, 在原地停留两秒之后, 消失.</li>
</ul>
<h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> left_temp = building_left_flag;</span><br><span class="line"><span class="keyword">int</span> right_temp = building_right_flag;</span><br><span class="line"><span class="keyword">if</span>(appear_mode == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// bdw_appear有3个值, 0表示已经消失, 1表示正在进行移动, 2表示移动到边界,已经静止</span></span><br><span class="line">    <span class="keyword">if</span>(bdw_appear == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(left_temp &gt;&gt; <span class="number">11</span> &amp; <span class="number">0b1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            time(&amp;appear);</span><br><span class="line">            <span class="comment">// 如果距离上次出现已经5s,就更新记录,同时更新flag</span></span><br><span class="line">            <span class="keyword">if</span>(appear - appear_tmp &gt;= <span class="number">5</span>) &#123;</span><br><span class="line">                appear_tmp = appear;</span><br><span class="line">                bdw_appear = <span class="number">1</span>;</span><br><span class="line">                child_run_len = <span class="number">-3.0f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(bdw_appear == <span class="number">1</span>) &#123;</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">        glLoadIdentity();</span><br><span class="line">        glTranslatef(child_run_len, <span class="number">-1.0f</span>, <span class="number">-7.0f</span>);</span><br><span class="line">        glCallList(children);</span><br><span class="line">        <span class="keyword">if</span>(child_run_len &gt;= <span class="number">-0.5</span>) &#123;</span><br><span class="line">            <span class="comment">//child_run_len = -3.0f;</span></span><br><span class="line">            <span class="comment">//bdw_appear = false;</span></span><br><span class="line">            <span class="comment">// 刚移动到边界</span></span><br><span class="line">            <span class="keyword">if</span>(bdw_appear == <span class="number">1</span>) &#123;</span><br><span class="line">                time(&amp;appear_tmp);</span><br><span class="line">                child_pos = <span class="number">-7.0f</span>;</span><br><span class="line">                bdw_appear = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            child_run_len = <span class="number">-0.5f</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 小孩的速度恒定</span></span><br><span class="line">            child_run_len += <span class="number">0.1f</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        time(&amp;appear);</span><br><span class="line">        <span class="comment">// 如果距离上次出现已经5s,就更新记录,同时更新flag</span></span><br><span class="line">        <span class="keyword">if</span>(appear - appear_tmp &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">            appear_tmp = appear;</span><br><span class="line">            child_run_len = <span class="number">-3.0f</span>;</span><br><span class="line">            bdw_appear = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">            glLoadIdentity();</span><br><span class="line">            glTranslatef(child_run_len, <span class="number">-1.0f</span>, child_pos+run_len);</span><br><span class="line">            glCallList(children);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(appear_mode == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(bdw_appear == <span class="number">0</span>) &#123;</span><br><span class="line">        time(&amp;appear);</span><br><span class="line">        <span class="keyword">if</span>(appear - appear_tmp &gt;= <span class="number">5</span>)&#123;</span><br><span class="line">            <span class="comment">// 奇数为左侧, 偶数为右侧</span></span><br><span class="line">            <span class="keyword">if</span>(rand() &amp; <span class="number">0b1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(left_temp &gt;&gt; <span class="number">11</span> &amp; <span class="number">0b1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                    time(&amp;appear);</span><br><span class="line">                    appear_tmp = appear;</span><br><span class="line">                    bdw_appear = <span class="number">1</span>;</span><br><span class="line">                    left_or_right_flag = <span class="number">1</span>;</span><br><span class="line">                    child_run_len = <span class="number">-3.0f</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(right_temp &gt;&gt; <span class="number">11</span> &amp; <span class="number">0b1</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                    time(&amp;appear);</span><br><span class="line">                    appear_tmp = appear;</span><br><span class="line">                    bdw_appear = <span class="number">1</span>;</span><br><span class="line">                    left_or_right_flag = <span class="number">0</span>;</span><br><span class="line">                    child_run_len = <span class="number">1.0f</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(bdw_appear == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(left_or_right_flag == <span class="number">1</span>)&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">            glLoadIdentity();</span><br><span class="line">            glTranslatef(child_run_len, <span class="number">-1.0f</span>, <span class="number">-7.0f</span>);</span><br><span class="line">            glCallList(children);</span><br><span class="line">            <span class="keyword">if</span>(child_run_len &gt;= <span class="number">-0.5</span>) &#123;</span><br><span class="line">                <span class="comment">//child_run_len = -3.0f;</span></span><br><span class="line">                <span class="comment">//bdw_appear = false;</span></span><br><span class="line">                <span class="comment">// 刚移动到边界</span></span><br><span class="line">                <span class="keyword">if</span>(bdw_appear == <span class="number">1</span>) &#123;</span><br><span class="line">                    time(&amp;appear_tmp);</span><br><span class="line">                    child_pos = <span class="number">-7.0f</span>;</span><br><span class="line">                    bdw_appear = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                child_run_len = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 小孩的速度恒定</span></span><br><span class="line">                child_run_len += <span class="number">0.1f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">            glLoadIdentity();</span><br><span class="line">            glTranslatef(child_run_len, <span class="number">-1.0f</span>, <span class="number">-7.0f</span>);</span><br><span class="line">            glCallList(children);</span><br><span class="line">            <span class="keyword">if</span>(child_run_len &lt;= <span class="number">-0.5f</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(bdw_appear == <span class="number">1</span>) &#123;</span><br><span class="line">                    time(&amp;appear_tmp);</span><br><span class="line">                    child_pos = <span class="number">-7.0f</span>;</span><br><span class="line">                    bdw_appear = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                child_run_len -= <span class="number">0.1f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        time(&amp;appear);</span><br><span class="line">        <span class="comment">// 如果距离上次出现已经5s,就更新记录,同时更新flag</span></span><br><span class="line">        <span class="keyword">if</span>(appear - appear_tmp &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">            appear_tmp = appear;</span><br><span class="line">            child_run_len = <span class="number">-3.0f</span>;</span><br><span class="line">            bdw_appear = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, texture[<span class="number">4</span>]);</span><br><span class="line">            glLoadIdentity();</span><br><span class="line">            glTranslatef(child_run_len, <span class="number">-1.0f</span>, child_pos+run_len);</span><br><span class="line">            glCallList(children);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>OpenGL</tag>
        <tag>虚拟驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟驾驶环境搭建(二)</title>
    <url>/2017/07/13/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(%E4%BA%8C)/</url>
    <content><![CDATA[<p>龙云尧个人博客，转载请注明出处。</p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/75073580" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/75073580</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/huan-jing-da-jian-er/">http://yaoyl.cn/huan-jing-da-jian-er/</a></p>
<hr>
<h1 id="基本素材和环境的准备"><a href="#基本素材和环境的准备" class="headerlink" title="基本素材和环境的准备"></a>基本素材和环境的准备</h1><h2 id="显示列表"><a href="#显示列表" class="headerlink" title="显示列表"></a>显示列表</h2><h3 id="基本准备"><a href="#基本准备" class="headerlink" title="基本准备"></a>基本准备</h3><p>显示列表部分的内容请先阅读&lt;nehe学习笔记(九)&gt;的”显示列表”部分.这里我就不再对代码进行一一解读了.</p>
<p>为了适应本次实验的需求,我们需要对boxcol数组进行适当修改,将原本的正方体模型数组转修改长方体,其中,顶点的绘制准则在&lt;nehe学习笔记(八)&gt;中有绘图进行描述.</p>
<h3 id="BuildList函数填充"><a href="#BuildList函数填充" class="headerlink" title="BuildList函数填充"></a>BuildList函数填充</h3><p>根据&lt;nehe学习笔记(九)&gt;中的内容,我们可以很清楚的知道显示列表的构建规则,本部分不多赘述.</p>
<p>为了模拟一个比较真实的驾驶环境,我们需要绘制一条公路,公路两边需要有草坪以免过于空旷,需要有楼房以让障碍物的出现不会很突兀.最后,因为需要突然出现一个障碍物,所以我们需要准备一个障碍物.</p>
<p>这些内容将在BuildList这个函数中完成,最终显示列表的表头存放在load中.渲染的时候,需要很很严谨的控制每个坐标点的位置,绘制完成之后最好能够显示出来以方便debug.</p>
<h3 id="载入纹理"><a href="#载入纹理" class="headerlink" title="载入纹理"></a>载入纹理</h3><p>在LoadGLTextures函数中,我们实现了载入图片的操作.值得注意的是,在选择纹理的滤波方式的时候,我们需要选择临近滤波<em>GL_NEAREST</em>.否则会在渲染道路的时候,出现图片边界过于突兀,影响实验效果的情况.</p>
<p>举个例子,在加载道路的纹理时,代码如下:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST); <span class="comment">// scale cheaply when image bigger than texture</span></span><br><span class="line">glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST); <span class="comment">// scale cheaply when image smalled than texture</span></span><br><span class="line">gluBuild2DMipmaps(GL_TEXTURE_2D, <span class="number">3</span>, image1-&gt;sizeX, image1-&gt;sizeY, GL_RGB, GL_UNSIGNED_BYTE, image1-&gt;data);</span><br></pre></td></tr></table></figure>

<p>到这里基本的素材准备就已经结束了,在DrawGLScene函数中进行合理设置,我们就能够预览整个实验环境了.</p>
<h2 id="基础环境绘制"><a href="#基础环境绘制" class="headerlink" title="基础环境绘制"></a>基础环境绘制</h2><h3 id="公路以及草地绘制"><a href="#公路以及草地绘制" class="headerlink" title="公路以及草地绘制"></a>公路以及草地绘制</h3><p>为了模拟比较正常的驾驶环境,我们需要搭建一条公路,公路两侧的草地,并将楼栋放置在公路两侧.</p>
<p>首先是绘制公路和草地.我们首选需要绘制整整条公路,使用一个for循环,向屏幕深处绘制12块道路贴图,这样能够尽可能让道路有无尽的感觉,同时,远方出现新的道路的时候,不会显得很突兀.你可以增加层数,比如将12增加至15甚至20,用来描绘更加真实的场景.</p>
<p>接下来,我们需要在公路两侧进行扩展,经过测试,我发现绘制一个12*12个单位的草坪纹理时,场景看上去便已经较为正常,在下一步运动的时候便已经不会很突兀,当然,你也可以根据你自己的需要提高场景的草坪纹理数.</p>
<p>公路和草地的绘制代码如下所示.run_len是在场景运动时需要用到的变量,这里你可以认为它的值为0.0.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 绘制公路</span></span><br><span class="line">glBindTexture(GL_TEXTURE_2D, texture[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">12</span>; ++i)&#123;</span><br><span class="line">    glLoadIdentity();</span><br><span class="line">    glTranslatef(<span class="number">-3.0f</span>,<span class="number">-1.0f</span>, (i+<span class="number">1</span>)*(<span class="number">-4.0f</span>)+run_len); <span class="comment">// 移动绘点</span></span><br><span class="line">    glCallList(road);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 绘制草地</span></span><br><span class="line">glBindTexture(GL_TEXTURE_2D, texture[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">12</span>; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;<span class="number">12</span>; ++j) &#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">7</span>) <span class="keyword">continue</span>; <span class="comment">// 此部分已经绘制了公路,使用continue而非让公路覆盖这一块草地是因为需要防止使用透视渲染时,画面异常,方便将来的扩展.</span></span><br><span class="line">        glLoadIdentity();</span><br><span class="line">        glTranslatef(<span class="number">-4.0f</span>*(j<span class="number">-6</span>)+<span class="number">1</span>,<span class="number">-1.0f</span>, (i+<span class="number">1</span>)*(<span class="number">-4.0f</span>)+run_len); <span class="comment">// 移动绘点</span></span><br><span class="line">        glCallList(road); <span class="comment">// 草地和道路使用同一套模型,只不过纹理不同而已.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="楼栋绘制"><a href="#楼栋绘制" class="headerlink" title="楼栋绘制"></a>楼栋绘制</h3><p>因为楼栋的绘制并不像草坪和公路那样是固定出现的物体,漏洞的出现具有一定的随机性,就像我们一处陌生的道路路上行驶的时候,并不知道什么时候会出现一栋楼.</p>
<p>为了简单的检查楼栋是否能够正确的绘制,我们可以先使用将绘笔移动到固定位置的方法,然后调用glCallList即可.</p>
<p>如何让楼栋移动起来,我们将在后续完成.</p>
<p>到这里,基本的环境搭建就已经完成了,接下来我们将开始运动场景搭建.</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>OpenGL</tag>
        <tag>虚拟驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟驾驶环境搭建（一）</title>
    <url>/2017/07/13/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p><strong>龙云尧个人博客，转载请注明出处。</strong></p>
<p>CSDN地址：<a href="http://blog.csdn.net/michael753951/article/details/75073333" target="_blank" rel="noopener">http://blog.csdn.net/michael753951/article/details/75073333</a></p>
<p>个人blog地址：<a href="http://yaoyl.cn/huan_jing_da_jian_yi/">http://yaoyl.cn/huan_jing_da_jian_yi/</a></p>
<hr>
<h1 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h1><p>本篇博客将对整个虚拟环境的搭建进行一个综述,后续将会对环境中各个功能的实现进行一一解释分析.</p>
<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>整个pro实现了模仿一辆车在街道上进行奔驰的场景(目前实现的是在直道上行驶,后续会加入转弯功能).项目的运行效果如图所示.</p>
<p><img src="http://img.blog.csdn.net/20170713161253561?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="驾驶状态"></p>
<h1 id="简单描述"><a href="#简单描述" class="headerlink" title="简单描述"></a>简单描述</h1><p>为了实现上述功能,我将整个项目大致分为如下几块.</p>
<ul>
<li>基本素材和环境的准备</li>
<li>草地环境的搭建</li>
<li>两侧楼房的搭建</li>
<li>实现前进动作</li>
<li>完成障碍物的出现动作</li>
<li>其他系统优化</li>
</ul>
<p>其中,本次项目是基于OpenGL学习(十)的项目代码进行的修改扩充,库头文件依然一致.</p>
<p>纹理渲染等方式和以前如出一辙.为了提高渲染速度,我使用纹理列表将图片在程序编译的时候提前进行传渲染,以达到最快的渲染速度,提高程序时间控制的稳定性.</p>
<p>事物移动方式和以前一致,通过在DrawGLScene中绘笔的起点位置,来实现物体的移动.</p>
<p>后续章节我将进行详细的解释说明.</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>OpenGL</tag>
        <tag>虚拟驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu下使用CodeBlocks进行多线程编程</title>
    <url>/2018/02/19/Ubuntu%E4%B8%8B%E4%BD%BF%E7%94%A8CodeBlocks%E8%BF%9B%E8%A1%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<p>因为项目开发需要, 我要在Ubuntu中使用多线程编程进行,以便能够在不影响主线程的情况下, 读写虚拟环境中的相关数据.</p>
<p><strong>强烈建议先阅读<a href="https://www.cnblogs.com/52why/p/7629285.html" target="_blank" rel="noopener">[C/C++ 多线程（程序猿面试重点）CodeBlocks-CB的pthreads使用]</a>了解Ubuntu下使用多线程编程时的基本理论知识. 里面有很详细的解释说明</strong></p>
<h1 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h1><p>这里我首先参考了部分网上博客, 写了如下Read&amp;Write的demo.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10</span></span><br><span class="line"><span class="keyword">int</span> test_multiple_threads_R_and_S = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">set_thread</span><span class="params">(<span class="keyword">void</span> *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(;;)&#123;</span><br><span class="line">        ++test_multiple_threads_R_and_S;</span><br><span class="line">        sleep(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>( test_multiple_threads_R_and_S &gt;= <span class="number">20</span>)&#123;</span><br><span class="line">            pthread_exit(<span class="literal">NULL</span>); <span class="comment">// 测试退出子线程.</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">read_thread</span><span class="params">(<span class="keyword">void</span> *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(;;)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"the value of test is %d\n"</span>, test_multiple_threads_R_and_S);</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">pthread_t</span> id1,id2;</span><br><span class="line"></span><br><span class="line">    ret = pthread_create(&amp;id1, <span class="literal">NULL</span>, set_thread, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Create pthread error!\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ret = pthread_create(&amp;id2, <span class="literal">NULL</span>, read_thread, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Create pthread error!\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pthread_join(id1,<span class="literal">NULL</span>);</span><br><span class="line">    pthread_join(id2,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接运行上述代码可能会出现报错<code>对‘pthread_create’未定义的引用</code>, 可以参考<a href="http://blog.csdn.net/qq_20480611/article/details/49936457" target="_blank" rel="noopener">[codeblocks 多线程编程时出现：对pthread_create未定义的引用，解决方法]</a>中的方法进行调试. </p>
<p>如果上述程序运行理想的话, 运行结果应该如下.</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE5MTQxMzQyOTk2?x-oss-process=image/format,png" alt="运行结果"></p>
<p>写入线程运行到将test变量增加到20之后, 被kill. 读线程正常运行直到主进程结束. (此时需要了解进程线程之间的关系, 以及程序中的线程进程的生命周期.</p>
<p>到此测试结束, 运行成功.</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Ubuntu</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次爬虫实验代码及运行结果（html文本进行适当删除以压缩版面）</title>
    <url>/2017/04/19/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%88%AC%E8%99%AB%E5%AE%9E%E9%AA%8C%E4%BB%A3%E7%A0%81%E5%8F%8A%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%EF%BC%88html%E6%96%87%E6%9C%AC%E8%BF%9B%E8%A1%8C%E9%80%82%E5%BD%93%E5%88%A0%E9%99%A4%E4%BB%A5%E5%8E%8B%E7%BC%A9%E7%89%88%E9%9D%A2%EF%BC%89/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests </span><br><span class="line">artibody_url = <span class="string">'http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml'</span></span><br><span class="line">artibody_res = requests.get(artibody_url)</span><br><span class="line">artibody_res.encoding = <span class="string">'utf-8'</span></span><br><span class="line">print(artibody_res.text)</span><br></pre></td></tr></table></figure>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;!-- [ published at 2017-04-18 04:22:23 ] --&gt;
&lt;!-- LLTJ_MT:name =&quot;环球网&quot; --&gt;

&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;/&gt;
&lt;meta name=&quot;sudameta&quot; content=&quot;urlpath:c/; allCIDs:56044,257,51895,200856,51922,56261,258,38790&quot;&gt;
&lt;title&gt;美媒:中国奇迹没有结束 而是进入了第二阶段|中国经济_新浪新闻&lt;/title&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;中国经济&quot; /&gt;
&lt;meta name=&quot;tags&quot; content=&quot;中国经济&quot; /&gt;
&lt;meta name=&quot;description&quot; content=&quot;原标题：美媒：中国奇迹没有结束，而是进入了第二阶段[环球时报综合报道]“增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只&quot; /&gt;
&lt;link rel=&quot;mask-icon&quot; sizes=&quot;any&quot; href=&quot;//www.sina.com.cn/favicon.svg&quot; color=&quot;red&quot;&gt;
&lt;meta property=&quot;og:type&quot; content=&quot;news&quot; /&gt;
&lt;meta property=&quot;og:title&quot; content=&quot;美媒:中国奇迹没有结束 而是进入了第二阶段&quot; /&gt;
&lt;meta property=&quot;og:description&quot; content=&quot;美媒:中国奇迹没有结束 而是进入了第二阶段&quot; /&gt;
&lt;meta property=&quot;og:url&quot; content=&quot;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml&quot; /&gt;
&lt;meta property=&quot;og:image&quot; content=&quot;http://n.sinaimg.cn/news/transform/20170418/UrtA-fyeimrn2749398.jpg&quot; /&gt;
&lt;meta name=&quot;weibo: article:create_at&quot; content=&quot;2017-04-18 02:25:00&quot; /&gt;
&lt;meta name=&quot;weibo: article:update_at&quot; content=&quot;2017-04-18 04:22:15&quot; /&gt;

&lt;meta property=&quot;article:published_time&quot; content=&quot;2017-04-18T02:31:33+08:00&quot; /&gt;
&lt;meta property=&quot;article:author&quot; content=&quot;环球网&quot; /&gt;

&lt;meta name=&quot;stencil&quot; content=&quot;PGLS000115&quot; /&gt;
&lt;meta name=&quot;publishid&quot; content=&quot;fyeimzx6745829&quot; /&gt;
&lt;meta name=&quot;comment&quot; content=&quot;gn:comos-fyeimzx6745829&quot; /&gt;
&lt;meta name=&quot;sudameta&quot; content=&quot;comment_channel:gn;comment_id:comos-fyeimzx6745829&quot; /&gt;



&lt;meta name=&quot;mediaid&quot; content=&quot;环球网&quot;&gt;
&lt;meta name=&quot;sudameta&quot; content=&quot;sinaog:0&quot; /&gt;
&lt;meta name=&quot;mobile-agent&quot; content=&quot;format=html5; url=http://news.sina.cn/2017-04-18/detail-ifyeimzx6745829.d.html&quot;&gt;
&lt;meta name=&quot;mobile-agent&quot; content=&quot;format=xhtml; url=http://news.sina.cn/2017-04-18/detail-ifyeimzx6745829.d.html&quot;&gt;
&lt;meta name=&quot;mobile-agent&quot; content=&quot;format=wml; url=http://news.sina.cn/2017-04-18/detail-ifyeimzx6745829.d.html&quot;&gt;

&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;新浪新闻中心_国内新闻&quot;  href=&quot;http://rss.sina.com.cn/news/china/focus15.xml&quot; /&gt;

&lt;!-- 栏目名： 56044 国内新闻 --&gt;&lt;!-- id： fyeimzx6745829 URL： http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml --&gt;


&lt;meta name=jspreload content=&quot;jspreload&quot;&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
      (function(){
      if(navigator.userAgent.indexOf(&apos;MSIE&apos;) === -1){return};
      var list = [&quot;http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&quot;,&quot;http://news.sina.com.cn/js/87/content2014/common.js&quot;,&quot;http://d1.sina.com.cn/litong/zhitou/sspnew.js&quot;,&quot;http://d2.sina.com.cn/d1images/button/rotator.js&quot;,&quot;http://i.sso.sina.com.cn/js/ssologin.js&quot;,&quot;http://i.sso.sina.com.cn/js/outlogin_layer.js&quot;,&quot;http://i.sso.sina.com.cn/js/user_panel_new_version_v2.js&quot;,&quot;http://n.sinaimg.cn/ent/wsy/topnav20150402.js&quot;,&quot;http://static.bshare.cn/b/buttonLite.js#style=-1&amp;amp;uuid=cc6dc2b3-f467-40cb-afae-c7c6154a5f54&amp;amp;pophcol=2&amp;amp;lang=zh&quot;,&quot;http://static.bshare.cn/b/bshareC0.js&quot;,&quot;http://news.sina.com.cn/268/2014/0919/bshare_update.js&quot;,&quot;http://news.sina.com.cn/js/87/content2014/d_location.js&quot;,&quot;http://news.sina.com.cn/js/87/20130522/content/piclead.js&quot;,&quot;http://pfp.sina.com.cn/js/17/2013/0621/tb/59.js&quot;,&quot;http://d2.sina.com.cn/d1images/button/rotator.js&quot;,&quot;http://d5.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js&quot;,&quot;http://pfp.sina.com.cn/iframe/14/2011/0517/47zhongshiwangmeng.js&quot;,&quot;http://pfp.sina.com.cn/js/17/2012/0928/china00_300x500.js&quot;,&quot;http://d5.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js&quot;,&quot;http://pfp.sina.com.cn/js/17/2013/0621/tb/58.js&quot;,&quot;http://d5.sina.com.cn/litong/xianwei/taobao0827.js&quot;,&quot;http://d3.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js&quot;,&quot;http://d0.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js&quot;,&quot;http://d5.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js&quot;,&quot;http://tech.sina.com.cn/js/717/20140827/index2014/top.js&quot;,&quot;http://news.sina.com.cn/js/87/20140926/comment.3.min.js&quot;,&quot;http://news.sina.com.cn/js/87/content2014/feed.relatedNews.js&quot;,&quot;http://i1.sinaimg.cn/unipro/pub/suda_m_v629.js&quot;,&quot;http://d3.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js&quot;];
      for(var i=0;i&lt;list.length;i++){(new Image()).src = list[i]}
      })();
&lt;/script&gt;


&lt;script type=&quot;text/javascript&quot; src=&quot;http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&quot;&gt;&lt;/script&gt;
  &lt;link rel=&quot;stylesheet&quot; href=&quot;http://tech.sina.com.cn/css/717/20140911/index2014/feed.1.1.7.css&quot; type=&quot;text/css&quot; /&gt;
  &lt;link rel=&quot;stylesheet&quot; href=&quot;http://news.sina.com.cn/268/2014/0919/bshare_update.css&quot; type=&quot;text/css&quot;&gt;
  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://news.sina.com.cn/css/87/20140926/comment.3.css&quot;&gt;
  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://news.sina.com.cn/css/87/content2014/common.min.css&quot; /&gt;
  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://news.sina.com.cn/css/87/content2014/style_news.css&quot; /&gt;



&lt;script type=&quot;text/javascript&quot; src=&quot;http://news.sina.com.cn/js/87/content2014/common.js&quot; charset=&quot;gbk&quot;&gt;&lt;/script&gt;
  &lt;script type=&quot;text/javascript&quot;&gt;
  (function(){
    //var isTouchDevice = &apos;ontouchstart&apos; in window;
    var _doc = document;
    var head, meta;
    if(SINA_ARTICLE_PAGE_SETTINGS.isPad){
      head = _doc.querySelector(&apos;head&apos;);
      meta = document.createElement(&apos;meta&apos;);
      meta.setAttribute(&apos;name&apos;, &apos;viewport&apos;);
      meta.setAttribute(&apos;content&apos;, &apos;initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no&apos;);
      head.appendChild(meta);

      _doc.write(&apos;&lt;link rel=&quot;stylesheet&quot; href=&quot;http://n0.sinaimg.cn/news/4803d74b/20170109/ipad.min.css&quot;&gt;&apos;);
      _doc.write(&apos;&lt;&apos; + &apos;script type=&quot;text/javascript&quot; src=&quot;http://n.sinaimg.cn/news/content2014/zepto.min.js&quot;&gt;&lt;/&apos; + &apos;script&gt;&apos;);

    } else {
      _doc.write(&apos;&lt;link rel=&quot;stylesheet&quot; href=&quot;http://news.sina.com.cn/css/87/content2014/desktop.min.css&quot;&gt;&apos;);
      _doc.write(&apos;&lt;&apos; + &apos;script type=&quot;text/javascript&quot; src=&quot;http://n.sinaimg.cn/news/content2014/jquery-1.11.1.min.js&quot;&gt;&lt;/&apos; + &apos;script&gt;&apos;);
    }
  })();
  &lt;/script&gt;
  &lt;script&gt;try{document.domain=&apos;sina.com.cn&apos;}catch(e){}&lt;/script&gt;


&lt;script type=&quot;text/javascript&quot; src=&quot;http://d1.sina.com.cn/litong/zhitou/sspnew.js&quot;&gt;&lt;/script&gt; 
&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;http://d2.sina.com.cn/d1images/button/rotator.js&quot; charset=&quot;gbk&quot;&gt;&lt;/script&gt;

&lt;script&gt;
    //设置本页面的富媒体类型的顺序
    var _SINAADS_CONF_PAGE_MEDIA_ORDER = [&quot;PDPS000000056619&quot;, &quot;PDPS000000042133&quot;, &quot;PDPS000000057131&quot;];
    //var sinaadsPageMediaOrder = [&apos;bottomstream&apos;, &apos;kzhzh&apos;, &apos;fc&apos;];
&lt;/script&gt;


&lt;script&gt;
    (function (d, s, id) {
        var s, n = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        s = d.createElement(s);
        s.id = id;
        s.setAttribute(&apos;charset&apos;, &apos;utf-8&apos;);
        s.src = &apos;//d&apos; + Math.floor(0 + Math.random() * (9 - 0 + 1)) + &apos;.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js&apos;;
        n.parentNode.insertBefore(s, n);
    })(document, &apos;script&apos;, &apos;sinaads-script&apos;);
&lt;/script&gt;

&lt;script language=&apos;javascript&apos; charset=&apos;utf-8&apos; src=&apos;http://i.sso.sina.com.cn/js/ssologin.js&apos;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://i.sso.sina.com.cn/js/outlogin_layer.js&quot;  charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://i.sso.sina.com.cn/js/user_panel_new_version_v2.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


&lt;/head&gt;

&lt;body&gt;&lt;!-- body code begin --&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">artibody_soup = BeautifulSoup(artibody_res.text, <span class="string">'html.parser'</span>)</span><br><span class="line">artibody_div = artibody_soup.select(<span class="string">'#artibody p'</span>)[<span class="number">1</span>:<span class="number">-2</span>]</span><br><span class="line">print(artibody_div)</span><br></pre></td></tr></table></figure>

<pre><code>[&lt;p&gt;　　[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。&lt;/p&gt;, &lt;p&gt;　　虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。&lt;/p&gt;, &lt;p&gt;　　日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。&lt;/p&gt;, &lt;p&gt;　　19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。&lt;/p&gt;, &lt;p&gt;　　“中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。&lt;/p&gt;]</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">article = []</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> artibody_div:</span><br><span class="line">    article.append(p.text.strip())</span><br><span class="line">print(article)</span><br></pre></td></tr></table></figure>

<pre><code>[&apos;[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。&apos;, &apos;虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。&apos;, &apos;日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。&apos;, &apos;19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。&apos;, &apos;“中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。&apos;]</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">' '</span>.join(article)</span><br></pre></td></tr></table></figure>

<pre><code>&apos;[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。 虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。 日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。 19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。 “中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。&apos;</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">' '</span>.join([p.text.strip() <span class="keyword">for</span> p <span class="keyword">in</span> artibody_soup.select(<span class="string">'#artibody p'</span>)[<span class="number">1</span>:<span class="number">-2</span>]])</span><br></pre></td></tr></table></figure>

<pre><code>&apos;[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。 虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。 日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。 19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。 “中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。&apos;</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_editor = artibody_soup.select(<span class="string">'.article-editor'</span>)[<span class="number">0</span>].text.lstrip(<span class="string">'责任编辑：'</span>)</span><br><span class="line">print(artibody_editor)</span><br></pre></td></tr></table></figure>

<pre><code>李伟山 </code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_title = artibody_soup.select(<span class="string">'title'</span>)[<span class="number">0</span>].text</span><br><span class="line">print(artibody_title)</span><br></pre></td></tr></table></figure>

<pre><code>美媒:中国奇迹没有结束 而是进入了第二阶段|中国经济_新浪新闻</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_p = artibody_div.select(<span class="string">'p'</span>)[<span class="number">0</span>].contents</span><br><span class="line">print(artibody_p)</span><br></pre></td></tr></table></figure>

<pre><code>[&apos;\u3000\u3000原标题：美媒：中国奇迹没有结束，而是进入了第二阶段&apos;]</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_time = artibody_soup.select(<span class="string">'.time-source'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">dt = datetime.strptime(artibody_time, <span class="string">'%Y年%m月%d日%H:%M'</span>)</span><br><span class="line">print(dt.strftime(<span class="string">'%Y-%m-%d %H:%M'</span>))</span><br></pre></td></tr></table></figure>

<pre><code>2017-04-18 02:25</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_from = artibody_soup.select(<span class="string">'.time-source span a'</span>)[<span class="number">0</span>].text</span><br><span class="line">print(artibody_from)</span><br></pre></td></tr></table></figure>

<pre><code>环球网</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">artibody_commentCount = artibody_soup.select(<span class="string">'.page-tool-i'</span>)</span><br><span class="line">print(artibody_commentCount)</span><br></pre></td></tr></table></figure>

<pre><code>[&lt;span class=&quot;page-tool-i page-tool-s&quot; title=&quot;分享&quot;&gt;
&lt;a href=&quot;javascript:;&quot; id=&quot;shareArticleButton&quot; onclick=&quot;_S_uaTrack(&apos;index_news_content&apos;, &apos;other_click&apos;);&quot;&gt;分享&lt;/a&gt;
&lt;/span&gt;, &lt;span class=&quot;page-tool-i page-tool-c page-tool-share&quot; title=&quot;评论&quot;&gt;
&lt;span id=&quot;commentCount1&quot;&gt;&lt;/span&gt;
&lt;a href=&quot;javascript:;&quot; suda-uatrack=&quot;key=index_news_content&amp;amp;value=comment_click&quot;&gt;&lt;/a&gt;
&lt;/span&gt;, &lt;span class=&quot;page-tool-i page-tool-s&quot; title=&quot;分享&quot;&gt;
&lt;a href=&quot;javascript:;&quot; id=&quot;shareArticleButton2&quot; onclick=&quot;_S_uaTrack(&apos;index_news_content&apos;, &apos;other_roll_click&apos;);&quot;&gt;分享&lt;/a&gt;
&lt;/span&gt;, &lt;span class=&quot;page-tool-i page-tool-c page-tool-share&quot; id=&quot;pageToolShare&quot; title=&quot;评论&quot;&gt;
&lt;a href=&quot;javascript:;&quot; suda-uatrack=&quot;key=index_news_content&amp;amp;value=comment_roll_click&quot;&gt;&lt;/a&gt;
&lt;span id=&quot;commentCount1M&quot;&gt;&lt;/span&gt;
&lt;/span&gt;]</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">comment_url = <span class="string">'http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=gn&amp;newsid=comos-fyeimzx6745829&amp;group=&amp;compress=0&amp;ie=utf-8&amp;oe=utf-8&amp;page=1&amp;page_size=20'</span></span><br><span class="line">comment_res = requests.get(comment_url)</span><br><span class="line">comment_res.encoding = <span class="string">'utf-8'</span></span><br><span class="line">print(comment_res.text)</span><br></pre></td></tr></table></figure>

<pre><code>var data={&quot;result&quot;: {&quot;status&quot;: {&quot;msg&quot;: &quot;&quot;, &quot;code&quot;: 0}, &quot;count&quot;: {&quot;qreply&quot;: 10065, &quot;total&quot;: 10756, &quot;show&quot;: 200}, &quot;replydict&quot;: {&quot;58F5941B-CA2D81B7-5D7A2F91-8C6-8ED&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;219.133.40.14&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u6df1\u5733&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F56F0A-DB85280E-EA280EB0-8C6-8D5&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e2d\u56fd\u6c7d\u8f662016\u5e74\u4ea7\u9500\u91cf2800\u4e07\u8f86\uff0c\u5168\u7403\u7b2c\u4e00\uff0c\u7f8e\u56fd1800\u4e07\u8f86\u7b2c\u4e8c\uff0c\u65e5\u672c500\u4e07\u8f86\u7b2c\u4e09\uff0c\u4e2d\u56fd\u662f\u7f8e\u56fd\u52a0\u65e5\u672c\u52a0\u5fb7\u56fd\u52a0\u6cd5\u56fd\u4e4b\u548c\u3002\u5168\u7403\u4e09\u5206\u4e4b\u4e00\u6c7d\u8f66\u88ab\u4e2d\u56fd\u4eba\u4e70\u8d70\u3002&quot;, &quot;nick&quot;: &quot;\u7528\u6237fkh05x1o56&quot;, &quot;length&quot;: &quot;77&quot;, &quot;rank&quot;: &quot;12&quot;, &quot;time&quot;: &quot;2017-04-18 09:42:34&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=qqweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HONORBLN-AL10) Chrome/37.0.0.0 MQQBrowser/6.0 Safari/537.36&amp;area=\u5e7f\u4e1c\u6df1\u5733&amp;wb_verified=0&amp;wb_screen_name=\u7528\u6237fkh05x1o56&amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=1&amp;wb_user_id=3928493744&amp;wb_time=1492479754&amp;area=\u5e7f\u4e1c\u6df1\u5733&quot;, &quot;agree&quot;: &quot;11&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;3928493744&quot;}], &quot;58F59478-CA2D81B7-5D7A2F91-8C6-8A2&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;49.87.56.99&quot;, &quot;area&quot;: &quot;\u6c5f\u82cf\u6dee\u5b89&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F547C0-31573863-DCD0C9AA-8C6-89D&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4f60\u7684\u5efa\u8bae\u6216\u613f\u671b\u662f\u7f8e\u597d\u7684\uff0c\u4f46\u5728\u73b0\u5728\u7684\u4e2d\u56fd\u4e0d\u5bb9\u6613\u5b9e\u73b0\u3002\u4e00\u5f53\u6743\u8005\u6ca1\u6709\u9510\u610f\u6539\u9769\u7684\u52c7\u6c14\uff0c\u4e8c\u65e2\u5f97\u5229\u76ca\u8005\u7684\u52bf\u529b\u53ca\u963b\u529b\u5f88\u5927\u3002&quot;, &quot;nick&quot;: &quot;3704670634&quot;, &quot;length&quot;: &quot;54&quot;, &quot;rank&quot;: &quot;44&quot;, &quot;time&quot;: &quot;2017-04-18 06:54:56&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;p_nick=Maryland-DC&amp;p_uid=3102045191&quot;, &quot;agree&quot;: &quot;43&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;3704670634&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F547C0-31573863-DCD0C9AA-8C6-89D&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;124.207.17.226&quot;, &quot;area&quot;: &quot;\u5317\u4eac&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5475\u5475\uff0c\u4e00\u8fb9\u60f3\u8981\u514d\u8d39\u7684\u4e00\u8fb9\u53c8\u60f3\u4f4e\u7a0e\u6536\uff01\u90a3\u8bf7\u95ee\u94b1\u4ece\u54ea\u91cc\u6765\uff1f\u5317\u6b27\u798f\u5229\u662f\u597d\uff0c\u4f46\u662f\u7a0e\u7387\u63a5\u8fd150%\uff01\u4f60\u53d7\u5f97\u4e86\u5417\uff1f&quot;, &quot;nick&quot;: &quot;1576847061&quot;, &quot;length&quot;: &quot;50&quot;, &quot;rank&quot;: &quot;481&quot;, &quot;time&quot;: &quot;2017-04-18 07:34:07&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5317\u4eac&amp;wb_verified=0&amp;wb_screen_name=\u871a\u8bed\u6d41\u8a00_74190&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=9&amp;wb_user_id=1576847061&amp;wb_time=1492472047&amp;area=\u5317\u4eac&quot;, &quot;agree&quot;: &quot;478&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1576847061&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1&quot;, &quot;level&quot;: &quot;3&quot;, &quot;ip&quot;: &quot;112.96.33.147&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F56976-70602193-4B6CF1AD-8C6-8F0&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4eba\u5bb6\u5317\u6b27\u624d\u662f\u5171\u540c\u5bcc\u88d5&quot;, &quot;nick&quot;: &quot;today1874&quot;, &quot;length&quot;: &quot;10&quot;, &quot;rank&quot;: &quot;46&quot;, &quot;time&quot;: &quot;2017-04-18 09:18:46&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=13&amp;SOFT_TYPE=Safari/602.1&amp;area=\u5e7f\u4e1c&amp;wb_verified=0&amp;wb_screen_name=today1874&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=2&amp;wb_user_id=1265430957&amp;wb_time=1492478326&amp;area=\u5e7f\u4e1c&amp;p_nick=\u871a\u8bed\u6d41\u8a00_74190&amp;p_uid=1576847061&quot;, &quot;agree&quot;: &quot;45&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1265430957&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;palmnews&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F56976-70602193-4B6CF1AD-8C6-8F0&quot;, &quot;level&quot;: &quot;4&quot;, &quot;ip&quot;: &quot;180.173.225.78&quot;, &quot;area&quot;: &quot;\u4e0a\u6d77&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F56B38-B4ADE14E-16D5DDB9C-8C6-8AC&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5317\u6b27\u5c0f\u56fd\u5be1\u6c11\u7684\uff0c\u5356\u5356\u77f3\u6cb9\uff0c\u5f00\u53d1\u4e00\u70b9\u70b9\u9ad8\u79d1\u6280\uff0c\u5c31\u5168\u89e3\u51b3\u4e86\u3002&quot;, &quot;nick&quot;: &quot;\u4fca\u6770nautilus&quot;, &quot;length&quot;: &quot;28&quot;, &quot;rank&quot;: &quot;19&quot;, &quot;time&quot;: &quot;2017-04-18 09:26:17&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=&amp;SOFT_TYPE=&amp;area=\u4e0a\u6d77&amp;wb_verified=0&amp;wb_screen_name=\u4fca\u6770nautilus&amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.0.960.960.50%2F006GQa4Yjw8fcb22s2ya6j30qo0qot9d.jpg&amp;followers_count=8&amp;wb_user_id=6129834908&amp;wb_time=1492478777&amp;area=\u4e0a\u6d77&amp;p_nick=today1874&amp;p_uid=1265430957&quot;, &quot;agree&quot;: &quot;18&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;6129834908&quot;}], &quot;58F595B8-ED7A027-16DF4AF24-8C6-8CD&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;49.87.56.99&quot;, &quot;area&quot;: &quot;\u6c5f\u82cf\u6dee\u5b89&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F547C0-31573863-DCD0C9AA-8C6-89D&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4f60\u7684\u5efa\u8bae\u6216\u613f\u671b\u662f\u7f8e\u597d\u7684\uff0c\u4f46\u5728\u73b0\u5728\u7684\u4e2d\u56fd\u4e0d\u5bb9\u6613\u5b9e\u73b0\u3002\u4e00\u5f53\u6743\u8005\u6ca1\u6709\u9510\u610f\u6539\u9769\u7684\u52c7\u6c14\uff0c\u4e8c\u65e2\u5f97\u5229\u76ca\u8005\u7684\u52bf\u529b\u53ca\u963b\u529b\u5f88\u5927\u3002&quot;, &quot;nick&quot;: &quot;3704670634&quot;, &quot;length&quot;: &quot;54&quot;, &quot;rank&quot;: &quot;44&quot;, &quot;time&quot;: &quot;2017-04-18 06:54:56&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;p_nick=Maryland-DC&amp;p_uid=3102045191&quot;, &quot;agree&quot;: &quot;43&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;3704670634&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F547C0-31573863-DCD0C9AA-8C6-89D&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;124.207.17.226&quot;, &quot;area&quot;: &quot;\u5317\u4eac&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5475\u5475\uff0c\u4e00\u8fb9\u60f3\u8981\u514d\u8d39\u7684\u4e00\u8fb9\u53c8\u60f3\u4f4e\u7a0e\u6536\uff01\u90a3\u8bf7\u95ee\u94b1\u4ece\u54ea\u91cc\u6765\uff1f\u5317\u6b27\u798f\u5229\u662f\u597d\uff0c\u4f46\u662f\u7a0e\u7387\u63a5\u8fd150%\uff01\u4f60\u53d7\u5f97\u4e86\u5417\uff1f&quot;, &quot;nick&quot;: &quot;1576847061&quot;, &quot;length&quot;: &quot;50&quot;, &quot;rank&quot;: &quot;481&quot;, &quot;time&quot;: &quot;2017-04-18 07:34:07&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5317\u4eac&amp;wb_verified=0&amp;wb_screen_name=\u871a\u8bed\u6d41\u8a00_74190&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=9&amp;wb_user_id=1576847061&amp;wb_time=1492472047&amp;area=\u5317\u4eac&quot;, &quot;agree&quot;: &quot;478&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1576847061&quot;}], &quot;58F59210-CA2D81B7-5D7A2F91-8C6-8ED&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;125.107.105.210&quot;, &quot;area&quot;: &quot;\u6d59\u6c5f\u7ecd\u5174&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55930-7D6B69D2-52FC936B-8C6-894&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u6211\u4e2a\u4eba\u89c9\u5f97\u4e2d\u56fd\u7ecf\u6d4e\u7684\u6301\u7eed\u9ad8\u901f\u53d1\u5c55\uff0c\u6709\u4e00\u4e2a\u6781\u5176\u91cd\u8981\u7684\u56e0\u7d20\u88ab\u4e16\u4eba\u6240\u9057\u5fd8-----\u90a3\u5c31\u662f\u51e0\u5343\u5e74\u519c\u8015\u6587\u660e\u6c89\u6dc0\u4e0b\u6765\u7684\u751f\u6d3b\u6001\u5ea6\u201c\u52e4\u52b3\u201d&quot;, &quot;nick&quot;: &quot;1392284523&quot;, &quot;length&quot;: &quot;61&quot;, &quot;rank&quot;: &quot;27&quot;, &quot;time&quot;: &quot;2017-04-18 08:09:20&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u6d59\u6c5f\u7ecd\u5174&amp;wb_verified=0&amp;wb_screen_name=70\u5e74\u4ee3\u524d\u671f&amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=0&amp;wb_user_id=1392284523&amp;wb_time=1492474160&amp;area=\u6d59\u6c5f\u7ecd\u5174&quot;, &quot;agree&quot;: &quot;26&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1392284523&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F55930-7D6B69D2-52FC936B-8C6-894&quot;, &quot;parent&quot;: &quot;58F55930-7D6B69D2-52FC936B-8C6-894&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;49.87.56.99&quot;, &quot;area&quot;: &quot;\u6c5f\u82cf\u6dee\u5b89&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55FF1-31573863-DCD0C9AA-8C6-7E6&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u6bdb\u6cfd\u4e1c\u65f6\u4ee3\u88ab\u675f\u5265\u7684\u52b3\u52a8\u529b\u5728\u9093\u5c0f\u5e73\u6539\u9769\u5f00\u653e\u4e2d\u5f97\u5230\u6709\u6548\u7684\u91ca\u653e\u3002&quot;, &quot;nick&quot;: &quot;3704670634&quot;, &quot;length&quot;: &quot;29&quot;, &quot;rank&quot;: &quot;9&quot;, &quot;time&quot;: &quot;2017-04-18 08:38:12&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;p_nick=70\u5e74\u4ee3\u524d\u671f&amp;p_uid=1392284523&quot;, &quot;agree&quot;: &quot;8&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;3704670634&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F55930-7D6B69D2-52FC936B-8C6-894&quot;, &quot;parent&quot;: &quot;58F55FF1-31573863-DCD0C9AA-8C6-7E6&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;221.0.94.217&quot;, &quot;area&quot;: &quot;\u5c71\u4e1c\u70df\u53f0&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F57CF1-DD005ED9-9F481B41-8C6-8F2&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4f60\u786e\u5b9a\u6bdb\u6cfd\u4e1c\u65f6\u4ee3\u88ab\u675f\u7f1a\uff1f\u4f60\u548b\u4e0d\u8bf4\uff0c\u6bdb\u6cfd\u4e1c\u65f6\u4ee3\u79ef\u7d2f\u4e86\u5f3a\u5927\u7684\u4eba\u53e3\u7ea2\u5229\uff1f\u5c31\u50cf\u4e00\u4e2a\u4e00\u7a77\u4e8c\u767d\u7684\u5bb6\u5ead\uff0c\u521a\u5f00\u59cb\u548c\u53d1\u5c55\u4e86\u82e5\u5e72\u5e74\u80fd\u4e00\u6837\u4e48\uff1f&quot;, &quot;nick&quot;: &quot;2672302913&quot;, &quot;length&quot;: &quot;60&quot;, &quot;rank&quot;: &quot;31&quot;, &quot;time&quot;: &quot;2017-04-18 10:41:52&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5c71\u4e1c\u70df\u53f0&amp;wb_verified=0&amp;wb_screen_name=\u91cd\u9547\u4e4b\u8a89&amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.180.180.50%2F9f481b41jw1e8qgp5bmzyj2050050aa8.jpg&amp;followers_count=77&amp;wb_user_id=2672302913&amp;wb_time=1492483313&amp;area=\u5c71\u4e1c\u70df\u53f0&quot;, &quot;agree&quot;: &quot;30&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2672302913&quot;}], &quot;58F5917A-7A9CDBC6-706633CB-8C6-7D9&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;client&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;111.121.41.120&quot;, &quot;area&quot;: &quot;\u8d35\u5dde\u8d35\u9633&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55411-6F792978-812AA718-8C6-83A&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u8fd9\u662f\u7f8e\u56fd\u4eba\u7684\u7cd6\u8863\u70ae\u5f39\uff0c\u662f\u6367\u6740\u3002\u5f53\u5e74\u5c31\u662f\u8fd9\u4e48\u5439\u57ae\u5c0f\u65e5\u672c\u7684\uff0c\u865a\u5fc3\u4f7f\u4eba\u8fdb\u6b65\uff0c\u9a84\u50b2\u4f7f\u4eba\u843d\u540e\u3002&quot;, &quot;nick&quot;: &quot;\u5200\u5c16\u6f2b\u821e&quot;, &quot;length&quot;: &quot;42&quot;, &quot;rank&quot;: &quot;1099&quot;, &quot;time&quot;: &quot;2017-04-18 07:47:33&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;OS_LANG=zh&amp;SOFT_TYPE=SinaNews_v495&amp;LATITUDE=26.564052&amp;LONGITUDE=106.688995&amp;client_ip=111.121.41.120&amp;port=21506&amp;from=palmnews&amp;wb_verified=0&amp;wb_screen_name=\u5200\u5c16\u6fb7\u821e&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.768.768.50%2F812aa718jw8ex6jtxc0o5j20lc0lcjsl.jpg&amp;followers_count=39&amp;wb_user_id=2167056152&amp;wb_time=1492472849&amp;area=\u8d35\u5dde\u8d35\u9633&quot;, &quot;agree&quot;: &quot;1097&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2167056152&quot;}], &quot;58F591F7-72F2F8E8-A34740CF-8C6-86E&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;49.87.56.99&quot;, &quot;area&quot;: &quot;\u6c5f\u82cf\u6dee\u5b89&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F547C0-31573863-DCD0C9AA-8C6-89D&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4f60\u7684\u5efa\u8bae\u6216\u613f\u671b\u662f\u7f8e\u597d\u7684\uff0c\u4f46\u5728\u73b0\u5728\u7684\u4e2d\u56fd\u4e0d\u5bb9\u6613\u5b9e\u73b0\u3002\u4e00\u5f53\u6743\u8005\u6ca1\u6709\u9510\u610f\u6539\u9769\u7684\u52c7\u6c14\uff0c\u4e8c\u65e2\u5f97\u5229\u76ca\u8005\u7684\u52bf\u529b\u53ca\u963b\u529b\u5f88\u5927\u3002&quot;, &quot;nick&quot;: &quot;3704670634&quot;, &quot;length&quot;: &quot;54&quot;, &quot;rank&quot;: &quot;44&quot;, &quot;time&quot;: &quot;2017-04-18 06:54:56&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;area=\u6c5f\u82cf\u6dee\u5b89&amp;p_nick=Maryland-DC&amp;p_uid=3102045191&quot;, &quot;agree&quot;: &quot;43&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;3704670634&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F547C0-31573863-DCD0C9AA-8C6-89D&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;124.207.17.226&quot;, &quot;area&quot;: &quot;\u5317\u4eac&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5475\u5475\uff0c\u4e00\u8fb9\u60f3\u8981\u514d\u8d39\u7684\u4e00\u8fb9\u53c8\u60f3\u4f4e\u7a0e\u6536\uff01\u90a3\u8bf7\u95ee\u94b1\u4ece\u54ea\u91cc\u6765\uff1f\u5317\u6b27\u798f\u5229\u662f\u597d\uff0c\u4f46\u662f\u7a0e\u7387\u63a5\u8fd150%\uff01\u4f60\u53d7\u5f97\u4e86\u5417\uff1f&quot;, &quot;nick&quot;: &quot;1576847061&quot;, &quot;length&quot;: &quot;50&quot;, &quot;rank&quot;: &quot;481&quot;, &quot;time&quot;: &quot;2017-04-18 07:34:07&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5317\u4eac&amp;wb_verified=0&amp;wb_screen_name=\u871a\u8bed\u6d41\u8a00_74190&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=9&amp;wb_user_id=1576847061&amp;wb_time=1492472047&amp;area=\u5317\u4eac&quot;, &quot;agree&quot;: &quot;478&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1576847061&quot;}], &quot;58F59606-793A120A-16ECC0302-8C6-91B&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;14.215.161.210&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4ee5\u524d\u6c11\u4f17\u4ec0\u751f\u6d3b\uff0c\u73b0\u5728\u4ec0\u4e48\u751f\u6d3b\uff1f\u4e2d\u56fd\u73b0\u5728\u53ea\u8981\u4f60\u80af\u52aa\u529b\uff0c\u867d\u7136\u4e0d\u4e00\u5b9a\u6709\u8f66\u6709\u623f\uff0c\u4f46\u80af\u5b9a\u4e0d\u6101\u5403\u4f4f\u7a7f\u3002\u7535\u89c6\u3001\u6469\u6258\u8f66\u3001\u6d17\u8863\u673a\u3001\u7535\u8111\u3001\u624b\u673a\u3001\u8fd9\u4e9b\u90fd\u5df2\u7ecf\u662f\u666e\u901a\u5bb6\u5ead\u7684\u914d\u5907\u4e86\u300220\u5e74\u524d\u6709\u51e0\u5bb6\u6709\uff1f\u4f60\u8bf4\u6ca1\u6709\u60e0\u53ca\u6c11\u4f17\u662f\u7741\u773c\u8bf4\u778e\u8bdd\u3002\u867d\u7136\u8fd8\u6709\u5f88\u591a\u4e0d\u8db3\uff0c\u4f46\u4e2d\u56fd\u7684\u751f\u6d3b\u6c34\u5e73\u7684\u786e\u6709\u5f88\u5927\u7684\u98de\u8dc3\u3002&quot;, &quot;nick&quot;: &quot;\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&quot;, &quot;length&quot;: &quot;127&quot;, &quot;rank&quot;: &quot;442&quot;, &quot;time&quot;: &quot;2017-04-18 08:58:08&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg&amp;followers_count=24&amp;wb_user_id=5556351458&amp;wb_time=1492477087&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=8866\u5f00\u5fc3&amp;p_uid=1413695942&quot;, &quot;agree&quot;: &quot;441&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5556351458&quot;}], &quot;58F59540-ED7A091-1485BB312-8C6-8CA&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;14.215.161.210&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4ee5\u524d\u6c11\u4f17\u4ec0\u751f\u6d3b\uff0c\u73b0\u5728\u4ec0\u4e48\u751f\u6d3b\uff1f\u4e2d\u56fd\u73b0\u5728\u53ea\u8981\u4f60\u80af\u52aa\u529b\uff0c\u867d\u7136\u4e0d\u4e00\u5b9a\u6709\u8f66\u6709\u623f\uff0c\u4f46\u80af\u5b9a\u4e0d\u6101\u5403\u4f4f\u7a7f\u3002\u7535\u89c6\u3001\u6469\u6258\u8f66\u3001\u6d17\u8863\u673a\u3001\u7535\u8111\u3001\u624b\u673a\u3001\u8fd9\u4e9b\u90fd\u5df2\u7ecf\u662f\u666e\u901a\u5bb6\u5ead\u7684\u914d\u5907\u4e86\u300220\u5e74\u524d\u6709\u51e0\u5bb6\u6709\uff1f\u4f60\u8bf4\u6ca1\u6709\u60e0\u53ca\u6c11\u4f17\u662f\u7741\u773c\u8bf4\u778e\u8bdd\u3002\u867d\u7136\u8fd8\u6709\u5f88\u591a\u4e0d\u8db3\uff0c\u4f46\u4e2d\u56fd\u7684\u751f\u6d3b\u6c34\u5e73\u7684\u786e\u6709\u5f88\u5927\u7684\u98de\u8dc3\u3002&quot;, &quot;nick&quot;: &quot;\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&quot;, &quot;length&quot;: &quot;127&quot;, &quot;rank&quot;: &quot;442&quot;, &quot;time&quot;: &quot;2017-04-18 08:58:08&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg&amp;followers_count=24&amp;wb_user_id=5556351458&amp;wb_time=1492477087&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=8866\u5f00\u5fc3&amp;p_uid=1413695942&quot;, &quot;agree&quot;: &quot;441&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5556351458&quot;}], &quot;58F59113-CA2D81B7-5D7A2F91-8C6-95F&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;117.141.117.161&quot;, &quot;area&quot;: &quot;\u5e7f\u897f\u5357\u5b81&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F585C8-758D75A1-1487E0A75-8C6-898&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e2d\u56fd\u521b\u4e1a\u521b\u65b0\u6d3b\u529b\u65e5\u76ca\u589e\u5f3a\uff0c\u793e\u4f1a\u7ecf\u6d4e\u53d1\u5c55\u81ea\u7136\u5947\u8ff9\u95ea\u70c1\uff0c\u6211\u4eec\u76f8\u4fe1\u65b0\u7684\u4e00\u5e74\u91cc\uff0c\u5728\u201c\u521b\u65b0\u3001\u534f\u8c03\u3001\u7eff\u8272\u3001\u5f00\u653e\u3001\u5171\u4eab\u201d\u4e94\u5927\u53d1\u5c55\u65b0\u7406\u5ff5\u5f15\u9886\u4e0b\u7684\u4e2d\u56fd\uff0c\u4f1a\u53d8\u5f97\u66f4\u597d\u3002&quot;, &quot;nick&quot;: &quot;5511187061&quot;, &quot;length&quot;: &quot;73&quot;, &quot;rank&quot;: &quot;23&quot;, &quot;time&quot;: &quot;2017-04-18 11:19:36&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5e7f\u897f\u5357\u5b81&amp;wb_verified=0&amp;wb_screen_name=\u82b1\u7530\u519c\u592b_54159&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=3&amp;wb_user_id=5511187061&amp;wb_time=1492485576&amp;area=\u5e7f\u897f\u5357\u5b81&quot;, &quot;agree&quot;: &quot;22&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5511187061&quot;}], &quot;58F591AE-CA2D81B7-5D7A2F91-8C6-A08&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;123.125.193.138&quot;, &quot;area&quot;: &quot;\u5317\u4eac&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55875-7B7DC18A-160C230EF-8C6-8C8&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e2d\u56fd\u7684gdp\u90fd\u662f\u623f\u4ef7\u63a8\u4e0a\u53bb\u7684\uff0c\u5176\u4ed6\u4ea7\u4e1a\u88ab\u589e\u957f\u4e86\uff01&quot;, &quot;nick&quot;: &quot;\u9060\u65b9\u4e0d\u8fdcKM&quot;, &quot;length&quot;: &quot;24&quot;, &quot;rank&quot;: &quot;10&quot;, &quot;time&quot;: &quot;2017-04-18 08:06:13&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/MMB29T) Chrome/40.0.2214.89 UCBrowser/11.3.8.909 Safari/537.36&amp;area=\u5317\u4eac&amp;wb_verified=0&amp;wb_screen_name=\u9060\u65b9\u4e0d\u8fdcKM&amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fcrop.0.0.1328.1328.50%2F006swBT9ly8fdq6a6qejhj310w10w0wi.jpg&amp;followers_count=16&amp;wb_user_id=5918306543&amp;wb_time=1492473973&amp;area=\u5317\u4eac&quot;, &quot;agree&quot;: &quot;10&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5918306543&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F55875-7B7DC18A-160C230EF-8C6-8C8&quot;, &quot;parent&quot;: &quot;58F55875-7B7DC18A-160C230EF-8C6-8C8&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;221.0.94.217&quot;, &quot;area&quot;: &quot;\u5c71\u4e1c\u70df\u53f0&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F57D61-DD005ED9-9F481B41-8C6-8ED&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u54c7\uff0c\u8fd9\u4e48\u597d\u7528\uff0c\u4e3a\u4ec0\u4e48\u5c31\u4e2d\u56fd\u7528\u5462\u3002\u3002\u771f\u5947\u4e86\u602a\u3002\u3002&quot;, &quot;nick&quot;: &quot;2672302913&quot;, &quot;length&quot;: &quot;23&quot;, &quot;rank&quot;: &quot;19&quot;, &quot;time&quot;: &quot;2017-04-18 10:43:45&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5c71\u4e1c\u70df\u53f0&amp;wb_verified=0&amp;wb_screen_name=\u91cd\u9547\u4e4b\u8a89&amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.180.180.50%2F9f481b41jw1e8qgp5bmzyj2050050aa8.jpg&amp;followers_count=77&amp;wb_user_id=2672302913&amp;wb_time=1492483425&amp;area=\u5c71\u4e1c\u70df\u53f0&amp;p_nick=\u9060\u65b9\u4e0d\u8fdcKM&amp;p_uid=5918306543&quot;, &quot;agree&quot;: &quot;18&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2672302913&quot;}], &quot;58F59278-3B216B15-451467A8-8C6-881&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;14.215.161.210&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4ee5\u524d\u6c11\u4f17\u4ec0\u751f\u6d3b\uff0c\u73b0\u5728\u4ec0\u4e48\u751f\u6d3b\uff1f\u4e2d\u56fd\u73b0\u5728\u53ea\u8981\u4f60\u80af\u52aa\u529b\uff0c\u867d\u7136\u4e0d\u4e00\u5b9a\u6709\u8f66\u6709\u623f\uff0c\u4f46\u80af\u5b9a\u4e0d\u6101\u5403\u4f4f\u7a7f\u3002\u7535\u89c6\u3001\u6469\u6258\u8f66\u3001\u6d17\u8863\u673a\u3001\u7535\u8111\u3001\u624b\u673a\u3001\u8fd9\u4e9b\u90fd\u5df2\u7ecf\u662f\u666e\u901a\u5bb6\u5ead\u7684\u914d\u5907\u4e86\u300220\u5e74\u524d\u6709\u51e0\u5bb6\u6709\uff1f\u4f60\u8bf4\u6ca1\u6709\u60e0\u53ca\u6c11\u4f17\u662f\u7741\u773c\u8bf4\u778e\u8bdd\u3002\u867d\u7136\u8fd8\u6709\u5f88\u591a\u4e0d\u8db3\uff0c\u4f46\u4e2d\u56fd\u7684\u751f\u6d3b\u6c34\u5e73\u7684\u786e\u6709\u5f88\u5927\u7684\u98de\u8dc3\u3002&quot;, &quot;nick&quot;: &quot;\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&quot;, &quot;length&quot;: &quot;127&quot;, &quot;rank&quot;: &quot;442&quot;, &quot;time&quot;: &quot;2017-04-18 08:58:08&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg&amp;followers_count=24&amp;wb_user_id=5556351458&amp;wb_time=1492477087&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=8866\u5f00\u5fc3&amp;p_uid=1413695942&quot;, &quot;agree&quot;: &quot;441&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5556351458&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;117.136.97.39&quot;, &quot;area&quot;: &quot;\u5e7f\u897f&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F58496-75886127-14302C124-8C6-843&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;20\u5e74\u524d\uff1f\u4f60\u600e\u4e48\u4e0d\u8bf4500\u5e74\u524d\uff1f&quot;, &quot;nick&quot;: &quot;\u7528\u62375419221284&quot;, &quot;length&quot;: &quot;16&quot;, &quot;rank&quot;: &quot;34&quot;, &quot;time&quot;: &quot;2017-04-18 11:14:31&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;SOFT_TYPE=Build/LMY47D) Chrome/35.0.1916.138 Safari/537.36 T7/7.4 baiduboxapp/8.4&amp;area=\u5e7f\u897f&amp;wb_verified=0&amp;wb_screen_name=\u7528\u62375419221284&amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=3&amp;wb_user_id=5419221284&amp;wb_time=1492485270&amp;area=\u5e7f\u897f&amp;p_nick=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;p_uid=5556351458&quot;, &quot;agree&quot;: &quot;33&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5419221284&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F58496-75886127-14302C124-8C6-843&quot;, &quot;level&quot;: &quot;3&quot;, &quot;ip&quot;: &quot;14.152.68.195&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F58D06-E9844C3-9A001259-8C6-88F&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u56e0\u4e3a\u4e2d\u56fd\u8fd1\u4e09\u5341\u5e74\u624d\u7b97\u6539\u9769\u53d1\u5c55\uff0c\u4e09\u5341\u5e74\u7684\u53d1\u5c55\u8ffd\u8d76\u4e0a\u4e86\u5f88\u591a\u56fd\u5bb6\u4e00\u4e2a\u4e16\u7eaa\u7684\u811a\u6b65\u3002\u5982\u679c\u4f60\u8981\u786c\u626f500\u5e74\uff0c\u6211\u53ea\u80fd\u4ee5\u5173\u7231\u667a\u969c\u7684\u773c\u795e\u770b\u7740\u4f60&quot;, &quot;nick&quot;: &quot;waitinlee&quot;, &quot;length&quot;: &quot;62&quot;, &quot;rank&quot;: &quot;50&quot;, &quot;time&quot;: &quot;2017-04-18 11:50:29&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIFRD-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.2.936 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=waitinlee&amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.0.640.640.50%2F9a001259jw8eqi6mc128tj20hs0hs76c.jpg&amp;followers_count=98&amp;wb_user_id=2583695961&amp;wb_time=1492487430&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=\u7528\u62375419221284&amp;p_uid=5419221284&quot;, &quot;agree&quot;: &quot;49&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2583695961&quot;}], &quot;58F593EF-DB85280E-454C19D3-8C6-98B&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;14.215.161.210&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4ee5\u524d\u6c11\u4f17\u4ec0\u751f\u6d3b\uff0c\u73b0\u5728\u4ec0\u4e48\u751f\u6d3b\uff1f\u4e2d\u56fd\u73b0\u5728\u53ea\u8981\u4f60\u80af\u52aa\u529b\uff0c\u867d\u7136\u4e0d\u4e00\u5b9a\u6709\u8f66\u6709\u623f\uff0c\u4f46\u80af\u5b9a\u4e0d\u6101\u5403\u4f4f\u7a7f\u3002\u7535\u89c6\u3001\u6469\u6258\u8f66\u3001\u6d17\u8863\u673a\u3001\u7535\u8111\u3001\u624b\u673a\u3001\u8fd9\u4e9b\u90fd\u5df2\u7ecf\u662f\u666e\u901a\u5bb6\u5ead\u7684\u914d\u5907\u4e86\u300220\u5e74\u524d\u6709\u51e0\u5bb6\u6709\uff1f\u4f60\u8bf4\u6ca1\u6709\u60e0\u53ca\u6c11\u4f17\u662f\u7741\u773c\u8bf4\u778e\u8bdd\u3002\u867d\u7136\u8fd8\u6709\u5f88\u591a\u4e0d\u8db3\uff0c\u4f46\u4e2d\u56fd\u7684\u751f\u6d3b\u6c34\u5e73\u7684\u786e\u6709\u5f88\u5927\u7684\u98de\u8dc3\u3002&quot;, &quot;nick&quot;: &quot;\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&quot;, &quot;length&quot;: &quot;127&quot;, &quot;rank&quot;: &quot;442&quot;, &quot;time&quot;: &quot;2017-04-18 08:58:08&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg&amp;followers_count=24&amp;wb_user_id=5556351458&amp;wb_time=1492477087&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=8866\u5f00\u5fc3&amp;p_uid=1413695942&quot;, &quot;agree&quot;: &quot;441&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5556351458&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;117.136.97.39&quot;, &quot;area&quot;: &quot;\u5e7f\u897f&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F58496-75886127-14302C124-8C6-843&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;20\u5e74\u524d\uff1f\u4f60\u600e\u4e48\u4e0d\u8bf4500\u5e74\u524d\uff1f&quot;, &quot;nick&quot;: &quot;\u7528\u62375419221284&quot;, &quot;length&quot;: &quot;16&quot;, &quot;rank&quot;: &quot;34&quot;, &quot;time&quot;: &quot;2017-04-18 11:14:31&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;SOFT_TYPE=Build/LMY47D) Chrome/35.0.1916.138 Safari/537.36 T7/7.4 baiduboxapp/8.4&amp;area=\u5e7f\u897f&amp;wb_verified=0&amp;wb_screen_name=\u7528\u62375419221284&amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=3&amp;wb_user_id=5419221284&amp;wb_time=1492485270&amp;area=\u5e7f\u897f&amp;p_nick=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;p_uid=5556351458&quot;, &quot;agree&quot;: &quot;33&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5419221284&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F58496-75886127-14302C124-8C6-843&quot;, &quot;level&quot;: &quot;3&quot;, &quot;ip&quot;: &quot;14.152.68.195&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F58D06-E9844C3-9A001259-8C6-88F&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u56e0\u4e3a\u4e2d\u56fd\u8fd1\u4e09\u5341\u5e74\u624d\u7b97\u6539\u9769\u53d1\u5c55\uff0c\u4e09\u5341\u5e74\u7684\u53d1\u5c55\u8ffd\u8d76\u4e0a\u4e86\u5f88\u591a\u56fd\u5bb6\u4e00\u4e2a\u4e16\u7eaa\u7684\u811a\u6b65\u3002\u5982\u679c\u4f60\u8981\u786c\u626f500\u5e74\uff0c\u6211\u53ea\u80fd\u4ee5\u5173\u7231\u667a\u969c\u7684\u773c\u795e\u770b\u7740\u4f60&quot;, &quot;nick&quot;: &quot;waitinlee&quot;, &quot;length&quot;: &quot;62&quot;, &quot;rank&quot;: &quot;50&quot;, &quot;time&quot;: &quot;2017-04-18 11:50:29&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIFRD-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.2.936 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=waitinlee&amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.0.640.640.50%2F9a001259jw8eqi6mc128tj20hs0hs76c.jpg&amp;followers_count=98&amp;wb_user_id=2583695961&amp;wb_time=1492487430&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=\u7528\u62375419221284&amp;p_uid=5419221284&quot;, &quot;agree&quot;: &quot;49&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2583695961&quot;}]}, &quot;language&quot;: &quot;ch&quot;, &quot;encoding&quot;: &quot;utf-8&quot;, &quot;top&quot;: [], &quot;cmntlist&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;121.58.18.10&quot;, &quot;area&quot;: &quot;\u6d77\u5357\u6d77\u53e3&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59606-793A120A-16ECC0302-8C6-91B&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u662f\u7684\uff01\u6c11\u4f17\u751f\u6d3b\u6c34\u5e73\u5927\u6b65\u63d0\u9ad8\u662f\u4e8b\u5b9e\uff01\u867d\u7136\u8fd8\u6709\u4e0d\u8db3\uff01\u4f46\u8981\u77e5\u9053\u4e2d\u56fd\u8fd9\u4e48\u5927\uff0c\u6709\u95ee\u9898\u662f\u6b63\u5e38&quot;, &quot;nick&quot;: &quot;\u7528\u62376153831170&quot;, &quot;length&quot;: &quot;40&quot;, &quot;rank&quot;: &quot;13&quot;, &quot;time&quot;: &quot;2017-04-18 12:28:55&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;SOFT_TYPE=Build/CHM-CL00) Safari/537.36&amp;area=\u6d77\u5357\u6d77\u53e3&amp;wb_verified=0&amp;wb_screen_name=\u7528\u62376153831170&amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=1&amp;wb_user_id=6153831170&amp;wb_time=1492489734&amp;area=\u6d77\u5357\u6d77\u53e3&amp;p_nick=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;p_uid=5556351458&quot;, &quot;agree&quot;: &quot;12&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;6153831170&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1&quot;, &quot;level&quot;: &quot;3&quot;, &quot;ip&quot;: &quot;14.215.160.39&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F595B8-ED7A027-16DF4AF24-8C6-8CD&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5317\u6b27\u4e0d\u6b6250%\u5427&quot;, &quot;nick&quot;: &quot;\u7528\u62376139719460&quot;, &quot;length&quot;: &quot;8&quot;, &quot;rank&quot;: &quot;2&quot;, &quot;time&quot;: &quot;2017-04-18 12:27:37&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIKNT-AL10) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u7528\u62376139719460&amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=6&amp;wb_user_id=6139719460&amp;wb_time=1492489656&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=\u871a\u8bed\u6d41\u8a00_74190&amp;p_uid=1576847061&quot;, &quot;agree&quot;: &quot;1&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;6139719460&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;14.215.160.145&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59540-ED7A091-1485BB312-8C6-8CA&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u95ed\u5173\u9501\u56fd\u53ea\u4f1a\u843d\u540e \u73b0\u5728\u79fb\u52a8\u652f\u4ed8 \u5feb\u9012 \u5916\u5356\u53d1\u5c55\u592a\u5feb\u4e86\u3002\u592a\u65b9\u4fbf\u7684\u3002\u4e0d\u8fc7\u4e0d\u8981\u5fd8\u4e86\u6211\u4eec\u7684\u98df\u54c1\u5b89\u5168 \u7a7a\u6c14\u8d28\u91cf \u4ea4\u901a\u72b6\u51b5\u7b49\u7b49 \u505a\u7684\u8fd8\u8fdc\u8fdc\u4e0d\u591f&quot;, &quot;nick&quot;: &quot;\u4e00\u676f\u624e\u5564\u7684\u91cf&quot;, &quot;length&quot;: &quot;65&quot;, &quot;rank&quot;: &quot;12&quot;, &quot;time&quot;: &quot;2017-04-18 12:25:36&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=13&amp;SOFT_TYPE=UCBrowser/11.5.1.957 AliApp(TUnionSDK/0.1.15)&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u4e00\u676f\u624e\u5564\u7684\u91cf&amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=10&amp;wb_user_id=5508936466&amp;wb_time=1492489536&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;p_uid=5556351458&quot;, &quot;agree&quot;: &quot;11&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5508936466&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;117.12.74.210&quot;, &quot;area&quot;: &quot;\u5929\u6d25&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F594AE-750C4AD2-7F9E30AF-8C6-9DA&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e2d\u56fd\u8fd8\u662f\u8981\u6212\u9a84\u6212\u8e81\uff0c\u8e0f\u5b9e\u53d1\u5c55\u81ea\u5df1\uff0c\u505a\u597d\u6211\u4eec\u81ea\u5df1\u7684\u4e8b\u4e1a\u3002&quot;, &quot;nick&quot;: &quot;2141073583&quot;, &quot;length&quot;: &quot;27&quot;, &quot;rank&quot;: &quot;9&quot;, &quot;time&quot;: &quot;2017-04-18 12:23:10&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5929\u6d25&amp;wb_verified=0&amp;wb_screen_name=\u5a01\u4e0d\u9732&amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=34&amp;wb_user_id=2141073583&amp;wb_time=1492489390&amp;area=\u5929\u6d25&quot;, &quot;agree&quot;: &quot;9&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2141073583&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F56B38-B4ADE14E-16D5DDB9C-8C6-8AC&quot;, &quot;level&quot;: &quot;5&quot;, &quot;ip&quot;: &quot;202.45.129.183&quot;, &quot;area&quot;: &quot;\u65e5\u672c&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59478-CA2D81B7-5D7A2F91-8C6-8A2&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5317\u6b27\u5356\u6cb9\uff1f\u5927\u4e0a\u6d77\u4eba\u771f\u6709\u89c1\u8bc6\uff01\u8fd8\u6709\u8bf4\u5f97\u9ad8\u79d1\u6280\u597d\u50cf\u5f88\u7b80\u5355\u4e00\u6837\uff0c\u5927\u4e0a\u6d77\u51fa\u4eba\u624d[\u5077\u7b11][\u54c8\u54c8]&quot;, &quot;nick&quot;: &quot;1568288657&quot;, &quot;length&quot;: &quot;43&quot;, &quot;rank&quot;: &quot;8&quot;, &quot;time&quot;: &quot;2017-04-18 12:22:15&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u65e5\u672c&amp;area=\u65e5\u672c&amp;p_nick=\u4fca\u6770nautilus&amp;p_uid=6129834908&quot;, &quot;agree&quot;: &quot;7&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1568288657&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;36.187.228.208&quot;, &quot;area&quot;: &quot;\u65b0\u7586\u54c8\u5bc6&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59445-24BBE4D0-451438C1-8C6-92C&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u52a0\u6cb9&quot;, &quot;nick&quot;: &quot;1158953153&quot;, &quot;length&quot;: &quot;2&quot;, &quot;rank&quot;: &quot;0&quot;, &quot;time&quot;: &quot;2017-04-18 12:21:24&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u65b0\u7586\u54c8\u5bc6&amp;wb_verified=0&amp;wb_screen_name=xhs421120&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.180.180.50%2F451438c1jw1e8qgp5bmzyj2050050aa8.jpg&amp;followers_count=30&amp;wb_user_id=1158953153&amp;wb_time=1492489285&amp;area=\u65b0\u7586\u54c8\u5bc6&quot;, &quot;agree&quot;: &quot;0&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1158953153&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;10.71.2.95&quot;, &quot;area&quot;: &quot;\u5317\u4eac\u6d77\u6dc0&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5941F-A47025F-3C11E60C-8C6-8D0&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u8fc7\u53bb\u5341\u4e8c\u5e74\uff0c\u4e2d\u56fd\u84dd\u9886\u6536\u5165\u6fc0\u589e8\u500d\u2026\u2026\u8fd9\u4e2a\u6570\u636e\u5e76\u4e0d\u5ba2\u89c2\u2026\u2026\u62112005\u5e74\u51fa\u6765\u505a\u5de5\uff0c\u5c0f\u5382\u7684\u666e\u5de5\u5de5\u8d44\u4e00\u5343\u4e94\u5de6\u53f3\uff0c\u5230\u4e86\u4eca\u5e74\uff0c\u6211\u5728\u4e00\u4e2a\u653f\u5e9c\u6ce8\u8d44\u7684\u6db2\u6676\u9762\u677f\u4f01\u4e1a\u505a\u4e2d\u7ea7\u6280\u672f\u5458\uff0c\u5de5\u8d44\u516d\u5343\u5230\u4e03\u5343\uff0c\u4e0d\u8bba\u8fd9\u4e2d\u95f4\u6211\u81ea\u5df1\u7684\u8fdb\u6b65\uff0c\u7ea7\u522b\u7684\u63d0\u9ad8\uff0c\u5355\u8bba\u5de5\u8d44\uff0c\u4e5f\u5c31\u7ffb\u4e86\u56db\u500d\u591a\u4e00\u70b9\uff0c\uff08\u5982\u679c\u505a\u666e\u5de5\uff0c\u6216\u8005\u552e\u8d27\u5458\uff0c\u670d\u52a1\u5458\u4e4b\u7c7b\uff0c\u5de5\u8d44\u4e09\u56db\u5343\u7684\u5927\u6709\u4eba\u5728\uff09\uff0c\u5355\u8bba\u8d2d\u4e70\u529b\uff0c\u6211\u89c9\u5f97\u6211\u73b0\u5728\u7684\u516d\u4e03\u5343\u8ddf\u90a3\u65f6\u5019\u7684\u4e00\u5343\u591a\u6bd4\u8f83\uff0c\u6ca1\u6709\u591a\u5927\u5dee\u522b\uff0c\u90a3\u65f6\u5019\u8857\u5934\u5403\u4e00\u4e2a\u7092\u996d2.5\u5143\uff0c\u73b0\u5728\u516b\u5143\u8d77\uff0c&quot;, &quot;nick&quot;: &quot;\u98ce\u4e2d\u52b2\u8349198702&quot;, &quot;length&quot;: &quot;206&quot;, &quot;rank&quot;: &quot;12&quot;, &quot;time&quot;: &quot;2017-04-18 12:20:47&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/LRX21M) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36&amp;area=\u5317\u4eac\u6d77\u6dc0&amp;wb_verified=0&amp;wb_screen_name=\u98ce\u4e2d\u52b2\u8349198702&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.996.996.50%2F3c11e60cjw8f3c9sj2rivj20ro0rpq59.jpg&amp;followers_count=1&amp;wb_user_id=1007805964&amp;wb_time=1492489247&amp;area=\u5317\u4eac\u6d77\u6dc0&quot;, &quot;agree&quot;: &quot;11&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1007805964&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F56F0A-DB85280E-EA280EB0-8C6-8D5&quot;, &quot;parent&quot;: &quot;58F56F0A-DB85280E-EA280EB0-8C6-8D5&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;202.45.129.183&quot;, &quot;area&quot;: &quot;\u65e5\u672c&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5941B-CA2D81B7-5D7A2F91-8C6-8ED&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e0a\u6c7d\u901a\u7528\u4e94\u83f1\u5417\uff1f[\u5077\u7b11][\u54c8\u54c8]&quot;, &quot;nick&quot;: &quot;1568288657&quot;, &quot;length&quot;: &quot;16&quot;, &quot;rank&quot;: &quot;3&quot;, &quot;time&quot;: &quot;2017-04-18 12:20:42&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u65e5\u672c&amp;area=\u65e5\u672c&amp;p_nick=\u7528\u6237fkh05x1o56&amp;p_uid=3928493744&quot;, &quot;agree&quot;: &quot;2&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1568288657&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;palmnews&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;183.37.211.59&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u6df1\u5733&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F593FA-B725D33B-1643E5602-8C6-911&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u6367\u6740&quot;, &quot;nick&quot;: &quot;\u7231\u5728\u53bb\u5e74\u6628\u5929&quot;, &quot;length&quot;: &quot;2&quot;, &quot;rank&quot;: &quot;3&quot;, &quot;time&quot;: &quot;2017-04-18 12:20:10&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=&amp;SOFT_TYPE=&amp;area=\u5e7f\u4e1c\u6df1\u5733&amp;wb_verified=0&amp;wb_screen_name=\u7231\u5728\u53bb\u5e74\u6628\u5929&amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=46&amp;wb_user_id=5976774146&amp;wb_time=1492489210&amp;area=\u5e7f\u4e1c\u6df1\u5733&quot;, &quot;agree&quot;: &quot;3&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5976774146&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F58D06-E9844C3-9A001259-8C6-88F&quot;, &quot;level&quot;: &quot;4&quot;, &quot;ip&quot;: &quot;219.133.40.14&quot;, &quot;area&quot;: &quot;\u5317\u4eac\u6d77\u6dc0&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F593EF-DB85280E-454C19D3-8C6-98B&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u8bf4\u7684\u597d\uff01&quot;, &quot;nick&quot;: &quot;yanghua5725&quot;, &quot;length&quot;: &quot;4&quot;, &quot;rank&quot;: &quot;4&quot;, &quot;time&quot;: &quot;2017-04-18 12:20:01&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=qqweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/LMY47I) Chrome/37.0.0.0 MQQBrowser/7.4 Safari/537.36&amp;area=\u5317\u4eac\u6d77\u6dc0&amp;wb_verified=0&amp;wb_screen_name=yanghua5725&amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=16&amp;wb_user_id=1162615251&amp;wb_time=1492489201&amp;area=\u5317\u4eac\u6d77\u6dc0&amp;p_nick=waitinlee&amp;p_uid=2583695961&quot;, &quot;agree&quot;: &quot;3&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1162615251&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;14.152.68.162&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F593CC-E9844A2-6F2D2985-8C6-827&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5915\u9633\u65e0\u9650\u597d\uff0c\u53ea\u662f\u8fd1\u9ec4\u660f&quot;, &quot;nick&quot;: &quot;\u5112\u5efa&quot;, &quot;length&quot;: &quot;11&quot;, &quot;rank&quot;: &quot;1&quot;, &quot;time&quot;: &quot;2017-04-18 12:19:23&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/MRA58K) Chrome/40.0.2214.89 UCBrowser/11.4.2.936 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u5112\u5efa&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=22&amp;wb_user_id=1865230725&amp;wb_time=1492489164&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;agree&quot;: &quot;1&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1865230725&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;palmnews&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;222.223.56.115&quot;, &quot;area&quot;: &quot;\u6cb3\u5317\u6ca7\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5927D-DEDF3873-163BE44DA-8C6-92A&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u793e\u4f1a\u4fdd\u969c\u6ca1\u6709\u672c\u8d28\u63d0\u5347 \u9664\u4e86\u5c11\u6570\u51e0\u4e2a\u5927\u57ce\u5e02\u5176\u4ed6\u4eba\u90fd\u662f\u4e8c\u7b49\u516c\u6c11&quot;, &quot;nick&quot;: &quot;Amrice199606&quot;, &quot;length&quot;: &quot;29&quot;, &quot;rank&quot;: &quot;9&quot;, &quot;time&quot;: &quot;2017-04-18 12:13:49&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=&amp;SOFT_TYPE=&amp;area=\u6cb3\u5317\u6ca7\u5dde&amp;wb_verified=0&amp;wb_screen_name=Amrice199606&amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.12.640.640.50%2F006vUIA2jw8f95gxe90ykj30hs0igt9m.jpg&amp;followers_count=9&amp;wb_user_id=5968381146&amp;wb_time=1492488829&amp;area=\u6cb3\u5317\u6ca7\u5dde&quot;, &quot;agree&quot;: &quot;9&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5968381146&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F58D06-E9844C3-9A001259-8C6-88F&quot;, &quot;level&quot;: &quot;4&quot;, &quot;ip&quot;: &quot;59.33.107.21&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u4e2d\u5c71&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59278-3B216B15-451467A8-8C6-881&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e8c\u697c\u8fd9\u62ac\u6760\u592a\u641e\u7b11\u4e86\uff0c\u8981\u77e5\u9053\u5f88\u591a\u56fd\u5bb6\u7684\u751f\u6d3b\u6c34\u5e73\u8fd8\u5982\u4ed6\u4eec20\u5e74\u524d\u7684\u6c34\u5e73\u5462&quot;, &quot;nick&quot;: &quot;1158965160&quot;, &quot;length&quot;: &quot;34&quot;, &quot;rank&quot;: &quot;8&quot;, &quot;time&quot;: &quot;2017-04-18 12:13:44&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5e7f\u4e1c\u4e2d\u5c71&amp;wb_verified=0&amp;wb_screen_name=tanxu08&amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=1&amp;wb_user_id=1158965160&amp;wb_time=1492488824&amp;area=\u5e7f\u4e1c\u4e2d\u5c71&amp;p_nick=waitinlee&amp;p_uid=2583695961&quot;, &quot;agree&quot;: &quot;7&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1158965160&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;121.207.75.51&quot;, &quot;area&quot;: &quot;\u798f\u5efa\u6cc9\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59246-79CF4B33-C2C552ED-8C6-8C2&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5f52\u529f\u4e8e\u4f1f\u5927\u7684\uff0c\u52e4\u52b3\u7684\uff0c\u667a\u6167\u7684\uff0c\u4f20\u7edf\u7684\u4e2d\u56fd\u4eba\u6c11\u3002&quot;, &quot;nick&quot;: &quot;\u5bd2\u6c5f\u5782\u9493\u56fe&quot;, &quot;length&quot;: &quot;23&quot;, &quot;rank&quot;: &quot;5&quot;, &quot;time&quot;: &quot;2017-04-18 12:12:55&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;SOFT_TYPE=Build/MMB29M) Chrome/53.0.2785.146 Safari/537.36 XiaoMi/MiuiBrowser/8.7.5&amp;area=\u798f\u5efa\u6cc9\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u5bd2\u6c5f\u5782\u9493\u56fe&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.78.7.235.235.50%2Fc2c552edgw1fb0xb8wi9bj20aw070js4.jpg&amp;followers_count=3&amp;wb_user_id=3267711725&amp;wb_time=1492488774&amp;area=\u798f\u5efa\u6cc9\u5dde&quot;, &quot;agree&quot;: &quot;5&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;3267711725&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F55930-7D6B69D2-52FC936B-8C6-894&quot;, &quot;parent&quot;: &quot;58F57CF1-DD005ED9-9F481B41-8C6-8F2&quot;, &quot;level&quot;: &quot;3&quot;, &quot;ip&quot;: &quot;202.45.129.183&quot;, &quot;area&quot;: &quot;\u65e5\u672c&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59210-CA2D81B7-5D7A2F91-8C6-8ED&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e00\u770b\u5c31\u662fM\u5de6\uff0c\u751f\u591a\u4e86\u90fd\u517b\u4e0d\u8d77\uff0c\u8fd8\u4eba\u53e3\u7ea2\u5229&quot;, &quot;nick&quot;: &quot;1568288657&quot;, &quot;length&quot;: &quot;20&quot;, &quot;rank&quot;: &quot;3&quot;, &quot;time&quot;: &quot;2017-04-18 12:11:59&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u65e5\u672c&amp;area=\u65e5\u672c&amp;p_nick=\u91cd\u9547\u4e4b\u8a89&amp;p_uid=2672302913&quot;, &quot;agree&quot;: &quot;2&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1568288657&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;palmnews&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1&quot;, &quot;level&quot;: &quot;3&quot;, &quot;ip&quot;: &quot;114.242.248.232&quot;, &quot;area&quot;: &quot;\u5317\u4eac&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F591F7-72F2F8E8-A34740CF-8C6-86E&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u65e0\u77e5\u548c\u611a\u6627\u7684 loser\u624d\u4f1a\u544a\u8bc9\u7f51\u6c11\u201c\u5916\u56fd\u7684\u6708\u4eae\u6bd4\u56fd\u5185\u7684\u5706\u201d&quot;, &quot;nick&quot;: &quot;\u72fc\u4eba\u6740\u5e38\u5e74\u83b7\u80dc\u8005&quot;, &quot;length&quot;: &quot;30&quot;, &quot;rank&quot;: &quot;1&quot;, &quot;time&quot;: &quot;2017-04-18 12:11:35&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=&amp;SOFT_TYPE=&amp;area=\u5317\u4eac&amp;wb_verified=0&amp;wb_screen_name=\u72fc\u4eba\u6740\u5e38\u5e74\u83b7\u80dc\u8005&amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fcrop.1.0.510.510.50%2Fa34740cfly8fek52dsg8bj20e80e63zz.jpg&amp;followers_count=1511&amp;wb_user_id=2739355855&amp;wb_time=1492488695&amp;area=\u5317\u4eac&amp;p_nick=\u871a\u8bed\u6d41\u8a00_74190&amp;p_uid=1576847061&quot;, &quot;agree&quot;: &quot;0&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2739355855&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;palmnews&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;125.111.82.100&quot;, &quot;area&quot;: &quot;\u6d59\u6c5f\u5b81\u6ce2&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F591DB-7D6F5264-97B14195-8C6-940&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e2d\u56fd\u4eba\u7684\u52e4\u52b3 \u806a\u660e\u5728\u5168\u4e16\u754c\u5404\u6c11\u65cf\u4e2d\u65e0\u4e0e\u4f26\u6bd4\uff0c\u52a0\u4e0a\u7a33\u5b9a\u7684\u73af\u5883\u548c\u56fd\u4eba\u7684\u53d1\u8d22\u81f4\u5bcc\u4e4b\u5fc3\u524d\u6240\u672a\u6709\uff0c\u6210\u4e3a\u4e16\u754c\u7b2c\u4e00\u5f3a\u56fd\u6307\u65e5\u53ef\u5f85\u3002&quot;, &quot;nick&quot;: &quot;\u9a6c\u4e0a\u6709\u623f\u7f51_\u6d77\u5357\u4e09\u4e9a\u5b81\u6ce2\u623f\u4ea7&quot;, &quot;length&quot;: &quot;57&quot;, &quot;rank&quot;: &quot;5&quot;, &quot;time&quot;: &quot;2017-04-18 12:11:07&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=&amp;SOFT_TYPE=&amp;area=\u6d59\u6c5f\u5b81\u6ce2&amp;wb_verified=0&amp;wb_screen_name=\u9a6c\u4e0a\u6709\u623f\u7f51_\u6d77\u5357\u4e09\u4e9a\u5b81\u6ce2\u623f\u4ea7&amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.199.199.50%2F97b14195gw1f9ctatrzrlj205k05kdg8.jpg&amp;followers_count=4098&amp;wb_user_id=2544976277&amp;wb_time=1492488667&amp;area=\u6d59\u6c5f\u5b81\u6ce2&quot;, &quot;agree&quot;: &quot;4&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2544976277&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F55875-7B7DC18A-160C230EF-8C6-8C8&quot;, &quot;parent&quot;: &quot;58F57D61-DD005ED9-9F481B41-8C6-8ED&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;202.45.129.183&quot;, &quot;area&quot;: &quot;\u65e5\u672c&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F591AE-CA2D81B7-5D7A2F91-8C6-A08&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u6ede\u80c0\u903b\u8f91\uff0c\u600e\u4e48\u5c31\u8fd9\u4e2a\u5730\u65b9\u5f3a\u76d7\u591a\u5462\uff1f\u5176\u4ed6\u5730\u65b9\u5f3a\u76d7\u600e\u4e48\u4e0d\u591a\u5462\uff1f\u81ea\u5df1\u7528\u8111\u60f3\u53bb\uff0c\u5982\u679c\u4f60\u6709\u8111\u7684\u8bdd[\u5077\u7b11][\u54c8\u54c8]&quot;, &quot;nick&quot;: &quot;1568288657&quot;, &quot;length&quot;: &quot;51&quot;, &quot;rank&quot;: &quot;2&quot;, &quot;time&quot;: &quot;2017-04-18 12:10:21&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u65e5\u672c&amp;area=\u65e5\u672c&amp;p_nick=\u91cd\u9547\u4e4b\u8a89&amp;p_uid=2672302913&quot;, &quot;agree&quot;: &quot;1&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1568288657&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;palmnews&quot;, &quot;thread&quot;: &quot;58F55411-6F792978-812AA718-8C6-83A&quot;, &quot;parent&quot;: &quot;58F55411-6F792978-812AA718-8C6-83A&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;122.156.219.198&quot;, &quot;area&quot;: &quot;\u9ed1\u9f99\u6c5f\u5927\u5e86&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5917A-7A9CDBC6-706633CB-8C6-7D9&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u56fd\u5bb6\u4e0d\u662f\u4e00\u4e2a\u4eba\u7ec4\u6210\u7684\uff0c\u5341\u51e0\u4ebf\u4eba\u6c11\u7ec4\u6210\u7684\uff0c\u4f60\u4ee5\u4e3a\u90fd\u50cf\u4f60\u4e0d\u4ea2\u5ffd\u60a0\u5462\uff1f&quot;, &quot;nick&quot;: &quot;\u51b0\u96ea\u5c0f\u738b\u5b50&quot;, &quot;length&quot;: &quot;32&quot;, &quot;rank&quot;: &quot;7&quot;, &quot;time&quot;: &quot;2017-04-18 12:09:29&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=&amp;SOFT_TYPE=&amp;area=\u9ed1\u9f99\u6c5f\u5927\u5e86&amp;wb_verified=0&amp;wb_screen_name=\u51b0\u96ea\u5c0f\u738b\u5b50&amp;wb_profile_img=http%3A%2F%2Ftva3.sinaimg.cn%2Fcrop.0.0.180.180.50%2F706633cbjw1e8qgp5bmzyj2050050aa8.jpg&amp;followers_count=61&amp;wb_user_id=1885746123&amp;wb_time=1492488570&amp;area=\u9ed1\u9f99\u6c5f\u5927\u5e86&amp;p_nick=\u5200\u5c16\u6fb7\u821e&amp;p_uid=2167056152&quot;, &quot;agree&quot;: &quot;6&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1885746123&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F585C8-758D75A1-1487E0A75-8C6-898&quot;, &quot;parent&quot;: &quot;58F585C8-758D75A1-1487E0A75-8C6-898&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;202.45.129.183&quot;, &quot;area&quot;: &quot;\u65e5\u672c&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F59113-CA2D81B7-5D7A2F91-8C6-95F&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;50\u90a3\u597d\uff0c\u518d\u53d19\u4e2a\u5e16\u4eca\u5929\u7684\u996d\u94b1\u6709\u4e86[\u5077\u7b11][\u54c8\u54c8]&quot;, &quot;nick&quot;: &quot;1568288657&quot;, &quot;length&quot;: &quot;25&quot;, &quot;rank&quot;: &quot;5&quot;, &quot;time&quot;: &quot;2017-04-18 12:07:46&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u65e5\u672c&amp;area=\u65e5\u672c&amp;p_nick=\u82b1\u7530\u519c\u592b_54159&amp;p_uid=5511187061&quot;, &quot;agree&quot;: &quot;4&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1568288657&quot;}], &quot;news&quot;: {&quot;status&quot;: &quot;N_NORMAL&quot;, &quot;groups&quot;: &quot;&quot;, &quot;show&quot;: &quot;M_DEFAULT&quot;, &quot;default&quot;: &quot;M_CHECK&quot;, &quot;title&quot;: &quot;\u7f8e\u5a92:\u4e2d\u56fd\u5947\u8ff9\u6ca1\u6709\u7ed3\u675f \u800c\u662f\u8fdb\u5165\u4e86\u7b2c\u4e8c\u9636\u6bb5&quot;, &quot;tagalias&quot;: &quot;&quot;, &quot;column&quot;: &quot;comos-56044&quot;, &quot;topic&quot;: &quot;&quot;, &quot;subnum&quot;: &quot;0&quot;, &quot;script&quot;: &quot;&quot;, &quot;base&quot;: &quot;0&quot;, &quot;url&quot;: &quot;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml&quot;, &quot;anonymous&quot;: &quot;A_DEFAULT&quot;, &quot;time&quot;: &quot;2017-04-18 02:49:10&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;countmode&quot;: &quot;C_HIDE,C_QREPLY,C_SHOW&quot;, &quot;config&quot;: &quot;url_wap=http%3A%2F%2Fnews.sina.cn%2F2017-04-18%2Fdetail-ifyeimzx6745829.d.html&quot;, &quot;channel&quot;: &quot;gn&quot;}, &quot;grouplist&quot;: [], &quot;hot_list&quot;: [{&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;124.207.17.226&quot;, &quot;area&quot;: &quot;\u5317\u4eac&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F54F60-7CCF11E2-5DFCC6D5-8C6-89D&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4e2d\u56fd\u81ea\u53e4\u90fd\u662f\u6062\u590d\u529b\u5f3a\uff01\u65e0\u8bba\u90a3\u4e2a\u65f6\u671f\u53ea\u8981\u662f\u653f\u6cbb\u3001\u519b\u4e8b\u7a33\u5b9a\u5e76\u4e14\u5f00\u653e\u7684\u60c5\u51b5\u4e0b\u7528\u4e0d\u4e86\u591a\u5c11\u5e74\u5c31\u53ef\u4ee5\u8fc5\u901f\u53d1\u5c55\u5230\u4e00\u4e2a\u6bd4\u8f83\u9ad8\u7684\u6c34\u5e73\uff01\u8fd9\u662f\u4e16\u754c\u4e0a\u4efb\u4f55\u4e00\u4e2a\u56fd\u5bb6\u548c\u6c11\u65cf\u65e0\u6cd5\u6bd4\u62df\u7684\uff01&quot;, &quot;nick&quot;: &quot;1576847061&quot;, &quot;length&quot;: &quot;78&quot;, &quot;rank&quot;: &quot;1232&quot;, &quot;time&quot;: &quot;2017-04-18 07:27:31&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5317\u4eac&amp;wb_verified=0&amp;wb_screen_name=\u871a\u8bed\u6d41\u8a00_74190&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=9&amp;wb_user_id=1576847061&amp;wb_time=1492471648&amp;area=\u5317\u4eac&quot;, &quot;agree&quot;: &quot;1227&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1576847061&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;client&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;111.121.41.120&quot;, &quot;area&quot;: &quot;\u8d35\u5dde\u8d35\u9633&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55411-6F792978-812AA718-8C6-83A&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u8fd9\u662f\u7f8e\u56fd\u4eba\u7684\u7cd6\u8863\u70ae\u5f39\uff0c\u662f\u6367\u6740\u3002\u5f53\u5e74\u5c31\u662f\u8fd9\u4e48\u5439\u57ae\u5c0f\u65e5\u672c\u7684\uff0c\u865a\u5fc3\u4f7f\u4eba\u8fdb\u6b65\uff0c\u9a84\u50b2\u4f7f\u4eba\u843d\u540e\u3002&quot;, &quot;nick&quot;: &quot;\u5200\u5c16\u6f2b\u821e&quot;, &quot;length&quot;: &quot;42&quot;, &quot;rank&quot;: &quot;1099&quot;, &quot;time&quot;: &quot;2017-04-18 07:47:33&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;OS_LANG=zh&amp;SOFT_TYPE=SinaNews_v495&amp;LATITUDE=26.564052&amp;LONGITUDE=106.688995&amp;client_ip=111.121.41.120&amp;port=21506&amp;from=palmnews&amp;wb_verified=0&amp;wb_screen_name=\u5200\u5c16\u6fb7\u821e&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.768.768.50%2F812aa718jw8ex6jtxc0o5j20lc0lcjsl.jpg&amp;followers_count=39&amp;wb_user_id=2167056152&amp;wb_time=1492472849&amp;area=\u8d35\u5dde\u8d35\u9633&quot;, &quot;agree&quot;: &quot;1097&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2167056152&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;14.152.68.63&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F548DB-E98443F-9BB1F267-8C6-90C&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5947\u8ff9\u6240\u521b\u9020\u7684\u6210\u679c\u5e94\u591a\u591a\u60e0\u53ca\u4e8e\u5e7f\u5927\u6c11\u4f17\uff01&quot;, &quot;nick&quot;: &quot;561017abc_106&quot;, &quot;length&quot;: &quot;19&quot;, &quot;rank&quot;: &quot;1037&quot;, &quot;time&quot;: &quot;2017-04-18 06:59:39&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HuaweiMediaPad) UCBrowser/10.9.1.711 U3/0.8.0 Safari/534.30&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=561017abc_106&amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=0&amp;wb_user_id=2612130407&amp;wb_time=1492469979&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;agree&quot;: &quot;1035&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2612130407&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;111.161.46.229&quot;, &quot;area&quot;: &quot;\u5929\u6d25&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55364-6FA12EE5-12CBD6D6E-8C6-932&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u57fa\u672c\u90fd\u662f\u623f\u5b50\u6da8\u7684&quot;, &quot;nick&quot;: &quot;\u7528\u6237pkje9oqkf7&quot;, &quot;length&quot;: &quot;8&quot;, &quot;rank&quot;: &quot;756&quot;, &quot;time&quot;: &quot;2017-04-18 07:44:39&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/MMB29M) Chrome/40.0.2214.89 UCBrowser/11.4.5.937 Safari/537.36&amp;area=\u5929\u6d25&amp;wb_verified=0&amp;wb_screen_name=\u7528\u6237pkje9oqkf7&amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=1&amp;wb_user_id=5045579118&amp;wb_time=1492472676&amp;area=\u5929\u6d25&quot;, &quot;agree&quot;: &quot;756&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5045579118&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F547C0-31573863-DCD0C9AA-8C6-89D&quot;, &quot;level&quot;: &quot;2&quot;, &quot;ip&quot;: &quot;124.207.17.226&quot;, &quot;area&quot;: &quot;\u5317\u4eac&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u5475\u5475\uff0c\u4e00\u8fb9\u60f3\u8981\u514d\u8d39\u7684\u4e00\u8fb9\u53c8\u60f3\u4f4e\u7a0e\u6536\uff01\u90a3\u8bf7\u95ee\u94b1\u4ece\u54ea\u91cc\u6765\uff1f\u5317\u6b27\u798f\u5229\u662f\u597d\uff0c\u4f46\u662f\u7a0e\u7387\u63a5\u8fd150%\uff01\u4f60\u53d7\u5f97\u4e86\u5417\uff1f&quot;, &quot;nick&quot;: &quot;1576847061&quot;, &quot;length&quot;: &quot;50&quot;, &quot;rank&quot;: &quot;481&quot;, &quot;time&quot;: &quot;2017-04-18 07:34:07&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5317\u4eac&amp;wb_verified=0&amp;wb_screen_name=\u871a\u8bed\u6d41\u8a00_74190&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=9&amp;wb_user_id=1576847061&amp;wb_time=1492472047&amp;area=\u5317\u4eac&quot;, &quot;agree&quot;: &quot;478&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1576847061&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;183.193.185.176&quot;, &quot;area&quot;: &quot;\u4e0a\u6d77&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55631-B7C1B9B0-15AFD8BF3-8C6-88F&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u7b2c\u4e00\u9636\u6bb5\uff1a\u5947\u8ff9\u3002\u7b2c\u4e8c\u9636\u6bb5\uff1a\u5947\u8469\u3002&quot;, &quot;nick&quot;: &quot;\u7528\u62375821533171&quot;, &quot;length&quot;: &quot;16&quot;, &quot;rank&quot;: &quot;460&quot;, &quot;time&quot;: &quot;2017-04-18 07:56:34&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;SOFT_TYPE=Build/SANFRANCISCO) Chrome/46.0.2490.11 Safari/537.36&amp;area=\u4e0a\u6d77&amp;wb_verified=0&amp;wb_screen_name=\u7528\u62375821533171&amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=2&amp;wb_user_id=5821533171&amp;wb_time=1492473393&amp;area=\u4e0a\u6d77&quot;, &quot;agree&quot;: &quot;460&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5821533171&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;58F54F60-7CCF11E2-5DFCC6D5-8C6-89D&quot;, &quot;parent&quot;: &quot;58F54F60-7CCF11E2-5DFCC6D5-8C6-89D&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;202.116.70.152&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F55D3C-CA744698-ABEFEB0E-8C6-923&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u8fd9\u4e9b\u90fd\u8981\u5f52\u529f\u4e8e\u5343\u767e\u5e74\u6765\u7684\u5112\u5bb6\u601d\u60f3\u548c\u4efb\u52b3\u4efb\u6028\u7684\u4e2d\u56fd\u4eba\u6c11&quot;, &quot;nick&quot;: &quot;2884627214&quot;, &quot;length&quot;: &quot;26&quot;, &quot;rank&quot;: &quot;448&quot;, &quot;time&quot;: &quot;2017-04-18 08:26:40&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=Hello_\u5e7f\u5dde&amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.198.198.50%2Fabefeb0egw1e839n9chjmj205k05jaa4.jpg&amp;followers_count=72&amp;wb_user_id=2884627214&amp;wb_time=1492475197&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=\u871a\u8bed\u6d41\u8a00_74190&amp;p_uid=1576847061&quot;, &quot;agree&quot;: &quot;447&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;2884627214&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;parent&quot;: &quot;58F551FD-6F01419B-544349C6-8C6-88C&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;14.215.161.210&quot;, &quot;area&quot;: &quot;\u5e7f\u4e1c\u5e7f\u5dde&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u4ee5\u524d\u6c11\u4f17\u4ec0\u751f\u6d3b\uff0c\u73b0\u5728\u4ec0\u4e48\u751f\u6d3b\uff1f\u4e2d\u56fd\u73b0\u5728\u53ea\u8981\u4f60\u80af\u52aa\u529b\uff0c\u867d\u7136\u4e0d\u4e00\u5b9a\u6709\u8f66\u6709\u623f\uff0c\u4f46\u80af\u5b9a\u4e0d\u6101\u5403\u4f4f\u7a7f\u3002\u7535\u89c6\u3001\u6469\u6258\u8f66\u3001\u6d17\u8863\u673a\u3001\u7535\u8111\u3001\u624b\u673a\u3001\u8fd9\u4e9b\u90fd\u5df2\u7ecf\u662f\u666e\u901a\u5bb6\u5ead\u7684\u914d\u5907\u4e86\u300220\u5e74\u524d\u6709\u51e0\u5bb6\u6709\uff1f\u4f60\u8bf4\u6ca1\u6709\u60e0\u53ca\u6c11\u4f17\u662f\u7741\u773c\u8bf4\u778e\u8bdd\u3002\u867d\u7136\u8fd8\u6709\u5f88\u591a\u4e0d\u8db3\uff0c\u4f46\u4e2d\u56fd\u7684\u751f\u6d3b\u6c34\u5e73\u7684\u786e\u6709\u5f88\u5927\u7684\u98de\u8dc3\u3002&quot;, &quot;nick&quot;: &quot;\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&quot;, &quot;length&quot;: &quot;127&quot;, &quot;rank&quot;: &quot;442&quot;, &quot;time&quot;: &quot;2017-04-18 08:58:08&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;from=ucweb&amp;OS_TYPE=14&amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;wb_verified=0&amp;wb_screen_name=\u68ee\u6797\u516c\u4e3b\u51c0\u5316\u5668499\u5143&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg&amp;followers_count=24&amp;wb_user_id=5556351458&amp;wb_time=1492477087&amp;area=\u5e7f\u4e1c\u5e7f\u5dde&amp;p_nick=8866\u5f00\u5fc3&amp;p_uid=1413695942&quot;, &quot;agree&quot;: &quot;441&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5556351458&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;wap&quot;, &quot;thread&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;parent&quot;: &quot;58F51574-60EACE16-B8E57407-8C6-9B2&quot;, &quot;level&quot;: &quot;1&quot;, &quot;ip&quot;: &quot;101.90.253.194&quot;, &quot;area&quot;: &quot;\u4e0a\u6d77&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F54759-655AFDC2-696EE40E-8C6-992&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u770b\u5230\u4f4e\u4ef7\u4f4f\u623f\u5c31\u7279\u4e48\u7b11\u4e86&quot;, &quot;nick&quot;: &quot;Neil_de_\u8089\u8089\u548c\u7403\u7403\u54d2\u5bb6&quot;, &quot;length&quot;: &quot;11&quot;, &quot;rank&quot;: &quot;315&quot;, &quot;time&quot;: &quot;2017-04-18 06:53:16&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;OS_TYPE=14&amp;SOFT_TYPE=Build/NRD90M) SamsungBrowser/5.0 Chrome/51.0.2704.106 Safari/537.36&amp;area=\u4e0a\u6d77&amp;wb_verified=1&amp;wb_screen_name=Neil_de_\u8089\u8089\u548c\u7403\u7403\u54d2\u5bb6&amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.83.0.493.493.50%2F696ee40ejw8eozry1zu5sj20ik0dpdgk.jpg&amp;wb_description=\u4e1c\u822a\u5de5\u7a0b\u6280\u672f\u516c\u53f8\u6ce2\u97f3\u98de\u673a\u7ef4\u4fee\u5e08\u8c22\u4e00\u6625&amp;followers_count=242&amp;wb_user_id=1768875022&amp;wb_verified_type=0&amp;wb_time=1492469593&amp;area=\u4e0a\u6d77&amp;p_nick=Maryland-DC&amp;p_uid=3102045191&quot;, &quot;agree&quot;: &quot;314&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;1768875022&quot;}, {&quot;status&quot;: &quot;M_PASS&quot;, &quot;usertype&quot;: &quot;&quot;, &quot;thread&quot;: &quot;&quot;, &quot;parent&quot;: &quot;&quot;, &quot;level&quot;: &quot;0&quot;, &quot;ip&quot;: &quot;118.124.239.246&quot;, &quot;area&quot;: &quot;\u56db\u5ddd\u4e50\u5c71&quot;, &quot;newsid&quot;: &quot;comos-fyeimzx6745829&quot;, &quot;mid&quot;: &quot;58F54990-767CEFF6-1313DBE69-8C6-921&quot;, &quot;against&quot;: &quot;0&quot;, &quot;content&quot;: &quot;\u6539\u9769\u5f00\u653e\u7684\u6210\u679c\uff0c\u5e94\u8be5\u66f4\u591a\u5730\u548c\u8001\u767e\u59d3\u5171\u4eab\uff01&quot;, &quot;nick&quot;: &quot;5121097321&quot;, &quot;length&quot;: &quot;20&quot;, &quot;rank&quot;: &quot;251&quot;, &quot;time&quot;: &quot;2017-04-18 07:02:41&quot;, &quot;vote&quot;: &quot;0&quot;, &quot;config&quot;: &quot;client_port=0&amp;area=\u56db\u5ddd\u4e50\u5c71&amp;wb_verified=0&amp;wb_screen_name=\u4e00\u9519\u5728\u951938379&amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif&amp;followers_count=1&amp;wb_user_id=5121097321&amp;wb_time=1492470160&amp;area=\u56db\u5ddd\u4e50\u5c71&quot;, &quot;agree&quot;: &quot;251&quot;, &quot;channel&quot;: &quot;gn&quot;, &quot;uid&quot;: &quot;5121097321&quot;}]}}</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">jd = json.loads(comment_res.text.strip(<span class="string">'var data='</span>))</span><br><span class="line">jd[<span class="string">'result'</span>][<span class="string">'count'</span>][<span class="string">'total'</span>]</span><br></pre></td></tr></table></figure>

<pre><code>10756</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#artibody_url.split('/')[-1].rstrip('.shtml')</span></span><br><span class="line"><span class="comment"># newsid=comos-fyeimzx6745829</span></span><br><span class="line"><span class="comment">#news_id = artibody_url.split('/')[-1].lstrip('doc-i').rstrip('.shtml')</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">news_id = re.search(<span class="string">'doc-i(.*).shtml'</span>, artibody_url).group(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">form_comment_url = <span class="string">'http://comment5.news.sina.com.cn/page/info?version=1&amp;\</span></span><br><span class="line"><span class="string">format=js&amp;channel=gn&amp;newsid=comos-&#123;&#125;&amp;group=&amp;compress=0&amp;ie=utf-8&amp;oe=utf-8&amp;page=1&amp;page_size=20'</span></span><br><span class="line">form_comment_url.format(news_id)</span><br></pre></td></tr></table></figure>

<pre><code>&apos;http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=gn&amp;newsid=comos-fyeimzx6745829&amp;group=&amp;compress=0&amp;ie=utf-8&amp;oe=utf-8&amp;page=1&amp;page_size=20&apos;</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">artibody_url = <span class="string">'http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCommentCounts</span><span class="params">(news_url)</span>:</span></span><br><span class="line">    news_id = re.search(<span class="string">'doc-i(.*).shtml'</span>, news_url).group(<span class="number">1</span>)</span><br><span class="line">    comments = requests.get(form_comment_url.format(news_id))</span><br><span class="line">    jd = json.loads(comments.text.lstrip(<span class="string">'var data='</span>))</span><br><span class="line">    <span class="keyword">return</span> jd[<span class="string">'result'</span>][<span class="string">'count'</span>][<span class="string">'total'</span>]</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">getCommentCounts(artibody_url)</span><br></pre></td></tr></table></figure>

<pre><code>13051</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getNewsDetail</span><span class="params">(newsurl)</span>:</span></span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    res = requests.get(newsurl)</span><br><span class="line">    res.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    soup = BeautifulSoup(res.text, <span class="string">'html.parser'</span>)</span><br><span class="line">    result[<span class="string">'title'</span>] = soup.select(<span class="string">'title'</span>)[<span class="number">0</span>].text</span><br><span class="line">    result[<span class="string">'newssource'</span>] = soup.select(<span class="string">'p'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</span><br><span class="line">    artibody_time = soup.select(<span class="string">'.time-source'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</span><br><span class="line">    result[<span class="string">'dt'</span>] = datetime.strptime(artibody_time, <span class="string">'%Y年%m月%d日%H:%M'</span>)</span><br><span class="line">    result[<span class="string">'article'</span>] = <span class="string">' '</span>.join([p.text.strip() <span class="keyword">for</span> p <span class="keyword">in</span> soup.select(<span class="string">'#artibody p'</span>)[<span class="number">1</span>:<span class="number">-2</span>]])</span><br><span class="line">    result[<span class="string">'editor'</span>] = soup.select(<span class="string">'.article-editor'</span>)[<span class="number">0</span>].text.lstrip(<span class="string">'责任编辑：'</span>)</span><br><span class="line">    result[<span class="string">'comments'</span>] = getCommentCounts(newsurl)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">getNewsDetail(artibody_url)</span><br></pre></td></tr></table></figure>

<pre><code>{&apos;article&apos;: &apos;[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。 虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。 日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。 19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。 “中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。&apos;,
 &apos;comments&apos;: 13152,
 &apos;dt&apos;: datetime.datetime(2017, 4, 18, 2, 25),
 &apos;editor&apos;: &apos;李伟山 &apos;,
 &apos;newssource&apos;: &apos;原标题：美媒：中国奇迹没有结束，而是进入了第二阶段&apos;,
 &apos;title&apos;: &apos;美媒:中国奇迹没有结束 而是进入了第二阶段|中国经济_新浪新闻&apos;}</code></pre>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
</search>
